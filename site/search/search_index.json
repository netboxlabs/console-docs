{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the NetBox Labs Documentation Site","text":"<p>The home of documentation for NetBox Cloud, Enterprise, Integrations, SDKs and Extensions. </p> <ul> <li> <p> NetBox Cloud</p> <p>All the power and flexibility of NetBox, rock solid and secure. </p> <p>Focus on building and evolving your network.</p> <p>Get started with NetBox Cloud</p> </li> <li> <p> NetBox Enterprise</p> <p>The power of NetBox in your own infrastructure, </p> <p>backed and enhanced by NetBox Labs.</p> <p>Get started with NetBox Enterprise</p> </li> </ul>"},{"location":"#netbox-labs-products-integrations","title":"NetBox Labs Products &amp; Integrations","text":"<ul> <li> <p>NetBox Discovery</p> <p>Map your network and infrastructure.  Accelerate documentation.  Streamline your automation journey.</p> <p>Learn more about NetBox Discovery</p> </li> <li> <p>NetBox Assurance</p> <p>Identify, understand, and eliminate  operational drift.</p> <p>Learn more about NetBox Assurance</p> </li> <li> <p>NetBox Branching Plugin</p> <p>This NetBox plugin introduces branching functionality. A branch is a discrete, static snapshot of the NetBox database which can be modified independently and later merged back into the main database. </p> <p>Learn more about NetBox Branching</p> </li> <li> <p>NetBox Change Management Plugin</p> <p>This feature family brings powerful workflows to NetBox for team collaboration in designing, testing, and deploying network and infrastructure changes.</p> <p>Learn more about NetBox Change Management</p> </li> <li> <p>Diode</p> <p>Diode is a NetBox data ingestion service that greatly simplifies and enhances the process to add and update network data in NetBox, ensuring your network source of truth is always accurate and can be trusted to power your network automation pipelines.</p> <p>Learn more about Diode</p> </li> </ul>"},{"location":"#open-source-projects","title":"Open Source Projects","text":"<p>NetBox Labs builds software in the open, with thriving communities. We help develop multiple open source projects, such as NetBox and Orb.</p> <ul> <li> <p> NetBox Community</p> <p>NetBox exists to empower network engineers. Since its release in 2016, it has become the go-to solution for modeling and documenting network infrastructure for thousands of organizations worldwide.</p> <p>Visit the NetBox Community GitHub page</p> </li> <li> <p>NetBox Discovery Agent</p> <p>NetBox discovery agents map network resources and gather device information to build a comprehensive model of your infrastructure.</p> <p>Learn more about the NetBox Discovery Agent</p> </li> </ul>"},{"location":"maintenance/","title":"Scheduled Maintenance","text":""},{"location":"maintenance/#netbox-upgrade-maintenance-windows","title":"NetBox Upgrade Maintenance Windows","text":"<p>NetBox Labs designates the following weekly upgrade windows specifically to upgrade the version of NetBox and NetBox components for NetBox Cloud customers on Tuesdays and Thursdays. These upgrade windows are used for patch, minor, and major upgrades to NetBox. Customers are assigned to one of these windows based on their time zone.</p> <ul> <li>London (UK): 7:00\u20139:00 am (Local London time, year-round)</li> <li>US Eastern Time: 6:00\u20138:00 am (Local ET, year-round)</li> </ul> <p>Note</p> <p>These windows always follow local clocks in London and New York. Times automatically adjust with daylight saving.</p> <p>We will not perform upgrades during these windows without first notifying affected customers. If an upgrade is scheduled, customers will receive advance notice with details about the changes and any potential impact on their service.</p> <p>If you have any questions about these upgrade windows or anything else related to NetBox Cloud, please reach out to the NetBox Labs Support Team. We are happy to assist via email or schedule a call at your convenience.</p>"},{"location":"maintenance/#general-system-maintenance-windows","title":"General System Maintenance Windows","text":"<p>There are weekly maintenance windows for the NetBox Cloud Platform on Tuesdays and Thursdays between the hours of 7:00\u20139:00 am (Local London time, year-round)</p> <p>These windows are designated for routine maintenance on the infrastructure supporting the NetBox Labs Console, NetBox Cloud instances, and other cloud products and services offered by NetBox Labs. This includes applying necessary security patches and making other infrastructure adjustments to enhance reliability, security, and performance.</p> <p>Not every maintenance window will be utilized, and when maintenance is performed, we always strive to complete it with no disruption to your service. If downtime is unavoidable, it is expected to last only a few minutes. In the rare case that extended downtime is required, we will provide advance notice and schedule a separate one-time maintenance window on status.netboxlabs.com. Routine Tuesday/Thursday maintenance windows will not be listed on the status page.</p> <p>If you have any automation jobs running during these maintenance windows, we recommend ensuring they include business logic to properly handle failed requests and/or adjusting their schedule to run outside the maintenance windows.</p> <p>Please don\u2019t hesitate to reach out to the NetBox Labs Support Team if you have any questions. We\u2019re happy to connect via call or email to assist you.</p>"},{"location":"product_feature_lifecycle/","title":"NetBox Labs Product and Feature Lifecycle","text":"<p>NetBox Labs products and features can go through multiple release stages before becoming generally available. These stages in the release life cycle can present varying degrees of stability and support. The following are the NetBox Labs release stages:</p> <ul> <li>Experimental</li> <li>Private Preview</li> <li>Public Preview</li> <li>General Availability (GA)</li> </ul>"},{"location":"product_feature_lifecycle/#quick-reference","title":"Quick Reference","text":"Experimental Private Preview Public Preview General Availability (GA) Audience Internal Invited customers Early adopters and users who request access Available to all customers at the appropriate tier Risk High (unknown) risk Medium-high risk Low-medium risk Low (known) risk Support Not supported Limited support through product and engineering Support limited to enablement and configuration Fully supported Documentation Code comments Unofficial; communicated with participants Limited; publicly available Publicly available"},{"location":"product_feature_lifecycle/#full-definitions","title":"Full Definitions","text":""},{"location":"product_feature_lifecycle/#experimental","title":"Experimental","text":"<p>This stage is for internal testing within the company. Products or features under this category are in their initial development phases, with high risks associated due to unknown variables. They are not supported and documentation is typically limited to code comments, aiming to gather preliminary insights and feedback internally.</p>"},{"location":"product_feature_lifecycle/#private-preview","title":"Private Preview","text":"<p>At this stage, products or features are shared with a select group of invited customers. This allows for more focused feedback and testing under real-world conditions, albeit with a medium-high risk. Support is limited and direct through product and engineering teams, with documentation being unofficial and primarily communicated directly with the participants.</p>"},{"location":"product_feature_lifecycle/#public-preview","title":"Public Preview","text":"<p>During the Public Preview, products or features are made available to early adopters and users who specifically request access. This phase aims to broaden the feedback loop and iron out any remaining issues, presenting a low to medium risk. Support is available but generally limited to enablement and configuration advice, with documentation becoming more accessible but still considered limited.</p>"},{"location":"product_feature_lifecycle/#general-availability","title":"General Availability","text":"<p>Once a product or feature reaches General Availability, it is available to all customers at the appropriate tier, marking its full release. The risk associated with using these products or features is low, as they are considered stable and reliable. Full support is provided at this stage, and documentation is comprehensive and publicly available.</p> <p>Please don\u2019t hesitate to contact us if you have any questions about this or you would like to discuss getting access to Private Preview or Public Preview products or features.  </p>"},{"location":"Administration%20Console/azure-ad-sso-setup/","title":"Microsoft Entra ID Setup (formerly Azure Active Directory)","text":"<p>This guide explains how to configure single sign-on (SSO) support for NetBox Cloud using Microsoft Entra ID(formerly Azure Active Directory) as an authentication backend.</p>"},{"location":"Administration%20Console/azure-ad-sso-setup/#entra-id-configuration","title":"Entra ID Configuration","text":"<ol> <li> <p>Create a test user (optional) Create a new Entra ID user to be used for testing. You can skip this step if you already have a suitable account created.</p> </li> <li> <p>Create an app registration Under the Microsoft Entra ID dashboard, navigate to Add &gt; App registration.</p> <p></p> <p>Enter a name for the registration (e.g. \"NetBox Cloud\") and ensure that the \"single tenant\" option is selected.</p> <p>Under \"Redirect URI\", select \"Web\" for the platform and enter the path to your NetBox Cloud installation, ending with /oauth/complete/azuread-oauth2/. </p> <p>Eg. https://{your-domain}.cloud.netboxapp.com/oauth/complete/azuread-oauth2/</p> <p></p> <p>Once finished, make note of the application (client) ID; this will be used when configuring NetBox Cloud.</p> <p></p> <p>Multitenant authentication</p> <p>NetBox also supports multitenant authentication via Entra ID, however it requires a different backend and an additional configuration parameter. Please see the <code>python-social-auth</code> documentation for details concerning multitenant authentication.</p> </li> <li> <p>Create a secret</p> <p>When viewing the newly-created app registration, click the \"Add a certificate or secret\" link under \"Client credentials\". Under the \"Client secrets\" tab, click the \"New client secret\" button.</p> <p></p> <p>You can optionally specify a description and select a lifetime for the secret.</p> <p></p> <p>Once finished, make note of the secret value (not the secret ID); this will be used when configuring NetBox Cloud.</p> <p></p> </li> </ol>"},{"location":"Administration%20Console/azure-ad-sso-setup/#netbox-cloud-configuration","title":"NetBox Cloud Configuration","text":"<p>Securely share the following configuration parameters with NetBox Labs Support, substituting your own values:</p> <p>REMOTE_AUTH_BACKEND = 'social_core.backends.azuread.AzureADOAuth2' SOCIAL_AUTH_AZUREAD_OAUTH2_KEY = '{APPLICATION_ID}' SOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = '{SECRET_VALUE}'</p> <p>The support team will add these parameters to your NetBox Cloud instance and confirm when this is ready for testing.</p>"},{"location":"Administration%20Console/azure-ad-sso-setup/#testing","title":"Testing","text":"<p>Log out of NetBox Cloud if already authenticated, and click the \"Log In\" button at top right. You should see the normal login form as well as an option to authenticate using Entra ID. Click that link.</p> <p></p> <p>You should be redirected to Microsoft's authentication portal. Enter the username/email and password of your account to continue. You may also be prompted to grant this application access to your account.</p> <p></p> <p>If successful, you will be redirected back to the NetBox Cloud UI, and will be logged in as the Entra ID user. You can verify this by navigating to your profile (using the button at top right).</p> <p>This user account has been replicated locally to NetBox Cloud, and can now be assigned groups and permissions within the NetBox Cloud admin UI.</p>"},{"location":"Administration%20Console/azure-ad-sso-setup/#troubleshooting","title":"Troubleshooting","text":""},{"location":"Administration%20Console/azure-ad-sso-setup/#redirect-uri-does-not-match","title":"Redirect URI does not Match","text":"<p>Entra ID requires that the authenticating client request a redirect URI that matches what you've configured for the app in step two. This URI must begin with https:// </p>"},{"location":"Administration%20Console/azure-ad-sso-setup/#not-logged-in-after-authenticating","title":"Not Logged in After Authenticating","text":"<p>If you are redirected to the NetBox Cloud UI after authenticating successfully, but are not logged in, double-check the configured backend and app registration. The instructions in this guide pertain only to the <code>azuread.AzureADOAuth2</code> backend using a single-tenant app registration.</p>"},{"location":"Administration%20Console/azure-group-mapping/","title":"Group Mapping For Microsoft Entra ID Single Sign-On (SSO)","text":"<p>Upgrade your Single Sign-On experience with Group Mapping for Microsoft Entra ID SSO \u2013 a smarter, more secure way to manage user access. The Group Mapping feature for Entra ID Single Sign-On, streamlines the synchronization of group memberships from Microsoft Entra ID to groups in NetBox Cloud, allowing you to align your user access efficiently and accurately. </p> <p>Info</p> <p>This feature is only available in Pro/Enterprise tiers.</p> <p>Changes in Microsoft Entra ID groups are reflected in NetBox Cloud, ensuring up-to-date access management and enhanced security. You can tailor the group mapping to your organizational needs while maintaining strict security and compliance standards.</p> <p>If you are already securing access to NetBox Cloud using Entra ID for SSO, and would like use the Group Mapping feature it's easy to get set up. Simply create your groups and permissions in NetBox Cloud, then set up your groups in Entra ID and reach out to the support team at NetBox Labs and we will take care of the group mappings for you to suit your requirements. </p> <p>Note</p> <p>We\u2019ve made some important updates to the Entra ID user group sync feature that may affect group memberships and permissions of Entra ID SSO users accessing NetBox Cloud. To support enterprise Entra ID environments, we\u2019ve added pagination to retrieve large lists (100+) of membership groups for users. To support NetBox group assignments from Entra ID nested groups, we\u2019ve changed the Microsoft API endpoint used for group retrieval from <code>memberOf</code> to <code>transitiveMemberOf</code>. </p> <p>This means that users will now be made members of NetBox user groups based on the configured group mappings for both direct membership Entra ID groups and transitive Entra ID groups (parent groups of direct membership groups). Under specific conditions, users may gain additional group memberships and permissions. We strongly advise you review your NetBox Cloud and Entra ID user, group and permission configurations to ensure they align to your security requirements.</p> <p>Watch the video below for a step-by-step example of how the Group Mapping feature works, or read on for an explanation. </p>"},{"location":"Administration%20Console/azure-group-mapping/#how-it-works","title":"How it Works","text":"<p>Group mappings are based on the Object ID of the group in Entra ID. For example: </p> <p></p> <p>The Object ID is mapped to a group in NetBox Cloud, and that group could have permissions assigned to it. For example, this group called CircuitManager in NetBox Cloud has permissions assigned to it that allows members of the group to manage all of the Circuit and  Provider object types: </p> <p></p> <p></p> <p>Optionally, members of the Entra ID groups can also be members of the NetBox built-in groups Staff which allows access to the NetBox admin interface, and Superuser which has all permissions without explicitly assigning them.</p> <p>The NetBox Labs support team will map your Entra ID Group Object ID's to your NetBox Cloud groups, for example: </p> Entra ID Group Object ID NetBox Cloud Group Staff Super User 1a36bed9-3bdc-4970-ab66-faf9704e0af4 Circuit Manager Yes No"},{"location":"Administration%20Console/azure-group-mapping/#how-do-i-get-it-set-up","title":"How Do I Get it Set Up?","text":"<p>Simply provide us with your requirements in terms of object IDs and NetBox groups and we will take care of the rest. </p> <p>If you have any questions about Group Mapping for Entra ID Single Sign-On (SSO), please raise a support ticket by emailing the NetBox Labs Support Team.</p>"},{"location":"Administration%20Console/console-access-from-ui/","title":"Accessing the Console from NetBox Cloud","text":"<p>From within the NetBox Cloud Web Interface, you can easily switch to the NetBox Labs Console. Simply follow the steps outlined below: </p> <ol> <li> <p>In the left hand main menu, click to expand the NetBox Labs plugin menu, and then click on Open Console:</p> <p></p> </li> <li> <p>You will now be taken to the NetBox Labs Console login page:</p> <p></p> <p>Note If you don't already have access to the console, you can request this by clicking on Request Console Access in the NetBox Labs plugin menu from the main NetBox Cloud web interface, and then clicking the link to email the NetBox Labs Support Team to request access. </p> <p></p> <p>If you encounter any issues when accessing the NetBox Labs Console, raise a support ticket by emailing the NetBox Labs Support Team</p> </li> </ol>"},{"location":"Administration%20Console/console-access/","title":"NetBox Cloud","text":""},{"location":"Administration%20Console/console-access/#setting-up-console-access","title":"Setting up Console Access","text":"<p>Request access to the NetBox Labs Console by emailing the NetBox Labs Support Team. </p> <p>The NetBox Cloud team will set up your account with your email address as the username, and you will use this to access the NetBox Labs Console. To complete the set up of your account, follow these steps: </p> <ol> <li> <p>You will receive an email advising you of your username, along with a temporary password and a link to the console URL. Click the link to login</p> </li> <li> <p>Enter the username (your email address) and the temporary password as per the email, and click \u2018Sign in\u2019: </p> <p></p> </li> <li> <p>You will then be prompted to change your password: </p> <p></p> </li> <li> <p>The set up is now complete and you are logged into the NetBox Labs Console. You will see (and be able to administer) all the NetBox Cloud instances running under your Organization.</p> <p></p> </li> <li> <p>To retrieve the credentials for the admin user of a NetBox Cloud instance, either click to reveal or copy them from the Credentials section: </p> <p></p> </li> <li> <p>Then click the on either of the two links to open the URL of the instance in a new browser window:</p> <p></p> </li> <li> <p>Lastly, login to the NetBox Cloud UI with the username and password you have copied from step 5: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/console-admin-accounts/","title":"Adding Admin Users to Console","text":"<p>To invite additional Admins to NetBox Cloud Console, follow these steps: </p> <ul> <li>Login to the console</li> <li>Click on Settings and then click on the Administrators</li> </ul> <p></p> <ul> <li>Enter the email address for the admin you wish to invite and then click Invite</li> </ul> <p></p> <ul> <li>The invited user should now have an admin account on Console</li> </ul>"},{"location":"Administration%20Console/console-overview/","title":"NetBox Cloud: Administrative Console Overview","text":""},{"location":"Administration%20Console/console-overview/#console-access","title":"Console Access","text":"<p>To access your NetBox Cloud Administrative Console, follow these steps: </p> <ul> <li>Login to the console</li> <li> <p>Click on the arrow next your Organization Name and then click on the Namespace ID</p> <p></p> </li> <li> <p>Next scroll down and click on the NetBox panel, and then click on the NetBox ID link to launch the Administrative console</p> <p></p> </li> </ul>"},{"location":"Administration%20Console/console-overview/#summary-view","title":"Summary View","text":"<p>This compressed full page screenshot breaks the full Administrative Console down into similar sections.  Each section is designed to give you greater insight to your NetBox instance.</p> <p></p>"},{"location":"Administration%20Console/console-overview/#section-breakdown","title":"Section Breakdown","text":""},{"location":"Administration%20Console/console-overview/#1-information-panel","title":"1. Information Panel","text":"<p>The Information Panel provides a view of basic information relating to your NetBox Cloud instance.  Here you will find the name of your NetBox Cloud instance within your Organization's Namespace, along with the AWS Region and the NetBox version. You also have a link to the instance raw URL, plus a refresh button for the instance data. </p>"},{"location":"Administration%20Console/console-overview/#2-netbox-deployment","title":"2. NetBox Deployment","text":"<p>The NetBox Deployment panel lists various service and configuration status points.  Included will be the current version, and version upgrade controls, the number of instance replicas, and resource allocations. The instance image and namespace are also listed here.  </p> <ul> <li>The left circle icon (stop button) will stop the running NetBox Cloud instance.</li> <li>The center circle icon (play button) will start the NetBox Cloud instance.</li> <li>The right refresh icon will refresh the data in the panel. </li> <li>The Version number with the smaller font displays the current NetBox version</li> <li>The Version drop down lists versions of NetBox that can be changed to.</li> <li>The cloud icon will illuminate if you select a different version of NetBox.</li> <li>The cloud icon will change NetBox to the selected version.</li> </ul> <p>The Secrets section provides access to the current secret credentials for the instance API Token, local \u201cadmin\u201d user account and Secret Key.  When the Administrative Console initially loads these values will be hidden.  </p> <ul> <li>Clicking the open eye will reveal the secret details</li> <li>Clicking the closed eye will conceal the secret details</li> <li>Clicking the copy icon will copy the secret to your clipboard</li> </ul>"},{"location":"Administration%20Console/console-overview/#3-ingress","title":"3. Ingress","text":"<p>The Ingress pannel gives the Name, Domain and DNS Name information for the NetBox Cloud instance, as well as the number of Ingress Pods and the Load Balancer status.</p>"},{"location":"Administration%20Console/console-overview/#4-storage","title":"4. Storage","text":"<p>The Storage Panel contains information on the storage bucket, user, and access key ID. Clicking the open eye will reveal the Access Key secret details.</p>"},{"location":"Administration%20Console/console-overview/#5-postgres","title":"5. Postgres","text":"<p>The Postgres Database panel (left) gives the current status of the database, along with details of the host, username and database name for the instance. Clicking the open eye will reveal the Postrges Database secret details.</p> <p>The Postgres panel (right) gives the number of database instances, their status, instance names, version, Aurora capacity unit consumption, current configured backup retention period, and security group IDs. Clicking the open eye will reveal the Postrges secret details.</p>"},{"location":"Administration%20Console/console-overview/#6-redis","title":"6. Redis","text":"<p>The Redis Database panel (left) gives the name, status, host, user, and ID of the Main and Cache Redis databases. </p> <p>The Redis panel (right) gives the name, status, resource, image and version information for the Redis instance. Clicking the open eye will reveal the Redis secret details.</p>"},{"location":"Administration%20Console/console-overview/#7-advanced-configuration","title":"7. Advanced Configuration","text":""},{"location":"Administration%20Console/console-overview/#7b-ingress-allow-list","title":"7b. Ingress Allow List","text":"<p>If the Ingress Allow List is configured, then inbound Web/API traffic will only be permitted to either IPv4 or IPv6 CIDR ranges listed on the Ingress Allow List. </p>"},{"location":"Administration%20Console/console-overview/#7c-netbox-configmap-env","title":"7c. NetBox Configmap ENV","text":"<p>This NetBox Configmap ENV allows you to view or manage the underlying variables for the instance</p>"},{"location":"Administration%20Console/console-overview/#7d-netbox-startup-configmaps","title":"7d. NetBox Startup Configmaps","text":"<p>The NetBox Startup Configmaps (redacted screenshot) allows you to view or manage the underlying configmaps for the instance.</p>"},{"location":"Administration%20Console/console-overview/#8-pod-infologs","title":"8. Pod Info/Logs","text":"<p>The Pods screen allows you to view the underlying composition of the instance.  This includes versions, operational status, vCPU and Memory information.</p> <ul> <li>The refresh button will give you the up-to-date information for all pods.</li> <li>The multi line icon will load the current log for the selected object in each pod.</li> </ul>"},{"location":"Administration%20Console/free-plan-features/","title":"NetBox Cloud Free Plan Features","text":"<p>The NetBox Cloud Free Plan is perfect for small networks, lab environments, and targeted use cases. It includes up to 100 devices, 500 IP addresses, 10k API requests/month, and 2 operational branches. </p>"},{"location":"Administration%20Console/free-plan-features/#free-plan-features-in-detail","title":"Free Plan Features in Detail","text":"<p>The following features are enabled in the NetBox Cloud Free Plan: </p> <ul> <li>Devices: 100</li> <li>IP Addresses: 500</li> <li>API Requests: 10,000 per month</li> <li>File Upload Size: Maximum 5MB </li> <li>Backup Frequency: Once per day</li> <li>Branching Enabled: Maximum of 2 operational branches</li> <li>Prefix List Entries: Maximum of 10 entries</li> <li>Upgrades: Automatic</li> </ul> <p>If you need more, or you need features like advanced SSO, Plugins, Webhooks, Custom Scripts, Custom Hostnames, the ability to work with backups, commercial support, and more, check out our paid plans.</p>"},{"location":"Administration%20Console/free-plan-new-user/","title":"Add a New User to Free Plan","text":"<p>To invite a new user to a NetBox Cloud Free instance, the user will need to have a valid email address, and be added as an administrator in the NetBox Labs Console.</p> <ol> <li> <p>From within the NetBox Labs Console, expand Settings and select Administrators</p> <p></p> </li> <li> <p>Type the user's email address in the box, and click Invite</p> <p></p> </li> <li> <p>Click Continue to confirm the email address to be invited</p> <p></p> </li> <li> <p>An email will be sent containing a temporary password for the Console</p> </li> <li> <p>Have the user login with the tempoary information, and it will prompt for a new password to be set</p> </li> <li> <p>The user can now login to the Console and click the link to access the instance</p> <p></p> </li> <li> <p>Login to the instance by clicking the auth button and using the same credentials that were just setup</p> <p> </p> </li> </ol>"},{"location":"Administration%20Console/managing-hostnames/","title":"NetBox Cloud Hostnames","text":"<ol> <li> <p>From within the NetBox Labs Console click on Settings and then Hostnames Manager in the left-hand main menu to view the settings for your Organization: </p> <p></p> </li> <li> <p>From here you can view the Hostnames configured for your organization. Under NetBox you can see which NetBox instance is associated with a given hostname, and what Category the hostname is: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/managing-hostnames/#hostname-categories","title":"Hostname Categories:","text":"<p>Hostname categories are defined as follows: </p> Category Definition <code>platform random</code> A randomly generated hostname created when a new NetBox Cloud instance is created, usually as a trial. <code>platform custom</code> A custom hostname on the NetBox Cloud platform (e.g., <code>abcwidgets.cloud.netboxapp.com</code>) - available for all paid plans. <code>org custom</code> A custom hostname using your organization's own domain (e.g., <code>netbox-prod.abcwidgets.com</code>) - available for Professional and Enterprise plans."},{"location":"Administration%20Console/managing-hostnames/#custom-hostnames","title":"Custom Hostnames","text":""},{"location":"Administration%20Console/managing-hostnames/#platform-custom-hostnames","title":"Platform Custom Hostnames","text":"<p>Platform Custom Hostnames (e.g., <code>yourcompany.cloud.netboxapp.com</code>) are available for all NetBox Cloud paid plans and are typically set up automatically when you subscribe to a paid plan.</p>"},{"location":"Administration%20Console/managing-hostnames/#organization-custom-hostnames","title":"Organization Custom Hostnames","text":"<p>Organization Custom Hostnames allow you to use your own domain name (e.g., <code>netbox.yourcompany.com</code>) and are available for NetBox Cloud Professional and Enterprise plans. If you would like to set up an organization custom hostname, please raise a support ticket by emailing the NetBox Labs Support Team. </p>"},{"location":"Administration%20Console/netbox-cloud-plugins/","title":"NetBox Cloud Plugins","text":"<p>From within the NetBox Labs Console, you can easily view installed NetBox Cloud Plugins, along with their Scope and Version number. Simply follow these steps: </p> <ol> <li> <p>From within the NetBox Labs Console click on the three dots in the top right corner of the NetBox Instance panel, and click Overview </p> <p></p> </li> <li> <p>Scroll down to view the list of installed Plugins, their scopes and version numbers:</p> <p></p> <p>Info</p> <p>There are two types of plugin scope - public for any plugins that are publicly available and organization for custom plugins.</p> </li> </ol>"},{"location":"Administration%20Console/okta-group-mapping/","title":"Group Mapping For Okta Single Sign-On (SSO)","text":"<p>Upgrade your Single Sign-On experience with Group Mapping for Okta SSO \u2013 a smarter, more secure way to manage user access. The Group Mapping feature for Okta Single Sign-On, streamlines the synchronization of group memberships from Okta to groups in NetBox Cloud, allowing you to align your user access efficiently and accurately. </p> <p>Changes in Okta groups are reflected in NetBox Cloud, ensuring up-to-date access management and enhanced security. You can tailor the group mapping to your organizational needs while maintaining strict security and compliance standards.</p> <p>If you are already securing access to NetBox Cloud using Okta for SSO, and would like use the Group Mapping feature it's easy to get set up. Simply create your groups and permissions in NetBox Cloud, then set up your groups in Okta and reach out to the support team at NetBox Labs and we will take care of the group mappings for you to suit your requirements. </p> <p>\u2139\ufe0f Note</p> <p>This feature is only available in Pro/Enterprise tiers.</p>"},{"location":"Administration%20Console/okta-group-mapping/#how-it-works","title":"How it Works","text":"<p>Group mappings are based on the name of the group in Okta, which is mapped to a group in NetBox Cloud, and that group could have permissions assigned to it. For example, this group called CircuitManager in NetBox Cloud has permissions assigned to it that allows members of the group to manage all of the Circuit and  Provider object types: </p> <p></p> <p></p> <p>Optionally, members of the Okta groups can also be members of the NetBox built-in groups Staff which allows access to the NetBox admin interface, and Superuser which has all permissions without explicitly assigning them.</p> <p>The NetBox Labs support team will map your Okta group names to your NetBox Cloud groups, for example: </p> Okta Group Name NetBox Cloud Group Staff Super User NetBox-Circuit-Mgrs Circuit Manager Yes No"},{"location":"Administration%20Console/okta-group-mapping/#how-do-i-get-it-set-up","title":"How Do I Get it Set Up?","text":"<p>Simply provide us with your requirements in terms of Okta group names and NetBox groups and we will take care of the rest. </p> <p>If you have any questions about Group Mapping for Okta Sign-On (SSO), please raise a support ticket by emailing the NetBox Labs Support Team.</p>"},{"location":"Administration%20Console/okta-sso-setup/","title":"Okta SSO Setup","text":"<p>This guide explains how to configure single sign-on (SSO) support for NetBox Cloud using Okta as an authentication backend.</p>"},{"location":"Administration%20Console/okta-sso-setup/#okta-configuration","title":"Okta Configuration","text":"<p>Note that Okta offers free developer accounts</p> <ol> <li> <p>Create a test user (optional) Create a new user in the Okta admin portal to be used for testing. You can skip this step if you already have a suitable account created.</p> </li> <li> <p>Create an app registration Within the Okta administration dashboard, navigate to Applications &gt; Applications, and click the \"Create App Integration\" button. Select \"OIDC\" as the sign-in method, and \"Web application\" for the application type.</p> <p></p> <p>On the next page, give the app integration a name (e.g. \"NetBox Cloud\") and specify the sign-in and sign-out URIs. These URIs should follow the formats below:</p> <ul> <li>Sign-in URI:   https://{your-domain}.cloud.netboxapp.com/oauth/complete/okta-openidconnect/</li> <li>Sign-out URI:  https://{your-domain}.cloud.netboxapp.com/oauth/disconnect/okta-openidconnect/</li> </ul> <p></p> <p>Under \"Assignments,\" select the controlled access setting most appropriate for your organization. Click \"Save\" to complete the creation.</p> <p>Once finished, note the following parameters. These will be used to configured NetBox Cloud.</p> <ul> <li>Client ID</li> <li>Client secret</li> <li>Okta domain</li> </ul> <p></p> </li> </ol>"},{"location":"Administration%20Console/okta-sso-setup/#netbox-cloud-configuration","title":"NetBox Cloud Configuration","text":"<p>Securely share the following configuration parameters with NetBox Labs Support, substituting your own values:</p> <p>REMOTE_AUTH_BACKEND = 'social_core.backends.okta_openidconnect.OktaOpenIdConnect' SOCIAL_AUTH_OKTA_OPENIDCONNECT_KEY = '{Client ID}' SOCIAL_AUTH_OKTA_OPENIDCONNECT_SECRET = '{Client secret}' SOCIAL_AUTH_OKTA_OPENIDCONNECT_API_URL = 'https://{Okta domain}/oauth2/'</p> <p>The support team will add these parameters to your NetBox Cloud instance and confirm when this is ready for testing.</p>"},{"location":"Administration%20Console/okta-sso-setup/#testing","title":"Testing","text":"<p>Log out of NetBox Cloud if already authenticated, and click the \"Log In\" button at top right. You should see the normal login form as well as an option to authenticate using Okta. Click that link.</p> <p></p> <p>You should be redirected to Okta's authentication portal. Enter the username/email and password of your test account to continue. You may also be prompted to grant this application access to your account.</p> <p></p> <p>If successful, you will be redirected back to the NetBox Cloud UI, and will be logged in as the Okta user. You can verify this by navigating to your profile (using the button at top right).</p> <p>This user account has been replicated locally to NetBox Cloud, and can now be assigned groups and permissions within the NetBox Cloud admin UI.</p>"},{"location":"Administration%20Console/prefix-lists/","title":"Prefix Lists","text":"<p>You can secure access to your NetBox Cloud instance by adding IPv4 and IPv6 addresses and ranges to Prefix Lists, which can then be applied to NetBox instances to control which source IPs your instances will accept connections from. </p> <p>The following features are available in the NetBox Labs Admin Console when working with prefix lists: </p> <ul> <li>Create, Edit and Delete prefix lists</li> <li>Synchronize prefix lists from a NetBox instance using tags</li> </ul> <p>There is also large list support (~15K prefixes) and separate prefixes can be applied to the NetBox Cloud UI, API and GraphQL interfaces. </p> <p>Note</p> <p>When you have built your prefix lists in the Admin Console, raise a support ticket by emailing the NetBox Labs Support Team and we will apply them to your NetBox Cloud instances. </p>"},{"location":"Administration%20Console/prefix-lists/#create-a-prefix-list-not-synchronized-with-a-netbox","title":"Create a Prefix List (not synchronized with a NetBox)","text":"<ol> <li> <p>From within the Admin Console, navigate to Settings in the left-hand menu</p> <p></p> </li> <li> <p>Scroll down and click to expand the Prefix List section, and then click on Create Prefix List on the right hand side to start the wizard: </p> <p></p> </li> <li> <p>Give the prefix list a name and then click CREATE PREFIX LIST:</p> <p></p> </li> <li> <p>Enter the first prefix and give it a description. If you wish to add additional prefixes then you can also do that here by clicking + ADD ADDITIONAL PREFIX, then when you are happy click CREATE PREFIXES.</p> <p>Note - if you wish to add the IP address that you are currently using then click Use Current IP Address and this will add it to the prefix list: </p> <p></p> </li> <li> <p>You can then view the prefix list from within Settings &gt; Prefix List: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/prefix-lists/#create-a-prefix-list-synchronized-with-a-netbox","title":"Create a Prefix List (synchronized with a NetBox)","text":"<ol> <li> <p>From within the Admin Console, navigate to Settings in the left-hand menu</p> <p></p> </li> <li> <p>Scroll down and click to expand the Prefix List section, and then click on Create Prefix List on the right hand side to start the wizard: </p> <p></p> </li> <li> <p>Give the prefix list a name and then select the Yes radio button to sync the prefix list from a NetBox. Then select the NetBox instance you wish to sync from, specify the NetBox Tag that you wish to use, and then click CREATE PREFIX LIST:    </p> <p></p> </li> <li> <p>Switch to your NetBox instance, and go to Customization &gt; Tags and create the required tag(s) to be applied to any prefixes that are to be synchronized to the Prefix List: </p> <p></p> </li> <li> <p>Under IPAM &gt; Prefixes add the prefixes, give them a description and tag them with the appropriate tag: </p> <p></p> </li> <li> <p>You can then view the prefixes in NetBox under IPAM &gt; Prefixes (Tip - filter on the tag): </p> <p></p> </li> <li> <p>Switch back to the Admin Console to view the prefix list from within Settings &gt; Prefix List. Note - it can take a few minutes for the prefix list to be fully synchronized from NetBox. </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/prefix-lists/#edit-a-prefix-list","title":"Edit a Prefix List","text":"<p>Note - this only works for prefix lists that are not synchronized with a NetBox. To edit NetBox synchronized prefix lists you should make the edits within NetBox. </p> <ol> <li> <p>From within the Admin Console, navigate to Settings in the left-hand menu, and then scroll down and click to expand the Prefix List section. Then click on the name of the prefix list you wish to edit: </p> <p></p> </li> <li> <p>To add more prefixes to the list, click on Create Prefix and then follow the wizard again to add more prefixes. </p> </li> <li> <p>To edit a prefix, click EDIT and then make your required changes and then click EDIT PREFIX to save your changes: </p> <p></p> </li> <li> <p>To delete a prefix, click DELETE and then if you are sure you wish to delete the prefix, click DELETE PREFIX when prompted: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/prefix-lists/#delete-a-prefix-list","title":"Delete a Prefix List","text":"<p>Note - in order for a prefix list to be deleted it must first be detached from any NetBox instances that it is securing. You will need to contact support and request this before you can delete it. </p> <ol> <li> <p>From within the Admin Console, navigate to Settings in the left-hand menu, and then scroll down and click to expand the Prefix List section. Then click on the name of the prefix list you wish to delete, and click DELETE PREFIX LIST:</p> <p></p> </li> <li> <p>If you are sure you wish to delete the prefix list then click DELETE PREFIX LIST when you are prompted to confirm the deletion: </p> <p></p> </li> </ol> <p>If you encounter any issues while working with the IP Allow List raise a support ticket by emailing the NetBox Labs Support Team</p>"},{"location":"Administration%20Console/public-ip-addressing/","title":"NetBox Cloud Public IP Addresses","text":""},{"location":"Administration%20Console/public-ip-addressing/#traffic-originating-from-netbox-cloud","title":"Traffic Originating From NetBox Cloud","text":"<p>The Public IP addresses that outbound traffic from your NetBox Cloud instance (eg. webhooks) will be seen to be originating from are listed below. This will vary depending on the region that your instance is located in.   </p> <p>You can whitelist these IP ranges so that inbound access from your NetBox Cloud instance(s) is restricted to just these addresses: </p>"},{"location":"Administration%20Console/public-ip-addressing/#us-east-1","title":"US-EAST-1","text":"<p>IPv4 <pre><code>3.225.69.195\n3.233.255.24\n34.231.51.53\n</code></pre></p> <p>IPv6 <pre><code>2600:1f18:462e:4c00::/56\n</code></pre></p>"},{"location":"Administration%20Console/public-ip-addressing/#eu-west-1","title":"EU-WEST-1","text":"<p>IPv4 <pre><code>108.128.2.233\n3.252.161.89\n46.51.185.39\n</code></pre></p> <p>IPv6</p> <pre><code>2a05:d018:1128:7a00::/56\n</code></pre>"},{"location":"Administration%20Console/public-ip-addressing/#eu-west-2","title":"EU-WEST-2","text":"<p>IPv4 <pre><code>13.42.148.73\n18.132.136.73\n18.132.221.240\n</code></pre></p> <p>IPv6 <pre><code>2a05:d01c:11e:a800::/56\n</code></pre></p>"},{"location":"Administration%20Console/retrieving-nbc-credentials/","title":"Retrieving the NetBox Cloud Admin Credentials","text":"<p>To log into a NetBox Cloud instance with the admin username and password, you first need to login to the NetBox Labs Console and then retrieve the credentials. Follow these steps: </p> <ol> <li> <p>Login to NetBox Labs Console and you will see (and be able to administer) all the NetBox Cloud instances running under your Organization.</p> <p></p> </li> <li> <p>To retrieve the credentials for the admin user of a NetBox Cloud instance, either click to reveal or copy them from the Credentials section: </p> <p></p> </li> <li> <p>Then click the on either of the two links to open the URL of the instance in a new browser window:</p> <p></p> </li> <li> <p>Lastly, login to the NetBox Cloud UI with the username and password you have copied from step 2: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/saml-group-map/","title":"Configuring SAML Group Mapping in NetBox Cloud","text":"<p>NetBox Cloud supports SAML-based authentication, including group mappings to enforce role-based access control. For group mapping, you will need to provide your Identity Provider (IdP) group names so we can associate them with the desired NetBox groups.</p>"},{"location":"Administration%20Console/saml-group-map/#group-attribute-mapping","title":"Group Attribute Mapping","text":"<p>By default, NetBox Cloud expects the SAML group attribute statement to be named <code>groups</code>, which contains a list of group names the user belongs to. If your IdP sends group information under a different attribute name, such as <code>MemberOf</code>, you must update its configuration to use <code>groups</code> to ensure proper mapping.</p>"},{"location":"Administration%20Console/saml-group-map/#providing-your-group-mappings","title":"Providing Your Group Mappings","text":"<p>To set up group mapping, follow these steps:  </p> <ol> <li>Create Groups in NetBox \u2013 Set up user groups in NetBox and assign appropriate permissions.  </li> <li>Define Your Mappings \u2013 Determine which IdP groups should be mapped to which NetBox groups. Ensure you are using the exact group names as they appear in your IdP.  </li> <li>Share Your Mappings \u2013 Provide your IdP group names along with the corresponding NetBox groups to the NetBox Cloud team so we can configure the mappings on our end.  </li> </ol> <p>Below is an example that illustrates how IdP groups are mapped to NetBox user groups:  </p> <pre><code>    \"IdP-group-name\": \"netbox-user-group\",\n    \"another-IdP-group-name\": \"another-netbox-user-group\"\n</code></pre> <p>Once configured, users will be assigned NetBox roles based on their IdP group membership.</p>"},{"location":"Administration%20Console/saml-sso-setup/","title":"NetBox Cloud SAML Configuration Guide","text":""},{"location":"Administration%20Console/saml-sso-setup/#overview","title":"Overview","text":"<p>This document details the procedure for configuring SAML-based Single Sign-On (SSO) for your NetBox Cloud environment.</p>"},{"location":"Administration%20Console/saml-sso-setup/#required-information","title":"Required Information","text":"<p>To facilitate SAML integration, we require the following details from your Identity Provider (IdP):</p> <ul> <li>Service Provider Entity ID: The unique identifier of your organization in the SAML ecosystem.</li> <li> <p>Identity Provider Settings:</p> <p>entity_id: This is your IdP's Entity ID obtained from the SAML metadata. </p> <p>url: Your IdP's SSO login URL. </p> <p>x509cert: The Base64-encoded X.509 certificate used to sign SAML assertions. </p> </li> </ul> <p>Note</p> <p>Preferred Submission Method: For efficiency and accuracy, please provide your IdP Metadata File. This standardized format ensures all necessary information is included.</p>"},{"location":"Administration%20Console/saml-sso-setup/#configuration-process-in-netbox-cloud","title":"Configuration Process in NetBox Cloud","text":"<p>Once we receive your SAML configuration details, we will:</p> <ol> <li> <p>Generate a public/private certificate pair.</p> </li> <li> <p>Provide you with the public certificate, which you will need to configure your IdP.</p> </li> </ol> <p>Additionally you will need to configure the following parameters within your IdP settings:</p> <ul> <li> <p>Service Provider (SP) Entity ID: <code>https://&lt;org-name&gt;.cloud.netboxapp.com/</code></p> </li> <li> <p>Assertion Consumer Service (ACS) URL: <code>https://&lt;org-name&gt;.cloud.netboxapp.com/</code></p> </li> </ul>"},{"location":"Administration%20Console/saml-sso-setup/#testing","title":"Testing","text":"<p>Once your NetBox Cloud and Identity Provider (IdP) configurations are finalized, you can proceed with testing to confirm that you are able to log in via your SAML provider.</p>"},{"location":"Administration%20Console/set_up_2fa/","title":"Setting up Two-Factor Authentication for the Admin Console","text":""},{"location":"Administration%20Console/set_up_2fa/#enable-two-factor-authentication","title":"Enable Two-Factor Authentication","text":"<ol> <li> <p>Login to the NetBox Labs Console and then click on the down arrow (top-right) and select Setup Two-Factor.</p> <p></p> </li> <li> <p>Follow the on-screen instructions and scan the QR code with your Authenticator App of choice (eg. Google Authenticator):</p> <p></p> </li> <li> <p>Enter the code from your authenticator app and click confirm:</p> <p></p> </li> <li> <p>Click on Cancel on the bottom-right corner to close the dialog box: </p> <p></p> </li> <li> <p>Click on the down arrow (top-right) and select Sign Out:</p> <p> </p> </li> <li> <p>Log back into the console with your username and password and then when prompted, enter the TOTP code generated by your authenticator app, and click Confirm</p> <p> </p> </li> </ol>"},{"location":"Administration%20Console/set_up_2fa/#disable-two-factor-authentication","title":"Disable Two-Factor Authentication","text":"<ol> <li> <p>Login to the NetBox Labs Console and then click on the down arrow (top-right) and select Setup Two-Factor.</p> <p></p> </li> <li> <p>Enter the TOTP Code from your authenticator app and click Disable.</p> <p></p> </li> <li> <p>In the dialog box, note that Two-factor authentication is now disabled and close the dialog box.  </p> <p></p> </li> </ol> <p>If you encounter any issues while working with two-factor authentication, please raise a support ticket by emailing the NetBox Labs Support Team</p>"},{"location":"Administration%20Console/upgrading-nbc/","title":"Upgrading NetBox Cloud","text":"<p>To safely and easily upgrade your NetBox Cloud instance without worrying about any plugin compatibility issues, follow the steps outlined below:</p> <ol> <li> <p>In the NetBox Labs Console, click on the three dots in the top right corner of the instance you wish to upgrade and click Upgrade. Note the current NetBox version in this example is 4.1.7.</p> <p></p> </li> <li> <p>The Safe Upgrade tool will present you with the potential and recommended versions you can upgrade to.</p> <p>You will see the version number, the status, whether installed plugins are compatible with the target NetBox version, and a link to the release notes for that version.</p> <p></p> <p>Note that we could upgrade to any of the other potential options, but the Safe Upgrade tool is recommending an upgrade to version 4.1.11. If you select this option, all plugins will be automatically upgraded to compatible versions as part of the upgrade process.</p> <p>Note too that if a plugin is not compatible with a certain NetBox version, you will see a warning like this:</p> <p></p> <p>In this case, you would not be able to upgrade to that version, and the tool will not allow you to select it. This typically means the plugin developer has not yet released a version compatible with that NetBox version.</p> </li> <li> <p>Select the version you wish to upgrade to. In this example, we will select the recommended version 3.6.</p> </li> <li> <p>Click on UPGRADE VERSION.</p> <p></p> </li> <li> <p>Click on Continue if you are sure you want to go ahead with the upgrade.</p> <p></p> </li> <li> <p>You will then see a dialog box confirming the upgrade is in progress.</p> <p></p> </li> <li> <p>A few seconds later, your NetBox Cloud upgrade will be complete. You will see the new version number.</p> <p></p> </li> </ol> <p>If you encounter any issues during the upgrade or have any questions, please raise a support ticket by emailing the NetBox Labs Support Team.</p>"},{"location":"Administration%20Console/working_with_database_backups/","title":"Working with NetBox Cloud Database Backups","text":"<p>Within the NetBox Labs Console you can access the backups of your NetBox Cloud database, and are able to perform the following actions:  </p> <ul> <li>View a list of all available database backups</li> <li>Take an 'On Demand' backup at any time</li> <li>Download a local copy of a specific backup file  </li> <li>Restore your NetBox Cloud instance from a database backup</li> </ul>"},{"location":"Administration%20Console/working_with_database_backups/#view-a-list-of-available-database-backups","title":"View a List of Available Database Backups","text":"<ol> <li> <p>Login to the NetBox Labs Console and then click on the three dots in the top-right corner of the instance you wish to manage and click Backup &amp; Restore:</p> <p></p> </li> <li> <p>Within Backup and Restore you can view the list of available backups:</p> <p></p> </li> </ol>"},{"location":"Administration%20Console/working_with_database_backups/#take-an-on-demand-database-backup","title":"Take an 'On Demand' Database Backup","text":"<ol> <li> <p>From within the Backup and Restore panel click on Back Up Now, on the right-hand side: </p> <p></p> </li> <li> <p>Click CONTINUE to confirm that you want to backup of the current version of NetBox Cloud</p> <p></p> </li> <li> <p>After a short while you will see the On Demand backup you just created appear in the list of available backups: </p> <p></p> </li> </ol>"},{"location":"Administration%20Console/working_with_database_backups/#download-a-local-copy-of-a-backup-file","title":"Download a Local Copy of a Backup File","text":"<ol> <li> <p>Locate the backup file you wish to retrieve, and click on the Download icon:</p> <p></p> </li> <li> <p>The download will then be prepared: </p> <p></p> </li> <li> <p>Once the backup file has been prepared it will automatically be downloaded into the Downloads directory on your local computer's file system. Note the file is a gzip compressed archive of the SQL database file so it will end in <code>.sql.gz</code>.</p> </li> </ol>"},{"location":"Administration%20Console/working_with_database_backups/#restore-from-a-database-backup-file","title":"Restore From a Database Backup File","text":"<ol> <li> <p>Identify the database backup you wish to restore from, and click Restore:</p> <p></p> </li> <li> <p>Click CONTINUE if you are sure you wish to restore the selected backup:</p> <p></p> </li> <li> <p>The restore process will take place in the background, and depending on the size of the database should take no longer than a few minutes to complete. Once the restore has completed, you can click on Restore History to view the list of database restores, and you will see your completed restore listed:</p> <p></p> <p></p> </li> <li> <p>Your database restore is now complete. </p> </li> </ol> <p>Info</p> <p>Once the database restore is complete your NetBox Cloud instance will restart, and you may briefly see a <code>503 - Service Unavailable</code> message when you browse to the Web interface. This is normal and will clear after a short while, after which you can log in again. </p> <p>Also, please be aware that the NetBox changelog will be empty when you first log in after a database restore.</p> <p>If you encounter any issues while working with database backups raise a support ticket by emailing the NetBox Labs Support Team</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/","title":"Getting Started With NetBox Cloud","text":"<p>This document will help you get up and running with NetBox Cloud quickly. It highlights all the unique features provided by NetBox Cloud.</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#about-netbox-cloud","title":"About NetBox Cloud","text":"<p>NetBox Cloud is a managed deployment of the open source NetBox application, extended to improve user experience and maintained by NetBox Labs. NetBox Cloud provides all the power of NetBox without the burden of installation and long-term maintenance.</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#netbox-cloud-features","title":"NetBox Cloud Features","text":"<p>All the NetBox Cloud features within the user interface (UI) are found under the \"Cloud\" heading of the navigation menu:</p> <p> </p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#netbox-configuration","title":"NetBox Configuration","text":"<p>NetBox supports many configuration parameters that affect how it functions. There are two areas of the UI in which these parameters can be adjusted.</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#administrative-configuration","title":"Administrative Configuration","text":"<p>The first area is under the administrative interface. To access this interface, you must be logged into NetBox as a user with administrator privileges. Navigate to the admin UI by expanding the user menu at top right and clicking the \"Admin\" link. Then, navigate to <code>Extras &gt; Config revisions &gt; Add</code>.</p> <p> </p> <p>This form will allow you to set various configuration parameters. Once the desired configurations have been made, you may optionally provide a comment as to why the changes were made, and click the \"Save\" button. This will create a new revision of NetBox's configuration.</p> <p>Configuration changes made via the admin UI take effect immediately. If you would like to revert your changes at any point, you can do so within the admin UI by locating the desired previous revision and clicking the \"Restore\" button to its right.</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#netbox-cloud-configuration","title":"NetBox Cloud Configuration","text":"<p>You may notice that some configuration parameters are not present from the configuration form in the admin UI. This is because these are not supported by NetBox as dynamic configuration parameters: They can be modified only by altering NetBox's configuration file. Such settings include: - User authentication (including SSO) - Enabling &amp; configuring plugins - Time &amp; date formatting</p> <p>NetBox Cloud exposes these configuration parameters through its own interface, which can be reached by navigating to <code>Cloud &gt; Administration &gt; Configuration</code>.</p> <p> </p> <p>Once the desired configuration parameters have been set, click the \"Save &amp; Restart\" button. Note that the application of these changes does require a restart of some NetBox Cloud services, and access to the NetBox Cloud UI and API may be interrupted briefly.</p>"},{"location":"NetBox%20Cloud/getting-started-with-nbc/#single-sign-on-sso","title":"Single Sign-On (SSO)","text":"<p>NetBox Cloud currently supports single sign-on (SSO) authentication for the following providers:</p> <ul> <li>Microsoft Entra ID (formerly Azure Active Directory)</li> <li>Okta (via OpenID Connect)</li> </ul> <p>We are implementing support for additional backends as customers request them. If you have a need for a specific authentication backend, please let us know.</p> <p>To enable SSO, select the desired backend and provide the required configuration parameters under the appropriate tab. For information on configuring your specific backend service, you can consult the SSO configuration guides in the NetBox documentation, or contact NetBox Labs for assistance.</p>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/","title":"Migrating to NetBox Cloud","text":"<p>Migrating from an on-premises NetBox open source instance to a NetBox Labs NetBox Cloud environment is a straightforward process. Since NetBox Cloud is built using the same open source software you\u2019re already using, most imports can be completed quickly for a timely cutover. This checklist will walk you through the steps, highlighting mandatory and optional points in the process.</p>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#1-record-your-current-netbox-version","title":"1 - Record your current NetBox version","text":"<p>Navigate to your NetBox portal login page to view the version of NetBox you are running. You can also find this information within the application. This helps the NetBox team understand which upgrade path is required for your data.</p>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#2-export-your-existing-netbox-database","title":"2 - Export your existing NetBox database","text":"<p>Use the following command to export your existing NetBox database:</p> <pre><code>pg_dump --no-owner --no-privileges --username [netbox] --password --host [localhost] [netbox] &gt; [netbox.sql] \n</code></pre> <p>Warning Inform the NetBox Labs team if you used any additional flags for the pg_dump command, or if you exported the data to a different format.</p>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#3-optional-archive-your-media-directory","title":"3 - (Optional) Archive your /media directory","text":"<p>Optionally, if you are storing images inside NetBox, use the command below to archive your media directory. Note that the example below shows the default file path. Update the path if you have changed the location of these files.</p> <pre><code>tar -czf netbox_media.tar.gz /opt/netbox/netbox/media/\n</code></pre>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#4-optional-archive-your-scripts-directory","title":"4 - (Optional) Archive your /scripts directory","text":"<p>Optionally, if you have uploaded custom scripts to NetBox, use the command below to archive your scripts directory. Note that the example below shows the default file path. Update the path if you have changed the location of these files.</p> <pre><code>tar -czf netbox_scripts.tar.gz /opt/netbox/netbox/scripts/\n</code></pre>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#5-optional-archive-your-reports-directory","title":"5 - (Optional) Archive your /reports directory","text":"<p>Optionally, if you have uploaded custom reports to NetBox, use the command below to archive your reports directory. Note that the example below shows the default file path. Update the path if you have changed the location of these files.</p> <pre><code>tar -czf netbox_scripts.tar.gz /opt/netbox/netbox/reports/\n</code></pre>"},{"location":"NetBox%20Cloud/migrating-to-netbox-cloud/#6-upload-the-files-to-a-shared-location","title":"6 - Upload the files to a shared location","text":"<p>Upload the files created in the steps above to a shareable location such as FTP, Dropbox, Box, or Google Drive. If necessary, the NetBox Labs team can create a secure, dedicated location for you to use.</p>"},{"location":"cloud-connectivity/aws-direct-connect-multi-region-setup/","title":"Aws direct connect multi region setup","text":""},{"location":"cloud-connectivity/aws-direct-connect-multi-region-setup/#coming-soon","title":"Coming Soon","text":""},{"location":"cloud-connectivity/aws-direct-connect-multi-region/","title":"AWS Direct Connect (Multi-Region)","text":"<p>Delivery via AWS Direct Connect in two regions, with replicated NetBoxes, Single (or Dual) Direct Connect in each region. Customer IP space (2 x /25's) is assigned for the VPCs. This is to host load balancers and proxies within the dedicated customer Account/VPC. Internally we will allocate a /27 per availability zone for each of the 3 availability zones.</p> <p>The connections do not have to be dedicated, a VLAN can be added to an existing layer 2 fabric provider, such as Equinix Fabric. In terms of bandwidth requirements, 50Mbps is fine.</p> <p></p>"},{"location":"cloud-connectivity/aws-direct-connect-setup/","title":"Aws direct connect setup","text":""},{"location":"cloud-connectivity/aws-direct-connect-setup/#coming-soon","title":"Coming Soon","text":""},{"location":"cloud-connectivity/aws-direct-connect/","title":"AWS Direct Connect (Single Region)","text":"<p>AWS Direct Connect is available via hosted connections from BT, Equinix Fabric, MegaPort, Optus, PCCW, Zayo etc. VLAN hand-off is with BGP and Single or Dual Direct Connect services are available. Customer IP space (/24 or /25) is assigned for the VPC, as this is required to host load balancers and proxies within the dedicated customer Account/VPC. Internally we will allocate a /27 per availability zone for each of the 3 availability zones.</p> <p>The connection does not have to be dedicated, a VLAN can be added to an existing layer 2 fabric provider, such as Equinix Fabric. In terms of bandwidth requirements, 50Mbps is fine.</p> <p></p>"},{"location":"cloud-connectivity/aws-private-link-setup/","title":"Aws private link setup","text":""},{"location":"cloud-connectivity/aws-private-link-setup/#coming-soon","title":"Coming Soon","text":""},{"location":"cloud-connectivity/aws-private-link/","title":"AWS Private Link (Single Region)","text":"<p>Delivery via Private Link between a customer\u2019s existing AWS account and the NetBox Labs AWS account, with VPC endpoints using private IPs. This option has fast turn-up times and standard Internet delivery can optionally be disabled.</p> <p></p>"},{"location":"cloud-connectivity/cloud-connectivity-faq/","title":"Frequently Asked Questions","text":""},{"location":"cloud-connectivity/cloud-connectivity-faq/#ipsec-vpn-tunnels","title":"IPSEC VPN Tunnels","text":"<p>Q. Why 2 tunnels? A. The AWS VPN Gateway product provides 2 tunnels by default for resilience. Each terminates in a different availability zone.</p>"},{"location":"cloud-connectivity/cloud-connectivity-faq/#ipsec-vpn-tunnels-direct-connect","title":"IPSEC VPN Tunnels + Direct Connect","text":"<p>Q. Why /24 or /25? A.  This is to host load balancers and proxies within the dedicated customer Account/VPC. Internally we will allocate a /27 per availability zone for each of the 3 availability zones.</p>"},{"location":"cloud-connectivity/cloud-connectivity-faq/#direct-connect","title":"Direct Connect","text":"<p>Q. Does the connection have to be dedicated? A.  No, a VLAN can be added to an existing layer 2 fabric provider, such as Equinix Fabric.</p> <p>Q. How much bandwidth for hosted connections? A.  50Mbps is fine.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/","title":"Do I Need Cloud Connectivity Options?","text":"<p>Internet Delivery (Single Region) is the standard product offering for NetBox Cloud. It comes with extensive security features (see below) and is suitable for the majority of use cases and environments.</p> <p>If you have special connectivity needs, there are several options available. However, in many cases where cloud connectivity options seem necessary, NetBox Cloud offers features that can address your needs without additional setup cost. This guide explores some of those features.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#netbox-cloud-security-features","title":"NetBox Cloud Security Features","text":"<p>Security and convenience are always in focus in the NetBox Cloud Platform and we understand that with any application, getting the balance right between security and convenience is crucial. At NetBox Labs, we believe that you shouldn\u2019t have to compromise in either area. Just a few of the Security features the NetBox Cloud platform offers are:</p> <ul> <li>Securing Access with Prefix Lists</li> <li>mTLS and Dedicated IP Addresses</li> <li>Database Backup and Restore</li> <li>Safe Upgrade Tool</li> <li>Two-Factor Authentication for the NetBox Labs Admin Console</li> <li>SSO Options for NetBox Cloud</li> </ul> <p>Read more about all of these features in this blog or watch an on-demand webinar to learn how these NetBox Cloud features are designed to make the lives of the network team easier, whilst at the same time enhancing the security of NetBox Cloud.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#crud-createupdatedelete-access-to-the-netbox-data-model-via-rest-and-graphql-api","title":"CRUD (Create/Update/Delete) Access to the NetBox Data Model via REST and GraphQL API","text":"<p>Out of the box NetBox Cloud allows you to programmatically interact with the NetBox Database to perform CRUD operations. This can be via the REST API or GraphQL interface.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#rest-api","title":"REST API","text":"<p>REST stands for Representational State Transfer. It's a particular type of API which employs HTTP requests and JavaScript Object Notation (JSON) to facilitate create, retrieve, update, and delete (CRUD) operations on objects within an application.</p> <p>Info</p> <p>To read more about how to get started with the REST API, check out the NetBox docs or this video from the NetBox Zero to Hero training course.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#graphql-api","title":"GraphQL API","text":"<p>NetBox provides a read-only GraphQL API to complement its REST API. This API is powered by Strawberry Django. GraphQL enables the client to specify an arbitrary nested list of fields to include in the response. All queries are made to the root /graphql API endpoint.</p> <p>Info</p> <p>To read more about how to get started with the GraphQL API, check out the NetBox docs.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#streaming-change-events-with-webhooks-and-event-streams","title":"Streaming Change Events with Webhooks and Event Streams","text":"<p>Events in NetBox can trigger calls to other systems with Webhooks, or other systems can subscribe to Event Streams, and in either case this can trigger other systems to take action based on the event.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#netbox-webhooks","title":"NetBox Webhooks","text":"<p>NetBox can be configured via Event Rules to transmit outgoing webhooks to remote systems in response to internal object changes. The receiver can act on the data in these webhook messages to perform related tasks.</p> <p>For example, suppose you want to automatically configure a monitoring system to start monitoring a device when its operational status is changed to active, and remove it from monitoring for any other status. You can create a webhook in NetBox for the device model and craft its content and destination URL to effect the desired change on the receiving system. Webhooks will be sent automatically by NetBox whenever the configured constraints are met.</p> <p>Info</p> <p>To read more about how to get started with the Webhooks, check out the NetBox docs.</p>"},{"location":"cloud-connectivity/do-i-need-cloud-connectivity/#netbox-event-streams","title":"NetBox Event Streams","text":"<p>NetBox Event Streams unlock event-driven architectures by enabling teams to easily subscribe to network state and management events from the NetBox Cloud Platform, feeding events to other systems or triggering automations. This capability spans various types of events, from operational updates like the addition of new devices, to security-oriented alerts such as unauthorized access attempts.</p> <p>Info</p> <p>To learn more about NetBox Event Streams you can sign up for an on-demand webinar or read our blog about how NetBox Event Streams integrated with SIEM tools like Splunk Enterprise and ElasticSearch, is setting a new standard for how networks are managed and secured.</p>"},{"location":"cloud-connectivity/internet-delivery/","title":"Internet Delivery (Single Region)","text":"<p>Internet Delivery (Single Region) is the standard product offering for NetBox Cloud. It comes with extensive security features (see below) and is suitable for the majority of use cases and environments:</p> <p></p>"},{"location":"cloud-connectivity/internet-delivery/#netbox-cloud-security-features","title":"NetBox Cloud Security Features","text":"<p>Below are just a few of the Security features available on the NetBox Cloud platform. All of these can be enabled over our standard Internet Delivery option:</p> <ul> <li>Securing Access with Prefix Lists</li> <li>mTLS and Dedicated IP Addresses</li> <li>Database Backup and Restore</li> <li>Safe Upgrade Tool</li> <li>Two-Factor Authentication for the NetBox Labs Admin Console</li> <li>SSO Options for NetBox Cloud</li> </ul> <p>Info</p> <p>Read more about all of these features in this blog or watch an on-demand webinar to learn how these NetBox Cloud features are designed to make the lives of the network team easier, whilst at the same time enhancing the security of NetBox Cloud.</p>"},{"location":"cloud-connectivity/ipsec-vpn-tunnels-setup/","title":"Ipsec vpn tunnels setup","text":""},{"location":"cloud-connectivity/ipsec-vpn-tunnels-setup/#coming-soon","title":"Coming Soon","text":""},{"location":"cloud-connectivity/ipsec-vpn-tunnels/","title":"IPSEC VPN Tunnels (Single Region)","text":"<p>In this solution NetBox Cloud is securely delivered over an IPSEC VPN. You have single or dual tunnel options, and use a static route or the preferred option of BGP routing. Customer IP space (/24 or /25) is assigned for the VPC as this is required to host load balancers and proxies within the dedicated customer Account/VPC.</p> <p>Internally we will allocate a /27 per availability zone for each of the 3 availability zones. The AWS VPN Gateway product provides 2 tunnels by default for resilience, and each terminates in a different availability zone.</p> <p></p>"},{"location":"cloud-connectivity/ipsec-vpn-tunnels/#redundancy-options","title":"Redundancy options","text":"<p>With the IPSEC VPN solution there are options for Single, Active/Passive and Active/Active Firewalls:</p> <p></p>"},{"location":"cloud-connectivity/which-connectivity-option/","title":"Which Cloud Connectivity Option is Right for Me?","text":"<p>In many cases where cloud connectivity options seem necessary, NetBox Cloud offers features that can address your needs without additional setup. In the majority of cases Internet Delivery (Single Region) is the most appropriate connectivity option, but there are some general recommendations depending on your use case:</p>"},{"location":"cloud-connectivity/which-connectivity-option/#recommendations-by-use-case","title":"Recommendations By Use Case","text":"Use Case Recommendation Reason General Use Internet Delivery (Single Region) Standard product, easy setup, and sufficient security for most use cases. AWS-Centric Environments AWS Private Link (Single Region) Fast setup, private IPs, and good integration with AWS infrastructure. Secure, Site-to-Site Connections IPSEC VPN Tunnels (Single Region) High flexibility and security with VPN tunnels and routing options. High-Performance Needs (Single Region) AWS Direct Connect (Single Region) Low latency, high performance, suitable for demanding applications. High-Performance, Multi-Region Needs AWS Direct Connect (Multi-Region) Highest performance, redundancy, and scalability across multiple regions."},{"location":"cloud-connectivity/which-connectivity-option/#detailed-breakdown","title":"Detailed Breakdown","text":"<p>This matrix should help you identify the most suitable NetBox Cloud connectivity option based on your specific requirements and priorities:</p> Criteria Internet Delivery (Single Region) AWS Private Link (Single Region) IPSEC VPN Tunnels (Single Region) AWS Direct Connect (Single Region) AWS Direct Connect (Multi-Region) Ease of Setup Standard product, easy setup Fast turn-up times Requires VPN configuration Requires Direct Connect setup Requires Direct Connect setup Redundancy Single region. Multiple AZs Single region. Multiple AZs Single region. Multiple AZs. Single or dual tunnels Single region. Multiple AZs. Single or dual Direct Connect options Multi Region. Multiple AZs. Replicated NetBoxes Cost Included Low, due to Private Link Medium, dependent on VPN set up Medium, due to Direct Connect Highest, due to multi-region setup Performance Standard internet performance Low latency due to Private Link Variable, dependent on VPN quality High performance, low latency Highest performance, low latency Management Complexity Low Medium High Medium High Recommended For General use AWS-centric environments Secure, site-to-site connections High-performance needs, single region High-performance, multi-region needs"},{"location":"netbox-assurance/","title":"NetBox Assurance","text":"<p>NetBox Cloud NetBox Enterprise</p> <p>NetBox Assurance automatically detects operational drift between your intended network design (documented in NetBox) and your actual network infrastructure. It continuously monitors network and infrastructure, comparing your intended design against real-world infrastructure to uncover discrepancies and provide proactive remediation capabilities.</p> <p>By ensuring your NetBox documentation stays current and accurate, Assurance enables faster incident resolution, better compliance, and the confidence to move quickly with reliable network automation.</p>"},{"location":"netbox-assurance/#what-makes-netbox-assurance-unique","title":"What Makes NetBox Assurance Unique","text":"<p>Unlike traditional monitoring tools that focus on performance metrics, NetBox Assurance focuses on configuration accuracy and documentation integrity. It bridges the gap between what you've documented in NetBox and what actually exists in your network.</p>"},{"location":"netbox-assurance/#automated-operational-drift-detection","title":"Automated Operational Drift Detection","text":"<ul> <li>Continuous comparison of ingested network data against NetBox documentation</li> <li>Real-time detection of configuration changes and undocumented infrastructure</li> <li>Intelligent analysis that identifies meaningful deviations requiring attention</li> <li>Historical tracking of changes and drift patterns over time</li> </ul>"},{"location":"netbox-assurance/#proactive-issue-resolution","title":"Proactive Issue Resolution","text":"<ul> <li>Early warning system for configuration drift before it becomes a problem</li> <li>Actionable insights with specific remediation recommendations</li> <li>Workflow integration for team collaboration and change management</li> <li>Reduced Mean Time to Repair (MTTR) with trustworthy documentation during incidents</li> </ul>"},{"location":"netbox-assurance/#key-features","title":"Key Features","text":"<ul> <li>Instant Drift Detection: Continuously compare your intended design against real-world infrastructure to uncover discrepancies</li> <li>Proactive Issue Resolution: Act on real-time data to remediate drift before it escalates, reducing downtime and troubleshooting delays</li> <li>Automated Documentation: Automatically keep your NetBox documentation aligned with operational reality, ensuring a consistent source of truth</li> <li>Real-time Monitoring: Provides real-time insights into network configuration changes</li> <li>Integration Ready: Works seamlessly with existing network and infrastructure operations investments</li> <li>Deviation Management: Comprehensive workflow for reviewing, analyzing, and resolving detected drift</li> <li>Data Quality Assurance: Validates the accuracy and completeness of network documentation</li> </ul>"},{"location":"netbox-assurance/#how-netbox-assurance-works","title":"How NetBox Assurance Works","text":""},{"location":"netbox-assurance/#data-ingestion-pipeline","title":"Data Ingestion Pipeline","text":"<p>Network data flows into NetBox Enterprise through multiple sources: 1. NetBox Discovery Agents - Automated network and device discovery 2. Controller Integrations - VMware vCenter, Juniper Mist, Cisco Catalyst Center, etc. 3. Diode API - Custom integrations using Python or Go SDKs</p>"},{"location":"netbox-assurance/#intelligent-analysis","title":"Intelligent Analysis","text":"<p>Assurance automatically compares ingested data against existing NetBox documentation to identify: - New devices discovered but not documented in NetBox - Configuration changes that deviate from intended state - Missing infrastructure that exists in documentation but not in reality - Data quality issues that require investigation or cleanup</p>"},{"location":"netbox-assurance/#deviation-workflow","title":"Deviation Workflow","text":"<p>When operational drift is detected, Assurance creates deviations that provide: - Detailed change analysis showing exactly what differs - Proposed remediation actions to resolve the drift - Historical context for understanding change patterns - Collaboration tools for team review and approval</p>"},{"location":"netbox-assurance/#common-use-cases","title":"Common Use Cases","text":""},{"location":"netbox-assurance/#day-1-initial-netbox-population","title":"Day 1: Initial NetBox Population","text":"<ul> <li>Controlled onboarding of network data into NetBox with review and approval workflows</li> <li>Data quality validation before information becomes part of your source of truth</li> <li>Faster time to value with confidence in documentation accuracy</li> </ul>"},{"location":"netbox-assurance/#day-15-network-management-maturity","title":"Day 1.5: Network Management Maturity","text":"<ul> <li>Gradual documentation improvement while maintaining daily operations</li> <li>Process improvement insights based on drift detection patterns</li> <li>Foundation building for network automation initiatives</li> </ul>"},{"location":"netbox-assurance/#day-2-operational-excellence","title":"Day 2: Operational Excellence","text":"<ul> <li>Proactive drift detection for mature network operations teams</li> <li>Immediate response to unauthorized or unexpected configuration changes</li> <li>Continuous validation of network automation results and change management processes</li> </ul>"},{"location":"netbox-assurance/#specific-applications","title":"Specific Applications","text":"<ul> <li>Network Operations: Maintain network configurations consistent with documented standards</li> <li>Infrastructure Management: Ensure infrastructure remains aligned with planned designs  </li> <li>Compliance and Security: Support compliance efforts by detecting unauthorized changes and configuration drift</li> <li>Incident Prevention: Identify and address deviations proactively to prevent major disruptions</li> <li>Change Management: Track and validate configuration changes across your infrastructure</li> </ul>"},{"location":"netbox-assurance/#integration-with-netbox-discovery","title":"Integration with NetBox Discovery","text":"<p>NetBox Assurance and NetBox Discovery work together to provide complete network visibility and control:</p> <ul> <li>Discovery provides the data - Automated collection from network devices and controllers</li> <li>Assurance provides the intelligence - Analysis, drift detection, and remediation workflows</li> <li>Combined value - Complete visibility and control over network documentation accuracy</li> </ul> <p>This integration enables teams to not only discover their network infrastructure automatically but also maintain its accuracy over time.</p>"},{"location":"netbox-assurance/#availability","title":"Availability","text":""},{"location":"netbox-assurance/#netbox-enterprise","title":"NetBox Enterprise","text":"<p>NetBox Assurance is available as an optional component of NetBox Enterprise. Your license file determines whether Assurance services are enabled during installation.</p>"},{"location":"netbox-assurance/#netbox-cloud","title":"NetBox Cloud","text":"<p>NetBox Assurance is available as an optional add-on for NetBox Cloud. When purchased, services are automatically provisioned and integrated with your instance.</p>"},{"location":"netbox-assurance/#netbox-community-edition","title":"NetBox Community Edition","text":"<p>NetBox Assurance is not available for NetBox Community Edition. However, the underlying Diode project provides data ingestion capabilities that work with NetBox Discovery agents.</p>"},{"location":"netbox-assurance/#documentation-and-resources","title":"Documentation and Resources","text":""},{"location":"netbox-assurance/#getting-started","title":"Getting Started","text":"<ul> <li>Getting Started Guide - Complete setup and configuration guide for new users</li> <li>Using the UI - Detailed guide to navigating and using the NetBox Assurance interface</li> </ul>"},{"location":"netbox-assurance/#integration-guides","title":"Integration Guides","text":"<ul> <li>NetBox Discovery - Set up automated network discovery for data ingestion</li> <li>Diode Integration - Advanced API and SDK documentation for custom integrations</li> </ul>"},{"location":"netbox-assurance/#support-and-community","title":"Support and Community","text":"<ul> <li>Community Support: Connect with the community on Slack in the <code>#netbox</code> channel</li> </ul> <p>With NetBox Assurance, teams can detect, report, and resolve network deviations in real time, ensuring a consistent and reliable network environment through continuous validation and corrective actions. Transform your network operations by ensuring your documentation stays current and accurate, enabling faster incident resolution, better compliance, and the confidence to move quickly with reliable network automation.</p>"},{"location":"netbox-assurance/getting-started/","title":"Getting Started with NetBox Assurance","text":"<p>NetBox Cloud NetBox Enterprise</p> <p>NetBox Assurance automatically detects operational drift between your intended network design (documented in NetBox) and your actual network infrastructure. This guide will help you understand, enable, and start using NetBox Assurance to maintain accurate network documentation and proactive drift detection.</p>"},{"location":"netbox-assurance/getting-started/#what-is-netbox-assurance","title":"What is NetBox Assurance?","text":"<p>NetBox Assurance provides automated operational drift detection by continuously comparing ingested network data against your documented intent in NetBox. When discrepancies are found, Assurance creates \"deviations\" that you can review, analyze, and remediate.</p>"},{"location":"netbox-assurance/getting-started/#key-capabilities","title":"Key Capabilities","text":"<ul> <li>Instant Drift Detection: Continuously compare your intended design against real-world infrastructure</li> <li>Proactive Issue Resolution: Act on real-time data to remediate drift before it escalates</li> <li>Automated Documentation: Keep your NetBox documentation aligned with operational reality</li> <li>Real-time Monitoring: Provides real-time insights into network configuration changes</li> <li>Integration Ready: Works seamlessly with existing network operations investments</li> </ul>"},{"location":"netbox-assurance/getting-started/#business-value","title":"Business Value","text":"<p>NetBox Assurance solves critical challenges that network teams face daily:</p>"},{"location":"netbox-assurance/getting-started/#faster-incident-resolution","title":"Faster Incident Resolution","text":"<ul> <li>Trustworthy documentation when you need it most during incidents</li> <li>Reduced Mean Time to Repair (MTTR) with accurate network state information</li> <li>Proactive detection of issues before they become major problems</li> </ul>"},{"location":"netbox-assurance/getting-started/#improved-compliance-posture","title":"Improved Compliance Posture","text":"<ul> <li>Automated auditing against documented standards</li> <li>Historical tracking of network changes for compliance reporting</li> <li>Immediate detection of unauthorized changes</li> </ul>"},{"location":"netbox-assurance/getting-started/#reduced-operational-overhead","title":"Reduced Operational Overhead","text":"<ul> <li>Eliminate manual documentation verification processes</li> <li>Automated detection of configuration drift</li> <li>Streamlined change management workflows</li> </ul>"},{"location":"netbox-assurance/getting-started/#better-change-management","title":"Better Change Management","text":"<ul> <li>Immediate visibility into the impact of network changes</li> <li>Confidence to move faster with reliable source of truth</li> <li>Reduced risk of undocumented changes causing issues</li> </ul>"},{"location":"netbox-assurance/getting-started/#how-netbox-assurance-works","title":"How NetBox Assurance Works","text":""},{"location":"netbox-assurance/getting-started/#data-ingestion","title":"Data Ingestion","text":"<p>Network data flows into NetBox Enterprise through multiple sources:</p> <ol> <li>NetBox Discovery Agents - Automated network and device discovery</li> <li>Controller Integrations - VMware vCenter, Juniper Mist, Cisco Catalyst Center, etc.</li> <li>Diode API - Custom integrations using Python or Go SDKs</li> </ol>"},{"location":"netbox-assurance/getting-started/#analysis-comparison","title":"Analysis &amp; Comparison","text":"<p>Assurance automatically compares ingested data against existing NetBox documentation to identify: - New devices discovered but not documented - Configuration changes that deviate from intended state - Missing infrastructure that exists in documentation but not in reality - Data quality issues that require investigation</p>"},{"location":"netbox-assurance/getting-started/#deviation-management","title":"Deviation Management","text":"<p>When operational drift is detected, Assurance creates deviations that provide: - Detailed change analysis showing what differs - Proposed remediation actions to resolve the drift - Historical context for understanding patterns - Workflow tools for team collaboration</p>"},{"location":"netbox-assurance/getting-started/#availability-and-licensing","title":"Availability and Licensing","text":""},{"location":"netbox-assurance/getting-started/#netbox-enterprise","title":"NetBox Enterprise","text":"<p>NetBox Assurance is available as an optional component of NetBox Enterprise. During installation, your license file determines whether Assurance is enabled.</p> <p>Installation: When entitled, Assurance services are automatically deployed along with the NetBox Assurance UI and Diode data plugins.</p>"},{"location":"netbox-assurance/getting-started/#netbox-cloud","title":"NetBox Cloud","text":"<p>NetBox Assurance is available as an optional add-on for NetBox Cloud. When purchased, services are provisioned in the cloud and securely integrated with your NetBox Cloud instance.</p> <p>Setup: The NetBox Assurance UI and Diode data plugins are automatically installed on your instance.</p>"},{"location":"netbox-assurance/getting-started/#netbox-community-edition","title":"NetBox Community Edition","text":"<p>NetBox Assurance is not available for NetBox Community Edition. However, the underlying Diode project provides data ingestion capabilities that work with NetBox Discovery agents.</p>"},{"location":"netbox-assurance/getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before enabling NetBox Assurance, ensure you have:</p>"},{"location":"netbox-assurance/getting-started/#technical-requirements","title":"Technical Requirements","text":"<ul> <li>NetBox Enterprise 1.10+ or NetBox Cloud with Assurance add-on</li> <li>Active NetBox Assurance license</li> <li>Network connectivity for data ingestion sources</li> <li>Appropriate user permissions in NetBox</li> </ul>"},{"location":"netbox-assurance/getting-started/#data-sources","title":"Data Sources","text":"<p>To maximize value from NetBox Assurance, you'll need at least one data source:</p> <ul> <li>NetBox Discovery - Recommended for automated network discovery</li> <li>Controller integrations - For centralized network management platforms</li> <li>Custom integrations - Using the Diode SDK</li> </ul>"},{"location":"netbox-assurance/getting-started/#getting-started-workflow","title":"Getting Started Workflow","text":""},{"location":"netbox-assurance/getting-started/#phase-1-initial-setup","title":"Phase 1: Initial Setup","text":"<ol> <li>Verify Assurance is enabled in your NetBox Enterprise or NetBox Cloud instance</li> <li>Set up data ingestion using NetBox Discovery or other sources</li> <li>Configure user permissions for team members who will use Assurance</li> <li>Review the UI documentation to understand the interface</li> </ol>"},{"location":"netbox-assurance/getting-started/#phase-2-first-data-ingestion","title":"Phase 2: First Data Ingestion","text":"<ol> <li>Start with a small network segment to understand the workflow</li> <li>Ingest initial data from your chosen source</li> <li>Review generated deviations to understand what Assurance detected</li> <li>Process your first deviations using the UI workflow</li> </ol>"},{"location":"netbox-assurance/getting-started/#phase-3-operational-integration","title":"Phase 3: Operational Integration","text":"<ol> <li>Establish daily review processes for active deviations</li> <li>Create team workflows for deviation triage and remediation</li> <li>Expand coverage to additional network segments</li> <li>Integrate with change management processes</li> </ol>"},{"location":"netbox-assurance/getting-started/#common-use-cases","title":"Common Use Cases","text":""},{"location":"netbox-assurance/getting-started/#day-1-initial-netbox-population","title":"Day 1: Initial NetBox Population","text":"<ul> <li>Controlled onboarding of network data into NetBox</li> <li>Review and refine data before it becomes part of your source of truth</li> <li>Faster time to value with confidence in data accuracy</li> </ul>"},{"location":"netbox-assurance/getting-started/#day-15-improving-network-management-maturity","title":"Day 1.5: Improving Network Management Maturity","text":"<ul> <li>Gradual documentation improvement while maintaining daily operations</li> <li>Process improvement insights based on drift patterns</li> <li>Foundation building for network automation initiatives</li> </ul>"},{"location":"netbox-assurance/getting-started/#day-2-operational-excellence","title":"Day 2: Operational Excellence","text":"<ul> <li>Proactive drift detection for mature network operations</li> <li>Immediate response to unauthorized or unexpected changes</li> <li>Continuous validation of network automation results</li> </ul>"},{"location":"netbox-assurance/getting-started/#integration-with-netbox-discovery","title":"Integration with NetBox Discovery","text":"<p>NetBox Assurance and NetBox Discovery work together seamlessly:</p> <ul> <li>Discovery provides the data - Automated collection from network devices and controllers</li> <li>Assurance provides the intelligence - Analysis, drift detection, and remediation workflows</li> <li>Combined value - Complete visibility and control over network documentation accuracy</li> </ul> <p>Recommendation: Start with NetBox Discovery for automated data collection, then use NetBox Assurance to manage the ingestion and detect ongoing drift.</p>"},{"location":"netbox-assurance/getting-started/#next-steps","title":"Next Steps","text":"<ol> <li>Explore the UI - Learn how to navigate and use the NetBox Assurance interface</li> <li>Set up NetBox Discovery - Configure automated data collection</li> <li>Learn about Diode - Understand the underlying data ingestion platform</li> </ol>"},{"location":"netbox-assurance/getting-started/#support-and-resources","title":"Support and Resources","text":"<ul> <li>UI Documentation: Detailed guide to using the NetBox Assurance interface</li> <li>NetBox Discovery: Complete setup and configuration guide</li> <li>Diode Integration: Advanced API and SDK documentation</li> <li>Community Support: Connect with the community on Slack in the <code>#netbox</code> channel</li> </ul> <p>NetBox Assurance transforms network operations by ensuring your documentation stays current and accurate, enabling faster incident resolution, better compliance, and the confidence to move quickly with reliable network automation. </p>"},{"location":"netbox-assurance/using-the-ui/","title":"Using the NetBox Assurance UI","text":"<p>NetBox Cloud NetBox Enterprise</p> <p>The NetBox Assurance plugin provides a comprehensive web interface within NetBox for monitoring network drift, viewing deviation reports, and managing remediation workflows. The plugin integrates seamlessly with NetBox's existing interface while providing specialized tools for network assurance.</p> <p>New to NetBox Assurance?</p> <p>If you're just getting started, check out the Getting Started Guide for setup instructions and initial configuration before diving into the UI details below.</p>"},{"location":"netbox-assurance/using-the-ui/#navigation","title":"Navigation","text":"<p>Once the NetBox Assurance plugin is installed, you'll find the Assurance menu in the NetBox sidebar with the following sections:</p>"},{"location":"netbox-assurance/using-the-ui/#deviation-types","title":"Deviation Types","text":"<ul> <li>Deviation Types: Browse and manage different types of network deviations that can be detected</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#deviations","title":"Deviations","text":"<ul> <li>Active Deviations: View currently unresolved configuration deviations</li> <li>All Deviations: Complete list of all detected deviations (active and resolved)</li> <li>Archived Deviations: Historical view of resolved or archived deviations</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#main-deviation-views","title":"Main Deviation Views","text":""},{"location":"netbox-assurance/using-the-ui/#all-deviations-list","title":"All Deviations List","text":"<p>The main deviations page provides a comprehensive overview of all detected network drift:</p> <p>Key Features: - Visual Charts: Timeline charts showing deviation trends and patterns - Filterable Table: Search and filter deviations by various criteria - Export Options: Export deviation data in multiple formats - Bulk Actions: Apply actions to multiple deviations simultaneously</p> <p>Available Filters: - Date range selection for focused analysis - Deviation type filtering - Status-based filtering - Source-based filtering</p>"},{"location":"netbox-assurance/using-the-ui/#active-deviations","title":"Active Deviations","text":"<p>Shows only unresolved deviations that require attention: - Real-time view of current network drift - Prioritized by detection date - Immediate action items for network operations teams</p> <p></p>"},{"location":"netbox-assurance/using-the-ui/#archived-deviations","title":"Archived Deviations","text":"<p>Historical view of resolved deviations: - Track remediation history - Analyze patterns in network drift - Compliance reporting and auditing</p>"},{"location":"netbox-assurance/using-the-ui/#deviation-detail-view","title":"Deviation Detail View","text":"<p>When you click on a specific deviation, you'll see detailed information:</p>"},{"location":"netbox-assurance/using-the-ui/#overview-tab","title":"Overview Tab","text":"<p>Deviation Information: - Deviation name and identifier - Data type affected - Number of changes detected - Current status with visual indicators - Branch information (if using NetBox branching) - Source system and timestamp - Last update information</p> <p>Ingested Data Panel: - Raw data that was ingested from the network - Formatted JSON view for technical analysis</p> <p>Error Details (if applicable): - Error messages for failed operations - Detailed error information for troubleshooting</p> <p></p>"},{"location":"netbox-assurance/using-the-ui/#changes-tab","title":"Changes Tab","text":"<ul> <li>Detailed view of specific configuration changes</li> <li>Object-by-object comparison</li> <li>Before/after state visualization</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#bulk-operations","title":"Bulk Operations","text":"<p>The deviation list supports several bulk operations:</p>"},{"location":"netbox-assurance/using-the-ui/#rediff-selected","title":"Rediff Selected","text":"<ul> <li>Re-analyze selected deviations</li> <li>Useful when network state may have changed</li> <li>Updates deviation status based on current conditions</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#ignore-selected","title":"Ignore Selected","text":"<ul> <li>Mark deviations as acceptable</li> <li>Removes them from active monitoring</li> <li>Useful for planned configuration differences</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#apply-selected","title":"Apply Selected","text":"<ul> <li>Automatically remediate selected deviations</li> <li>Applies corrections based on predefined rules</li> <li>Updates NetBox or network devices as configured</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#data-visualization","title":"Data Visualization","text":""},{"location":"netbox-assurance/using-the-ui/#timeline-charts","title":"Timeline Charts","text":"<ul> <li>Visual representation of deviation trends over time</li> <li>Stacked bar charts showing deviation types</li> <li>Customizable date ranges for analysis</li> <li>Color-coded by deviation status</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#status-indicators","title":"Status Indicators","text":"<p>Deviations are marked with clear visual indicators: - Active: Requires attention - Applied: Successfully remediated - Failed: Remediation attempt failed - Ignored: Marked as acceptable</p>"},{"location":"netbox-assurance/using-the-ui/#export-and-reporting","title":"Export and Reporting","text":""},{"location":"netbox-assurance/using-the-ui/#export-options","title":"Export Options","text":"<ul> <li>Current View: Export filtered results</li> <li>All Data: Complete deviation dataset</li> <li>Custom Templates: Use predefined export formats</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#supported-formats","title":"Supported Formats","text":"<ul> <li>Table format for immediate viewing</li> <li>Structured data formats for integration</li> <li>Custom export templates for specific reporting needs</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#integration-features","title":"Integration Features","text":""},{"location":"netbox-assurance/using-the-ui/#netbox-integration","title":"NetBox Integration","text":"<ul> <li>Seamless integration with NetBox's existing interface</li> <li>Respects NetBox's user permissions and roles</li> <li>Consistent styling and user experience</li> <li>Integration with NetBox's change logging system</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#branching-support","title":"Branching Support","text":"<ul> <li>Compatible with NetBox branching features</li> <li>Branch-specific deviation tracking</li> <li>Branch information displayed in deviation details</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#workflow-best-practices","title":"Workflow Best Practices","text":""},{"location":"netbox-assurance/using-the-ui/#daily-operations","title":"Daily Operations","text":"<ol> <li>Review Active Deviations: Start with the active deviations view</li> <li>Analyze Trends: Check timeline charts for patterns</li> <li>Prioritize Actions: Focus on critical deviations first</li> <li>Bulk Processing: Use bulk actions for similar deviations</li> </ol>"},{"location":"netbox-assurance/using-the-ui/#investigation-process","title":"Investigation Process","text":"<ol> <li>Drill Down: Click on deviations for detailed analysis</li> <li>Review Changes: Examine specific configuration differences</li> <li>Check Source Data: Verify ingested data accuracy</li> <li>Determine Action: Decide between applying, ignoring, or escalating</li> </ol>"},{"location":"netbox-assurance/using-the-ui/#remediation-workflow","title":"Remediation Workflow","text":"<ol> <li>Select Appropriate Action: Choose between update NetBox or correct device</li> <li>Use Bulk Operations: Process similar deviations together</li> <li>Monitor Results: Verify successful remediation</li> <li>Document Decisions: Use NetBox's change logging for audit trails</li> </ol>"},{"location":"netbox-assurance/using-the-ui/#troubleshooting","title":"Troubleshooting","text":""},{"location":"netbox-assurance/using-the-ui/#common-issues","title":"Common Issues","text":"<ul> <li>Failed Deviations: Check error details for specific failure reasons</li> <li>Missing Data: Verify source system connectivity</li> <li>Permission Issues: Ensure proper NetBox user permissions</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Use date range filters to limit large datasets</li> <li>Export data in smaller chunks for better performance</li> <li>Leverage bulk operations for efficiency</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#next-steps-and-resources","title":"Next Steps and Resources","text":""},{"location":"netbox-assurance/using-the-ui/#setting-up-data-sources","title":"Setting Up Data Sources","text":"<p>If you haven't already configured data ingestion, review these guides: - NetBox Discovery Setup - Automated network discovery and data collection - Diode Integration - Custom data ingestion using APIs and SDKs</p>"},{"location":"netbox-assurance/using-the-ui/#operational-integration","title":"Operational Integration","text":"<ul> <li>Getting Started Guide - Complete setup and workflow recommendations</li> <li>Change Management: Integrate Assurance workflows with your existing change management processes</li> <li>Team Training: Ensure team members understand deviation triage and remediation workflows</li> </ul>"},{"location":"netbox-assurance/using-the-ui/#advanced-configuration","title":"Advanced Configuration","text":"<ul> <li>Custom Deviation Types: Configure specific deviation types for your environment</li> <li>Integration Workflows: Set up automated responses to specific deviation patterns</li> <li>Reporting Templates: Create custom export templates for compliance and operational reporting</li> </ul> <p>The NetBox Assurance UI provides a powerful platform for managing network drift detection and remediation, helping maintain consistency between your documented network design and operational reality through an intuitive web interface.</p>"},{"location":"netbox-discovery/","title":"Overview","text":"<p>NetBox Cloud NetBox Enterprise NetBox Community</p>"},{"location":"netbox-discovery/#netbox-discovery","title":"NetBox Discovery","text":"<p>NetBox Discovery is an advanced network discovery and observability solution designed to simplify documenting your network and help detect network drift. It extends NetBox by providing automated network and device discovery capabilities through the orb-agent, a lightweight and scalable discovery component.</p>"},{"location":"netbox-discovery/#enterprise-benefits","title":"Enterprise Benefits","text":"<p>NetBox Discovery enables enterprise teams to:</p> <ul> <li>Accelerate Network Documentation: Automatically discover and populate your NetBox instance with accurate network topology and device information</li> <li>Ensure Compliance: Continuously audit your network against documented standards and detect unauthorized changes</li> <li>Reduce Manual Effort: Eliminate time-consuming manual data entry and reduce human error in network documentation</li> <li>Enable Automation: Maintain an accurate source of truth that powers network automation workflows</li> <li>Detect Drift: Identify when your network configuration deviates from intended designs</li> </ul>"},{"location":"netbox-discovery/#getting-started","title":"Getting Started","text":"<p>Ready to start discovering your network? Follow our comprehensive getting started guide:</p> <p>Get Started with NetBox Discovery - Complete setup and configuration guide</p>"},{"location":"netbox-discovery/#quick-start-paths","title":"Quick Start Paths","text":"<p>For NetBox Enterprise Users: - Enterprise Quick Start - Get up and running quickly with your existing NetBox Enterprise deployment</p> <p>For New Deployments: - Complete Setup Guide - Full end-to-end installation and configuration</p>"},{"location":"netbox-discovery/#enterprise-use-cases","title":"Enterprise Use Cases","text":""},{"location":"netbox-discovery/#network-asset-management","title":"Network Asset Management","text":"<p>Automatically discover and maintain an accurate inventory of network devices, interfaces, and IP addresses across your enterprise infrastructure.</p> <p>Ideal for: Large enterprises, multi-site deployments, compliance requirements</p>"},{"location":"netbox-discovery/#network-auditing-compliance","title":"Network Auditing &amp; Compliance","text":"<p>Continuously scan your network to ensure configurations match documented standards and detect unauthorized changes.</p> <p>Ideal for: Regulated industries, security-focused organizations, change management processes</p>"},{"location":"netbox-discovery/#infrastructure-documentation","title":"Infrastructure Documentation","text":"<p>Keep your network documentation current by automatically updating NetBox with discovered changes to your network topology.</p> <p>Ideal for: Growing organizations, complex networks, automation initiatives</p>"},{"location":"netbox-discovery/#key-features","title":"Key Features","text":"<ul> <li>Automated Network Discovery: Schedule scans and identify devices and assets across your network using multiple discovery backends</li> <li>Flexible Configuration: Define custom discovery policies tailored to specific network environments through YAML configuration  </li> <li>Enterprise Security: Integrate with external secret stores like HashiCorp Vault for secure credential handling</li> <li>Multiple Discovery Methods: Support for network discovery, device discovery, and worker backend capabilities</li> <li>Seamless Integration: Fully integrated with NetBox through Diode for data ingestion and reconciliation</li> <li>Production Ready: Docker-based deployment designed for enterprise scaling and management</li> </ul>"},{"location":"netbox-discovery/#architecture-overview","title":"Architecture Overview","text":"<p>NetBox Discovery leverages the orb-agent, a containerized Go application that uses network protocols (ICMP, TCP, UDP, SSH) to discover devices and other network assets. The agent is configured through YAML files that define:</p> <ul> <li>Configuration Sources: Local files or Git repositories for policy management</li> <li>Secrets Management: Integration with external secret stores for credential security</li> <li>Discovery Policies: Customizable rules for network scanning and device identification</li> <li>Backend Selection: Choice of discovery methods based on network requirements</li> </ul> <p>Discovered data is sent to Diode for ingestion into NetBox, where it can be matched and reconciled to identify drift and deviations. The NetBox database is updated where relevant, ensuring data accuracy and reducing manual entry.</p>"},{"location":"netbox-discovery/#support-and-resources","title":"Support and Resources","text":"<ul> <li>Getting Started: For complete setup instructions, see the NetBox Discovery Getting Started Guide</li> <li>Diode Documentation: For advanced Diode configuration and SDK usage, see the Diode documentation</li> <li>GitHub Repository: Find the orb-agent source code here</li> <li>Community Support: Connect with the community on Slack in the <code>#netbox</code> channel</li> </ul> <p>By leveraging NetBox Discovery, organizations can enhance their network visibility, streamline IT operations, and maintain an accurate source of truth for their network infrastructure.</p>"},{"location":"netbox-discovery/getting-started/","title":"Get Started with NetBox Discovery","text":"<p>NetBox Cloud NetBox Enterprise NetBox Community</p> <p>This guide will help you set up and start using NetBox Discovery to ingest network data into NetBox.</p>"},{"location":"netbox-discovery/getting-started/#for-netbox-enterprise","title":"For NetBox Enterprise","text":"<p>If you're using NetBox Enterprise, you have several deployment options optimized for enterprise environments:</p>"},{"location":"netbox-discovery/getting-started/#quick-start-for-existing-netbox-enterprise","title":"Quick Start for Existing NetBox Enterprise","text":"<p>If you already have NetBox Enterprise running, follow this streamlined approach:</p> <ol> <li>Deploy Diode Server (recommended on separate infrastructure)</li> <li>Install Diode Plugin (adds to your existing NetBox Enterprise)</li> <li>Configure Discovery Agents (deploy on network segments)</li> </ol> <p>Enterprise Benefits: This approach provides centralized discovery management, secure credential handling, and scales horizontally across multiple network segments.</p>"},{"location":"netbox-discovery/getting-started/#enterprise-deployment-considerations","title":"Enterprise Deployment Considerations","text":"<ul> <li>Security: NetBox Discovery supports secure credential handling and can integrate with external secret management systems</li> <li>Scalability: Deploy multiple discovery agents across different network segments or data centers</li> <li>Compliance: Supports enterprise auditing and compliance workflows through comprehensive logging</li> <li>High Availability: Diode server can be deployed in high-availability configurations</li> </ul>"},{"location":"netbox-discovery/getting-started/#common-enterprise-use-cases","title":"Common Enterprise Use Cases","text":"<ul> <li>Network Asset Discovery: Automated discovery of network devices across multiple sites</li> <li>Compliance Auditing: Continuous monitoring of network configuration against enterprise standards  </li> <li>Change Detection: Identify unauthorized changes to network infrastructure</li> <li>Documentation Automation: Keep network documentation current without manual intervention</li> </ul>"},{"location":"netbox-discovery/getting-started/#enterprise-setup-path","title":"Enterprise Setup Path","text":"<ol> <li>Review Enterprise Prerequisites - Additional considerations for enterprise deployments</li> <li>Deploy Production Diode - Set up Diode server for enterprise use</li> <li>Configure NetBox Enterprise Plugin - Integrate with your existing NetBox Enterprise</li> <li>Deploy Discovery Agents - Set up agents across your network infrastructure</li> </ol>"},{"location":"netbox-discovery/getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>NetBox version 4.2.3 or later</li> <li>Docker version 27.0.3 or newer</li> <li>bash 4.x or newer</li> <li>jq</li> <li>Network connectivity between your NetBox server and the Diode server</li> <li>Sufficient permissions to run Docker commands</li> </ul>"},{"location":"netbox-discovery/getting-started/#enterprise-prerequisites","title":"Enterprise Prerequisites","text":"<p>For enterprise deployments, also consider:</p> <ul> <li>Network Segmentation: Ensure discovery agents can reach target network segments</li> <li>Firewall Configuration: Open necessary ports for Diode communication (default: 8080)</li> <li>DNS Resolution: Ensure all components can resolve each other's hostnames</li> <li>Secret Management: Plan integration with your enterprise secret management system</li> <li>Resource Planning: Size Diode server infrastructure based on discovery scope</li> <li>Backup Strategy: Include Diode server data in your backup procedures</li> </ul>"},{"location":"netbox-discovery/getting-started/#installation-steps","title":"Installation Steps","text":""},{"location":"netbox-discovery/getting-started/#deploy-diode-server","title":"Deploy Diode server","text":"<p>Host: These steps should be performed on the host where you want to run the Diode server.</p> <p>Note: For the complete installation instructions, please refer to the official Diode Server documentation.</p> <p>We provide a <code>quickstart.sh</code> script to automate the setup process. The script will download and configure all necessary files:</p> <ul> <li><code>docker-compose.yaml</code> \u2014 Defines Diode server containers</li> <li><code>.env</code> \u2014 Environment settings for customization</li> <li><code>nginx.conf</code> \u2014 Nginx configuration for routing Diode endpoints</li> <li> <p><code>client-credentials.json</code> \u2014 Defines OAuth2 clients for secure communication</p> </li> <li> <p>Create a working directory:    <pre><code>mkdir -p /opt/diode\ncd /opt/diode\n</code></pre></p> </li> <li> <p>Download and prepare the quickstart script:    <pre><code>curl -sSfLo quickstart.sh https://raw.githubusercontent.com/netboxlabs/diode/release/diode-server/docker/scripts/quickstart.sh\nchmod +x quickstart.sh\n</code></pre></p> </li> <li> <p>Run the script with your NetBox server address:    <pre><code>./quickstart.sh https://&lt;netbox-server&gt;\n</code></pre></p> <p>Note: Replace <code>&lt;netbox-server&gt;</code> with your actual NetBox server address. Do not include a trailing slash. Example: <code>./quickstart.sh https://netbox.example.com</code></p> </li> </ul> <p>This should have created an <code>.env</code> file for your environment.</p> <ol> <li> <p>Start the Diode server:    <pre><code>docker compose up -d\n</code></pre></p> </li> <li> <p>Verify the Diode server is running:    <pre><code>docker compose ps\n</code></pre>    All services should show as \"running\" or \"healthy\".</p> </li> <li> <p>Extract the <code>netbox-to-diode</code> client secret. This will be needed for the Diode NetBox plugin installation:    <pre><code>echo $(jq -r '.[] | select(.client_id == \"netbox-to-diode\") | .client_secret' /opt/diode/oauth2/client/client-credentials.json)\n</code></pre></p> <p>Note: This will return a credential that will be used by the Diode NetBox plugin to connect to the Diode server. Store it safely.</p> </li> </ol>"},{"location":"netbox-discovery/getting-started/#install-diode-netbox-plugin","title":"Install Diode NetBox Plugin","text":"<p>Host: These steps should be performed on the host where NetBox is installed.</p> <p>Note: For the complete installation instructions, please refer to the official Diode NetBox Plugin documentation.</p> <ol> <li> <p>Source the NetBox Python Virtual Environment <pre><code>cd /opt/netbox\nsource venv/bin/activate\n</code></pre></p> </li> <li> <p>Install the Plugin Package <pre><code>pip install netboxlabs-diode-netbox-plugin\n</code></pre></p> </li> <li> <p>Configure NetBox Settings    Add the following to your <code>configuration.py</code>:    <pre><code>PLUGINS = [\n    \"netbox_diode_plugin\",\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_diode_plugin\": {\n        # Diode gRPC target for communication with Diode server\n        \"diode_target_override\": \"grpc://&lt;diode-server:port&gt;/diode\",\n        # NetBox username associated with changes applied via plugin\n        \"diode_username\": \"diode\",\n        # netbox-to-diode client secret from earlier step\n        \"netbox_to_diode_client_secret\": \"&lt;netbox-to-diode-secret&gt;\"\n    },\n}\n</code></pre></p> <p>Note: Replace <code>&lt;diode-server:port&gt;</code> with your Diode server address and port (default: 8080) Example: <code>grpc://diode.example.com:8080/diode</code></p> </li> <li> <p>Apply Database Migrations <pre><code>cd /opt/netbox/netbox\n./manage.py migrate netbox_diode_plugin\n</code></pre></p> </li> <li> <p>Restart NetBox Services <pre><code>sudo systemctl restart netbox netbox-rq\n</code></pre></p> </li> <li> <p>Generate Diode Client Credentials</p> <p>Note: These credentials will be used by the NetBox Discovery agent to send discovery results to NetBox via Diode.</p> </li> <li> <p>Go to your NetBox instance (https://) <li>In the left-hand pane, navigate to Diode -&gt; Client Credentials</li> <li>Click on + Add a Credential</li> <li>For Client Name, enter any name and click Create</li> <li>IMPORTANT: Copy the Client ID and Client Secret and save them securely</li> <li>Click Return to List</li> <p>You have now created your Diode client credentials. These will be used as environment variables when running the NetBox Discovery agent.</p>"},{"location":"netbox-discovery/getting-started/#run-netbox-discovery-agent","title":"Run NetBox Discovery Agent","text":"<p>Host: These steps should be performed on the host where you want to run the NetBox Discovery agent for network discovery.</p> <p>Note: For the complete installation instructions, please refer to the official NetBox Discovery Agent documentation.</p> <ol> <li> <p>Export Client Credentials <pre><code># Export the client credentials you generated in NetBox\nexport DIODE_CLIENT_ID=\"&lt;your-client-id&gt;\"\nexport DIODE_CLIENT_SECRET=\"&lt;your-client-secret&gt;\"\n</code></pre></p> </li> <li> <p>Create Agent Configuration File    Create an <code>agent.yaml</code> file with the following content:    <pre><code>orb:\n  config_manager:\n    active: local\n  backends:\n    network_discovery:  # Enable network discovery backend\n    common:\n      diode:\n        target: grpc://&lt;diode-server:port&gt;/diode\n        client_id: ${DIODE_CLIENT_ID}\n        client_secret: ${DIODE_CLIENT_SECRET}\n        agent_name: my_agent\n  policies:\n    network_discovery:\n      loopback_policy:\n        config:\n        scope:\n          targets: \n            - 127.0.0.1\n</code></pre></p> <p>Note: Replace <code>&lt;diode-server:port&gt;</code> with your Diode server address and port (default: 8080) Example: <code>grpc://diode.example.com:8080/diode</code></p> </li> <li> <p>Run the Agent</p> </li> </ol> <p>Using host network mode (recommended):    <pre><code>docker run --net=host \\\n  -v $(pwd):/opt/orb/ \\\n  -e DIODE_CLIENT_ID \\\n  -e DIODE_CLIENT_SECRET \\\n  netboxlabs/orb-agent:latest run -c /opt/orb/agent.yaml\n</code></pre></p> <p>Alternative using root user:    <pre><code>docker run -u root \\\n  -v $(pwd):/opt/orb/ \\\n  -e DIODE_CLIENT_ID \\\n  -e DIODE_CLIENT_SECRET \\\n  netboxlabs/orb-agent:latest run -c /opt/orb/agent.yaml\n</code></pre></p> <p>Note: The container needs sufficient permissions to send ICMP and TCP packets. This can be achieved either by: - Setting the network mode to <code>host</code> (recommended) - Running the container as root user</p> <ol> <li>Verify Agent Operation</li> <li>Check the agent logs for successful startup</li> <li>Verify data appears in NetBox</li> </ol>"},{"location":"netbox-discovery/getting-started/#configuration-examples","title":"Configuration Examples","text":""},{"location":"netbox-discovery/getting-started/#basic-network-discovery","title":"Basic Network Discovery","text":"<p>Simple network discovery for IP and device identification:</p> <pre><code>orb:\n  config_manager:\n    active: local\n  backends:\n    network_discovery:\n    common:\n      diode:\n        target: grpc://192.168.31.114:8080/diode\n        client_id: ${DIODE_CLIENT_ID}\n        client_secret: ${DIODE_CLIENT_SECRET}\n        agent_name: agent02\n  policies:\n    network_discovery:\n      policy_1:\n        config:\n          schedule: \"0 */2 * * *\"\n          timeout: 5\n        scope:\n          targets: [192.168.1.1/22, google.com]\n</code></pre>"},{"location":"netbox-discovery/getting-started/#basic-device-discovery","title":"Basic Device Discovery","text":"<p>Simple device discovery for getting started:</p> <pre><code>orb:\n  config_manager: \n    active: local\n  backends:\n    device_discovery:\n    common:\n      diode:\n        target: grpc://192.168.0.100:8080/diode\n        client_id: ${DIODE_CLIENT_ID}\n        client_secret: ${DIODE_CLIENT_SECRET}\n        agent_name: agent01\n  policies:\n    device_discovery:\n      discovery_1:\n        config:\n          schedule: \"* * * * *\"\n          defaults:\n            site: New York NY\n        scope:\n          - driver: ios\n            hostname: 192.168.0.5\n            username: admin\n            password: ${DEVICE_PASSWORD}\n</code></pre>"},{"location":"netbox-discovery/getting-started/#enterprise-multi-site-discovery","title":"Enterprise Multi-Site Discovery","text":"<p>For organizations with multiple locations requiring coordinated discovery:</p> <pre><code>orb:\n  config_manager:\n    active: local\n  backends:\n    network_discovery:\n    common:\n      diode:\n        target: grpc://diode.company.com:8080/diode\n        client_id: ${DIODE_CLIENT_ID}\n        client_secret: ${DIODE_CLIENT_SECRET}\n        agent_name: multi_site_agent\n  policies:\n    network_discovery:\n      headquarters:\n        config:\n          schedule: \"0 */4 * * *\"  # Every 4 hours\n          timeout: 5\n        scope:\n          targets: \n            - \"192.168.0.0/16\"\n            - \"10.0.0.0/8\"\n      remote_offices:\n        config:\n          schedule: \"0 */12 * * *\"  # Every 12 hours\n          timeout: 10\n        scope:\n          targets:\n            - \"172.16.0.0/16\"\n            - \"172.17.0.0/16\"\n</code></pre>"},{"location":"netbox-discovery/getting-started/#troubleshooting","title":"Troubleshooting","text":""},{"location":"netbox-discovery/getting-started/#common-issues","title":"Common Issues","text":"<ol> <li>Connection Issues</li> <li>Verify network connectivity between Diode and NetBox:      <pre><code># From Diode server\ncurl -v https://&lt;netbox-server&gt;\n# From NetBox server\ncurl -v grpc://&lt;diode-server:port&gt;/diode\n</code></pre></li> <li>Check firewall rules:      <pre><code># Check if required ports are open\nnetstat -tulpn | grep -E '8080|443'\n</code></pre></li> <li> <p>Validate URLs and ports in configuration files:</p> <ul> <li>Diode server <code>.env</code></li> <li>NetBox <code>configuration.py</code></li> <li>NetBox Discovery agent <code>agent.yaml</code></li> </ul> </li> <li> <p>Authentication Issues</p> </li> <li>Problem: \"Authentication failed\" or \"Invalid credentials\" errors</li> <li> <p>Solution: Verify client credentials are correct      <pre><code># Verify environment variables\necho $DIODE_CLIENT_ID\necho $DIODE_CLIENT_SECRET\n</code></pre></p> </li> <li> <p>Discovery Issues</p> </li> <li>Problem: No devices being discovered</li> <li> <p>Solution: Check network connectivity and credentials      <pre><code># Test ICMP connectivity\nping &lt;target-device&gt;\n# Test SSH connectivity\nnc -zv &lt;target-device&gt; 22\n</code></pre></p> </li> <li> <p>Docker Issues</p> </li> <li>Check Docker service status:      <pre><code>systemctl status docker\n</code></pre></li> <li> <p>Verify Docker container logs:      <pre><code>docker compose logs\n</code></pre></p> </li> <li> <p>Permission Issues</p> </li> <li>Ensure proper file permissions:      <pre><code>ls -la /opt/diode/\nls -la /opt/netbox/\n</code></pre></li> <li>Check Docker socket permissions:      <pre><code>ls -l /var/run/docker.sock\n</code></pre></li> </ol>"},{"location":"netbox-discovery/getting-started/#enterprise-troubleshooting","title":"Enterprise Troubleshooting","text":""},{"location":"netbox-discovery/getting-started/#multi-agent-deployments","title":"Multi-Agent Deployments","text":"<ul> <li>Problem: Agents overwriting each other's data</li> <li>Solution: Ensure unique agent names and proper site/tenant configuration</li> <li>Best Practice: Use descriptive agent names like <code>datacenter-east-01</code></li> </ul>"},{"location":"netbox-discovery/getting-started/#performance-issues","title":"Performance Issues","text":"<ul> <li>Problem: Discovery taking too long or timing out</li> <li>Solution: Adjust timeout values and schedule frequency   <pre><code>config:\n  timeout: 30  # Increase timeout\n  schedule: \"0 */6 * * *\"  # Reduce frequency\n</code></pre></li> </ul>"},{"location":"netbox-discovery/getting-started/#security-compliance","title":"Security Compliance","text":"<ul> <li>Problem: Credentials stored in plain text</li> <li>Solution: Use environment variables and secure credential management   <pre><code># Use environment variables for sensitive data\nusername: ${DISCOVERY_USERNAME}\npassword: ${DISCOVERY_PASSWORD}\n</code></pre></li> </ul>"},{"location":"netbox-discovery/getting-started/#log-analysis","title":"Log Analysis","text":""},{"location":"netbox-discovery/getting-started/#enable-debug-logging","title":"Enable Debug Logging","text":"<pre><code>docker run --net=host \\\n  -v $(pwd):/opt/orb/ \\\n  -e DIODE_CLIENT_ID \\\n  -e DIODE_CLIENT_SECRET \\\n  -e LOG_LEVEL=DEBUG \\\n  netboxlabs/orb-agent:latest run -c /opt/orb/agent.yaml\n</code></pre>"},{"location":"netbox-discovery/getting-started/#common-log-messages","title":"Common Log Messages","text":"<ul> <li><code>\"Connection established\"</code> - Agent successfully connected to Diode</li> <li><code>\"Discovery completed\"</code> - Discovery cycle finished successfully</li> <li><code>\"Authentication failed\"</code> - Check client credentials</li> <li><code>\"Connection refused\"</code> - Check Diode server availability</li> </ul>"},{"location":"netbox-discovery/getting-started/#enterprise-operations","title":"Enterprise Operations","text":""},{"location":"netbox-discovery/getting-started/#production-deployment-best-practices","title":"Production Deployment Best Practices","text":""},{"location":"netbox-discovery/getting-started/#high-availability-setup","title":"High Availability Setup","text":"<ul> <li>Deploy multiple agents across different hosts</li> <li>Use container orchestration (Kubernetes, Docker Swarm)</li> <li>Implement health checks and automatic restarts</li> </ul>"},{"location":"netbox-discovery/getting-started/#resource-planning","title":"Resource Planning","text":"<ul> <li>CPU: 1-2 cores per agent (depending on discovery scope)</li> <li>Memory: 512MB-1GB per agent</li> <li>Network: Ensure sufficient bandwidth for discovery traffic</li> <li>Storage: 10-50GB for logs and temporary data</li> </ul>"},{"location":"netbox-discovery/getting-started/#monitoring-and-alerting","title":"Monitoring and Alerting","text":"<p>Set up monitoring for: - Agent health and connectivity - Discovery success rates - Diode server performance - NetBox data ingestion rates</p>"},{"location":"netbox-discovery/getting-started/#security-considerations","title":"Security Considerations","text":""},{"location":"netbox-discovery/getting-started/#network-security","title":"Network Security","text":"<ul> <li>Use TLS/SSL for all communications</li> <li>Implement network segmentation</li> <li>Apply least-privilege access principles</li> <li>Regular security audits</li> </ul>"},{"location":"netbox-discovery/getting-started/#credential-management","title":"Credential Management","text":"<ul> <li>Never store credentials in configuration files</li> <li>Use environment variables for sensitive data</li> <li>Rotate credentials regularly</li> <li>Implement proper access controls</li> </ul>"},{"location":"netbox-discovery/getting-started/#getting-help","title":"Getting Help","text":"<p>If you encounter issues:</p> <ol> <li>Search GitHub: Issues</li> <li>Find us in Slack: NetDev Community #netbox</li> <li>Check the logs:</li> <li>NetBox Discovery agent logs: <code>docker logs &lt;container-id&gt;</code></li> <li>Diode server logs: <code>docker compose logs</code></li> <li>NetBox Diode plugin logs: Check NetBox logs and the <code>Ingestion Logs</code> view in the Diode plugin</li> </ol>"},{"location":"netbox-discovery/getting-started/#next-steps","title":"Next Steps","text":""},{"location":"netbox-discovery/getting-started/#for-production-deployment","title":"For Production Deployment","text":"<ol> <li>Review Enterprise Prerequisites - Ensure all requirements are met</li> <li>Plan Your Architecture - Design your deployment strategy</li> <li>Configure Security - Implement enterprise security measures</li> <li>Set Up Monitoring - Implement operational monitoring</li> </ol>"},{"location":"netbox-discovery/getting-started/#support-resources","title":"Support Resources","text":"<ul> <li>Diode Documentation - Advanced Diode configuration</li> <li>GitHub Issues - Report bugs and feature requests</li> <li>Community Support - Connect with the community on Slack</li> </ul> <p>Congratulations! You now have NetBox Discovery running and ingesting network data into NetBox. The system will continue to discover and update your network infrastructure automatically based on your configured schedules. </p>"},{"location":"netbox-enterprise/nbe-azure-group-mapping/","title":"NetBox Enterprise Entra ID Group Mapping","text":"<p>Place the following in configuration overrides python section</p>"},{"location":"netbox-enterprise/nbe-azure-group-mapping/#basic-sso","title":"Basic SSO","text":"<pre><code>REMOTE_AUTH_BACKEND = 'social_core.backends.azuread.AzureADOAuth2'\nSOCIAL_AUTH_AZUREAD_OAUTH2_KEY = '{client provided key}'\nSOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = '{client provided secret}'\n</code></pre>"},{"location":"netbox-enterprise/nbe-azure-group-mapping/#group-mappings","title":"Group Mappings","text":"<pre><code>SOCIAL_AUTH_AZUREAD_OAUTH2_RESOURCE = 'https://graph.microsoft.com/'\nSOCIAL_AUTH_PIPELINE = (\n    'social_core.pipeline.social_auth.social_details',\n    'social_core.pipeline.social_auth.social_uid',\n    'social_core.pipeline.social_auth.social_user',\n    'social_core.pipeline.user.get_username',\n    'social_core.pipeline.social_auth.associate_by_email',\n    'social_core.pipeline.user.create_user',\n    'social_core.pipeline.social_auth.associate_user',\n    'netbox.authentication.user_default_groups_handler',\n    'social_core.pipeline.social_auth.load_extra_data',\n    'social_core.pipeline.user.user_details',\n    'nbc_auth_extensions.azure_authentication.azuread_map_groups',\n)\n\n\n# Define special user types using groups. Exercise great caution when assigning superuser status.\nSOCIAL_AUTH_PIPELINE_CONFIG = {\n    'AZUREAD_USER_FLAGS_BY_GROUP': {\n        \"is_staff\": ['{AZURE_GROUP_ID1}','{AZURE_GROUP_ID2}'],\n        \"is_superuser\": ['{AZURE_GROUP_ID1}','{AZURE_GROUP_ID2}']\n    },\n\n    'AZUREAD_GROUP_MAP': {\n        '{AZURE_GROUP_ID1}': '{NETBOX_GROUP1}',\n        '{AZURE_GROUP_ID2}': '{NETBOX_GROUP2}',\n    }\n\n}\n</code></pre>"},{"location":"netbox-enterprise/nbe-azure-sso/","title":"Microsoft Entra ID Setup (formerly Azure Active Directory)","text":"<p>This guide explains how to configure single sign-on (SSO) support for NetBox Enterprise using Microsoft Entra ID(formerly Azure Active Directory) as an authentication backend.</p>"},{"location":"netbox-enterprise/nbe-azure-sso/#entra-id-configuration","title":"Entra ID Configuration","text":"<ol> <li> <p>Create a test user (optional) Create a new Entra ID user to be used for testing. You can skip this step if you already have a suitable account created.</p> </li> <li> <p>Create an app registration Under the Microsoft Entra ID dashboard, navigate to Add &gt; App registration.</p> <p></p> <p>Enter a name for the registration (e.g. \"NetBox Enterprise\") and ensure that the \"single tenant\" option is selected.</p> <p>Under \"Redirect URI\", select \"Web\" for the platform and enter the path to your NetBox Enterprise installation, ending with /oauth/complete/azuread-oauth2/. </p> <p>Eg. https://{your-domain}.com/oauth/complete/azuread-oauth2/</p> <p></p> <p>Once finished, make note of the application (client) ID; this will be used when configuring NetBox Enterprise instance.</p> <p></p> <p>Multitenant authentication</p> <p>NetBox also supports multitenant authentication via Entra ID, however it requires a different backend and an additional configuration parameter. Please see the <code>python-social-auth</code> documentation for details concerning multitenant authentication.</p> </li> <li> <p>Create a secret</p> <p>When viewing the newly-created app registration, click the \"Add a certificate or secret\" link under \"Client credentials\". Under the \"Client secrets\" tab, click the \"New client secret\" button.</p> <p></p> <p>You can optionally specify a description and select a lifetime for the secret.</p> <p></p> <p>Once finished, make note of the secret value (not the secret ID); this will be used when configuring your NetBox Enterprise instance.</p> <p></p> </li> </ol>"},{"location":"netbox-enterprise/nbe-azure-sso/#netbox-enterprise-configuration","title":"NetBox Enterprise Configuration","text":"<p>After completing the app registration, navigate to the <code>Config tab</code> in the NetBox Enterprise admin console, scroll down to <code>Advanced Settings</code> and tick the <code>Show Advanced Settings</code> check box. </p> <p></p> <p>Then, in the  the <code>NetBox Python Configuration Overrides</code> field paste the following value from the previous steps:</p> <pre><code>REMOTE_AUTH_BACKEND = 'social_core.backends.azuread.AzureADOAuth2' \nSOCIAL_AUTH_AZUREAD_OAUTH2_KEY = 'APPLICATION_ID' \nSOCIAL_AUTH_AZUREAD_OAUTH2_SECRET = 'SECRET_VALUE'\n</code></pre> <p>Once added, scroll down to the bottom of the page and click <code>Save config</code>. Follow the prompt to <code>Go to updated version</code> and click the <code>Deploy</code> button to deploy the updated version of your app with the configuration changes. </p>"},{"location":"netbox-enterprise/nbe-azure-sso/#testing","title":"Testing","text":"<p>Open your NetBox Instance once it is back up in the <code>Ready</code> state. Log out of NetBox instance if already authenticated, and click the \"Log In\" button at top right. You should see the normal login form as well as an option to authenticate using Entra ID. Click that link.</p> <p></p> <p>You should be redirected to Microsoft's authentication portal. Enter the username/email and password of your account to continue. You may also be prompted to grant this application access to your account.</p> <p></p> <p>If successful, you will be redirected back to the NetBox Enterprise UI, and will be logged in as the Entra ID user. You can verify this by navigating to your profile (using the button at top right).</p> <p>This user account has been replicated locally to NetBox Enterprose, and can now be assigned groups and permissions within the NetBox Enterprise admin UI.</p>"},{"location":"netbox-enterprise/nbe-azure-sso/#troubleshooting","title":"Troubleshooting","text":""},{"location":"netbox-enterprise/nbe-azure-sso/#redirect-uri-does-not-match","title":"Redirect URI does not Match","text":"<p>Entra ID requires that the authenticating client request a redirect URI that matches what you've configured for the app in step two. This URI must begin with https:// </p>"},{"location":"netbox-enterprise/nbe-azure-sso/#not-logged-in-after-authenticating","title":"Not Logged in After Authenticating","text":"<p>If you are redirected to the NetBox Enterprise UI after authenticating successfully, but are not logged in, double-check the configured backend and app registration. The instructions in this guide pertain only to the <code>azuread.AzureADOAuth2</code> backend using a single-tenant app registration.</p>"},{"location":"netbox-enterprise/nbe-backups/","title":"NetBox Enterprise Backups","text":"<p>Much like the NetBox software itself, NetBox Enterprise uses 2 main datastores: PostgreSQL, and Redis.</p> <p>PostgreSQL is used for the primary model data in NetBox, including sites, facilities, racks, and so on.</p> <p>Redis is used for internal caching and the task queue.</p> <p>For each type of datastore you can choose to use a built-in deployment, or configure NetBox Enterprise to use an existing external resource already in your environment.</p>"},{"location":"netbox-enterprise/nbe-backups/#external-databases","title":"External Databases","text":"<p>Info</p> <p>If you are providing your own database(s) for use by NetBox Enterprise, it is expected that you have your own processes for high availability, backup, and restore.</p>"},{"location":"netbox-enterprise/nbe-backups/#using-disaster-recovery-for-backups","title":"Using Disaster Recovery for Backups","text":"<p>A disaster recovery backup will preserve the complete state of your NetBox Enterprise install, from allocated volumes to databases to custom configuration.</p> <p>This feature is included in NetBox Enterprise installs, and can be enabled by installing some extra dependencies to your cluster for KOTS installs.</p>"},{"location":"netbox-enterprise/nbe-backups/#backing-up-the-netbox-enterprise-installation","title":"Backing Up the NetBox Enterprise Installation","text":"<ol> <li>Navigate to the backup configuration by clicking the Backup settings link in the Disaster Recovery section of the admin console.    </li> <li>Input your S3 bucket, credentials, endpoint, and region. </li> <li>Click Update storage settings -- it will spend a few moments validating that your settings work. </li> <li>Perform a backup by clicking the Backups tab, and then clicking Start backup. </li> </ol>"},{"location":"netbox-enterprise/nbe-backups/#restoring-the-netbox-enterprise-installation","title":"Restoring the NetBox Enterprise Installation","text":"<ol> <li>Download the latest NetBox Enterprise installer following the same instructions you did for a new install, if you haven't already.</li> <li>Run: <code>./netbox-enterprise restore</code></li> <li>Enter the same S3 credentials you use for backups. </li> <li>Next, it will take a few minutes to bring up the node.    When it's complete, you will be prompted to continue the restore: </li> <li>Enter <code>Y</code> to continue, and the restore will launch the cluster.</li> <li>(Optional) If you plan to have more than one node in the new cluster, you can go to the admin console and configure them when prompted.</li> <li>Enter <code>continue</code> to finish bringing the NetBox Enterprise application up. </li> <li>It will take a few more minutes to finish bringing the application up, and then you will see \"Application restored!\"     NetBox Enterprise and the Admin Console should now be completely restored and available as normal.</li> </ol>"},{"location":"netbox-enterprise/nbe-backups/#manual-backup-and-restore","title":"Manual Backup and Restore","text":"<p>Besides disaster recovery, it is also a good idea to keep backups of your data in case you want to view, partially restore, or move your data to another system.</p> <p>NetBox Enterprise Namespace</p> <p>The default namespace is <code>kotsadm</code>.</p> <p>The instructions below default to <code>kotsadm</code>, but you can change the <code>NETBOX_NAMESPACE</code> variable to match your system.</p>"},{"location":"netbox-enterprise/nbe-backups/#backing-up-your-data","title":"Backing Up Your Data","text":"<p>Backing up NetBox Enterprise's data manually is reasonably simple, and Kubernetes makes it easy to access them from the command-line.</p> <p>Before You Back Up: Accessing Your Cluster</p> <p>Before you can back anything up, you must first make sure you can access the cluster on the command line.</p> <p>See the advanced tools documentation for details on connecting to your NetBox Enterprise cluster.</p>"},{"location":"netbox-enterprise/nbe-backups/#media-scripts-and-reports","title":"Media, Scripts, and Reports","text":"<p>Runtime files are stored in a volume accessible from the NetBox containers. To back them up, you can run this:</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nNETBOX_MAIN_POD=\"$(kubectl get pod \\\n  -o name \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -l 'app.kubernetes.io/component=netbox' \\\n  | head -n 1 \\\n  )\" &amp;&amp; \\\nkubectl exec \"${NETBOX_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -c netbox \\\n  -- /bin/sh -c ' \\\n      cd /opt/netbox/netbox &amp;&amp; \\\n      find media scripts reports static -type f &gt; /tmp/files.txt &amp;&amp; \\\n      tar -czf - \\\n      --owner=0 \\\n      --group=0 \\\n      -T /tmp/files.txt' &gt; netbox-data.tar.gz\n</code></pre>"},{"location":"netbox-enterprise/nbe-backups/#built-in-postgresql","title":"Built-In PostgreSQL","text":"<p>The built-in PostgreSQL is deployed using the CrunchyData Postgres Operator.</p> <p>Since the PostgreSQL CLI tools are already available inside the cluster, all we need to do to dump the database is to call into the correct container and run a <code>pg_dump</code> there.</p> <p>To perform a database dump, run these commands:</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nNETBOX_DATABASE_FILE=\"netbox-enterprise.pgsql\" &amp;&amp; \\\nPOSTGRESQL_MAIN_POD=\"$(kubectl get pod \\\n  -o name \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -l 'postgres-operator.crunchydata.com/role=master' \\\n  | head -n 1 \\\n  )\" &amp;&amp; \\\nEXCLUDE_DATABASES=\"$(kubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -c database \\\n  -- \\\n    psql -t -c \"SELECT CONCAT('--exclude-database=', datname) \\\n      FROM pg_database \\\n      WHERE datname &lt;&gt; ALL ('{netbox,diode,hydra}')\" \\\n)\" &amp;&amp; \\\nkubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -c database \\\n  -- \\\n    pg_dumpall \\\n      --no-role-passwords \\\n      --no-privileges \\\n      --no-owner \\\n      $EXCLUDE_DATABASES \\\n    &gt; \"${NETBOX_DATABASE_FILE}\"\n</code></pre> <p>This will create a <code>netbox-enterprise.pgsql</code> file in your local directory. Save it somewhere safe for future restores.</p> <p>For more details on backing up NetBox databases, see the official NetBox documentation.</p>"},{"location":"netbox-enterprise/nbe-backups/#diode-and-hydra-secrets-netbox-110-and-up","title":"Diode and Hydra Secrets (NetBox 1.10 and Up)","text":"<p>To ensure that Diode OAuth login information is not lost, you will also need to save the Diode and Hydra secrets from the cluster.</p> <p>Run this set of commands:</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\n(\n  kubectl get secrets \\\n    --namespace \"${NETBOX_NAMESPACE}\" \\\n    --no-headers \\\n    --output name \\\n  | grep secret/diode \\\n  | while read -r SECRET; do \\\n    echo \"---\" &amp;&amp; \\\n    kubectl get \\\n      \"${SECRET}\" \\\n      --namespace \"${NETBOX_NAMESPACE}\" \\\n      -o yaml \\\n    | grep -v -E '^  (creationTimestamp|resourceVersion|uid):'; \\\n  done \\\n) &gt; netbox-enterprise-diode-secrets.yaml\n</code></pre> <p>Save it alongside your <code>netbox-enterprise.pgsql</code> for future restores.</p>"},{"location":"netbox-enterprise/nbe-backups/#restoring-your-backups","title":"Restoring Your Backups","text":"<p>Restoring is almost as simple as backing up. You just need to put NetBox Enterprise into restore mode first.</p>"},{"location":"netbox-enterprise/nbe-backups/#enabling-and-disabling-restore-mode","title":"Enabling and Disabling Restore Mode","text":"<ol> <li>Put NetBox Enterprise into \"Restore Mode\" by going to the Config tab and checking the Enable Restore Mode checkbox.    </li> <li>Click the \"Save config\" button at the bottom of the form, and then when the admin console prompts you, click \"go to updated version\". </li> <li>Confirm that the New version available at the top denotes it's a config change, and if so click the \"Deploy\" button.    </li> </ol> <p>This will shut down NetBox but leave the other NetBox Enterprise infrastructure up, so you can safely restore.</p> <p>When you are done restoring your data, just follow the same steps, unchecking Enable Restore Mode and deploying the updated configuration.</p>"},{"location":"netbox-enterprise/nbe-backups/#media-scripts-and-reports_1","title":"Media, Scripts, and Reports","text":"<p>To restore media, scripts, and reports, you just need to unpack them into the correct directory inside a NetBox container.</p> <p>Note</p> <p>The backup instructions above back up all three of the <code>media/</code>, <code>scripts/</code>, and <code>reports/</code> subdirectories in one file.</p> <p>If you are restoring a backup from another NetBox instance, you might need to change the name of the tarball and the path after the <code>-C</code> at the end of this command to unpack your backup into the right location.</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nNETBOX_RESTORE_POD=\"$(kubectl get pod \\\n  -o name \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -l 'app.kubernetes.io/component=restore-mode' \\\n  | head -n 1 \\\n  )\" &amp;&amp; \\\ncat netbox-data.tar.gz | kubectl exec ${NETBOX_RESTORE_POD} \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -i \\\n  -- tar -xvzf - \\\n    --no-same-owner \\\n    --no-same-permission \\\n    -C /opt/netbox/netbox\n</code></pre>"},{"location":"netbox-enterprise/nbe-backups/#diode-and-hydra-secrets-netbox-110-and-up_1","title":"Diode and Hydra Secrets (NetBox 1.10 and Up)","text":"<p>To restore from a secrets yaml file, pass it to <code>kubectl apply</code> like so:</p> <pre><code># add/replace existing diode secrets\nNETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nkubectl apply \\\n  --server-side \\\n  --force-conflicts \\\n  --namespace \"${NETBOX_NAMESPACE}\" \\\n  --filename netbox-enterprise-diode-secrets.yaml\n</code></pre>"},{"location":"netbox-enterprise/nbe-backups/#built-in-postgresql_1","title":"Built-In PostgreSQL","text":"<p>To restore from a dump file, pipe the <code>netbox-enterprise.pgsql</code> created during backup into <code>psql</code> in the PostgreSQL pod:</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nNETBOX_DATABASE_FILE=\"netbox-enterprise.pgsql\" &amp;&amp; \\\nDIODE_DEPLOYMENT_COUNT=\"$(kubectl get deployments -n \"${NETBOX_NAMESPACE}\" -o name | grep -c diode || :)\" &amp;&amp; \\\nHYDRA_DEPLOYMENT_COUNT=\"$(kubectl get deployments -n \"${NETBOX_NAMESPACE}\" -o name | grep -c hydra || :)\" &amp;&amp; \\\nPOSTGRESQL_MAIN_POD=\"$(kubectl get pod \\\n  -o name \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -l 'postgres-operator.crunchydata.com/role=master' \\\n  | head -n 1 \\\n  )\" &amp;&amp; \\\nfor DB in netbox diode hydra; do\n  kubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n    -n \"${NETBOX_NAMESPACE}\" \\\n    -c database \\\n    -- dropdb --if-exists --force \"${DB}\"; \\\ndone &amp;&amp; \\\n( \\\n  if ! grep --quiet -E '^CREATE DATABASE ' \"${NETBOX_DATABASE_FILE}\"; then \\\n    if [ \"${DIODE_DEPLOYMENT_COUNT}\" -gt 0 ]; then \\\n      echo \"CREATE DATABASE diode WITH TEMPLATE = template0 ENCODING = 'UTF8';\"; \\\n    fi &amp;&amp; \\\n    if [ \"${HYDRA_DEPLOYMENT_COUNT}\" -gt 0 ]; then \\\n      echo \"CREATE DATABASE hydra WITH TEMPLATE = template0 ENCODING = 'UTF8';\"; \\\n    fi &amp;&amp; \\\n    echo \"CREATE DATABASE netbox WITH TEMPLATE = template0 ENCODING = 'UTF8';\" &amp;&amp; \\\n    echo \"\" &amp;&amp; \\\n    echo \"\\\\connect netbox\" &amp;&amp; \\\n    echo \"\"\n  fi &amp;&amp; \\\n  cat \"${NETBOX_DATABASE_FILE}\" \\\n) \\\n| kubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -i \\\n  -c database \\\n    -- psql -d template1 -f-\n</code></pre> <p>Following this run the below to ensure all database permissions are correct:</p> <pre><code>NETBOX_NAMESPACE=\"kotsadm\" &amp;&amp; \\\nPOSTGRESQL_MAIN_POD=\"$(kubectl get pod \\\n  -o name \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -l 'postgres-operator.crunchydata.com/role=master' \\\n  | head -n 1 \\\n  )\" &amp;&amp; \\\nfor DB in $(kubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -c database \\\n  -- \\\n    psql -t -c \"SELECT datname FROM pg_database WHERE datname IN ('netbox', 'hydra', 'diode');\"; \\\n); do \\\n  kubectl exec \"${POSTGRESQL_MAIN_POD}\" \\\n  -n \"${NETBOX_NAMESPACE}\" \\\n  -i \\\n  -c database \\\n  -- \\\n    psql --dbname \"${DB}\" -e -c \"\\\n      ALTER DATABASE ${DB} OWNER TO ${DB}; \\\n      GRANT ALL PRIVILEGES ON DATABASE ${DB} TO ${DB}; \\\n      GRANT CREATE ON SCHEMA public TO ${DB}; \\\n      GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO ${DB}; \\\n      GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO ${DB}; \\\n      GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO ${DB}; \\\n    \"; \\\ndone\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-built-in-plugins/","title":"Built-in Plugins in NetBox Enterprise","text":"<p>NetBox Enterprise ships with a curated set of built-in plugins that extend the platform's core capabilities\u2014offering enhanced features without the complexity of manual setup. These plugins are pre-integrated and supported within the platform, ensuring streamlined deployment and reliable performance.</p>"},{"location":"netbox-enterprise/nbe-ec-built-in-plugins/#available-plugins","title":"Available Plugins","text":"<p>Built-in plugins are regularly added to NetBox Enterprise as new releases become available. For the most current list of built-in plugins, refer to the NetBox Enterprise Release Notes.</p>"},{"location":"netbox-enterprise/nbe-ec-built-in-plugins/#plugin-management-and-deployment","title":"Plugin Management and Deployment","text":"<p>The following steps will guide you through installation of built-in plugins:</p> <ol> <li>Navigate to the <code>Config</code> tab in the admin console.</li> <li>Enable <code>Advanced Settings</code> by clicking the 'Show Advanced Settings' checkbox: </li> <li>In the NetBox Python Configuration Overrides field, define your plugin list: <pre><code>PLUGINS = ['netbox_topology_views', 'netbox_bgp']\n</code></pre></li> <li>Additional plugin options can be configured in the override as well. Below is an example for NetBox Topology Views: <pre><code>PLUGINS_CONFIG = {\n    'netbox_topology_views': {\n        'allow_coordinates_saving': True,\n        'always_save_coordinates': True\n    }\n}\n</code></pre> Be sure to consult the plugin\u2019s GitHub repository for specific configuration details. </li> <li>Save the configuration at the bottom of the page. When prompted, click Go to updated version, then select Deploy to apply the configuration changes.</li> </ol> <p>Once your NetBox Enterprise is back in a <code>Ready</code> state, log in to your instance and your plugins will be available. </p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/","title":"Installing Custom NetBox Plugins","text":"<p>While NetBox Enterprise comes with a variety of certified and other community plugins built-in, there are cases where you will want to include additional plugins in your NetBox runtime.</p> <p>To do so, you will need to create a tarball containing the plugins you wish to install, known as a wheelhouse archive.</p> <p>Note</p> <p>On each startup, the wheelhouse's contents will be re-applied to a fresh NetBox Python environment.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#create-a-working-directory","title":"Create a working directory","text":"<p>First, create a temporary directory for your plugin downloads to go:</p> <pre><code>mkdir /tmp/wheelhouse\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#dowload-the-constraintstxt-file-for-your-release","title":"Dowload the <code>constraints.txt</code> file for your release","text":"<p>You can use <code>kubectl cp</code> to download a constraints file that contains a complete list of the pre-installed Python modules in your NetBox Enterprise version.</p> <p>To do so, download it with this command:</p> <pre><code>sudo ./netbox-enterprise shell\n\nNBE_SOURCE_POD=\"$( \\\n  kubectl get pods -A \\\n  -o go-template='{{ range .items }}{{ .metadata.name }}{{ \"\\n\" }}{{ end }}' \\\n  -l com.netboxlabs.netbox-enterprise/custom-plugins-upload=true \\\n  --field-selector status.phase=Running \\\n  | head -n 1 \\\n)\"\n\nkubectl cp -n kotsadm \\\n  \"${NBE_SOURCE_POD}:/opt/netbox/constraints.txt\" \\\n  /tmp/wheelhouse/constraints.txt\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#create-wheels-from-your-custom-modules","title":"Create Wheels From Your Custom Modules","text":"<p>If you are including any custom Python modules that aren't in PyPy, you will need to create wheel archives from them. You can generate them with <code>pip wheel</code>, passing one or more paths or archives, like so:</p> <pre><code>pip wheel \\\n  --prefer-binary \\\n  --wheel-dir \"/tmp/wheelhouse\" \\\n  --constraint /tmp/wheelhouse/constraints.txt \\\n  &lt;/path/to/your/python-module-dir|/path/to/your/python-module.tar.gz&gt;\n</code></pre> <p>Note</p> <p>If your custom modules require compilation, you should build them on an <code>x86_64</code> platform running Ubuntu 24 LTS and Python 3.12 so they match NetBox Enterprise's containers.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#create-a-requirementstxt","title":"Create a <code>requirements.txt</code>","text":"<p>Create a file called <code>requirements.txt</code> in your <code>/tmp/wheelhouse</code> directory, listing each of the plugins you'd like to include.</p> <p>If you created custom wheels, make sure you add them to <code>requirements.txt</code> like any other dependency.</p> <p>For details on the format of requirements files, please see the pip documentation. However, it is strongly recommended that you use <code>==</code> to include a specific known and tested version in your requirements file.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#use-pip-to-download-the-plugins-and-their-dependencies","title":"Use <code>pip</code> to download the plugins and their dependencies","text":"<p>Next, use <code>pip</code> to populate the wheelhouse folder with any other dependencies, by running it with the <code>download</code> command, and the arguments necessary to pull the correct architecture and version to run inside the NetBox Enterprise container:</p> <pre><code>pip download \\\n  --platform=\"manylinux_2_17_x86_64\" \\\n  --only-binary=\":all:\" \\\n  --python-version=\"3.12\" \\\n  --dest \"/tmp/wheelhouse\" \\\n  --find-links \"/tmp/wheelhouse\" \\\n  -c /tmp/wheelhouse/constraints.txt \\\n  -r /tmp/wheelhouse/requirements.txt\n</code></pre> <p>If all went well, you should see <code>*.whl</code> files in the <code>/tmp/wheelhouse/</code> folder for each of the packages you specified, as well as their dependencies.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#create-the-archive","title":"Create the archive","text":"<p>Finally, create the archive:</p> <pre><code>tar -C /tmp \\\n    -czf /tmp/wheelhouse.tar.gz \\\n    wheelhouse\n</code></pre> <p>This should create a tarball that contains the <code>wheelhouse/</code> directory and everything inside of it.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#add-your-plugins-to-netbox-enterprise","title":"Add your plugins to NetBox Enterprise","text":"<p>On your NetBox Enterprise node, you can now upload the wheelhouse to a media directory. Note that this should work whether or not you are in restore mode. Both are configured to be able to accept wheelhouse uploads.</p> <p>To do so, run this:</p> <pre><code>sudo ./netbox-enterprise shell\n\nNBE_SOURCE_POD=\"$( \\\n  kubectl get pods -A \\\n  -o go-template='{{ range .items }}{{ .metadata.name }}{{ \"\\n\" }}{{ end }}' \\\n  -l com.netboxlabs.netbox-enterprise/custom-plugins-upload=true \\\n  --field-selector status.phase=Running \\\n  | head -n 1 \\\n)\"\n\nkubectl cp -n kotsadm \\\n  /tmp/wheelhouse.tar.gz \\\n  \"${NBE_SOURCE_POD}:/opt/netbox/netbox/media/wheelhouse.tar.gz\"\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#enable-and-configure-your-plugins","title":"Enable and Configure Your Plugins","text":"<p>In the Admin Console configuration, make sure Show Advanced Settings is checked. In the Python configuration overrides box, you can enter <code>PLUGINS = [...]</code> and <code>PLUGINS_CONFIG = {}</code> just as you would for any NetBox install. For details, see the NetBox plugin documentation.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#restart-the-netbox-containers","title":"Restart the NetBox containers","text":"<p>The next time the NetBox pods restart, your changes should be automatically applied.</p> <p>If you are in restore mode, switching out of restore mode will enable installation of your plugins. If you are not, a \"redeploy\" in the admin console will trigger the same.</p>"},{"location":"netbox-enterprise/nbe-ec-custom-plugins/#migrations-and-upgrades","title":"Migrations and Upgrades","text":"<p>When upgrading to a new NetBox Enterprise version which includes a different version of the included NetBox, you will likely need to generate a new wheelhouse file that matches its changed dependencies.</p> <p>To do so, you should perform the following steps:</p> <ol> <li>Put NetBox Enterprise into \"restore mode\" in the Admin Console configuration, and deploy the config change.</li> <li>Deploy the new NetBox Enterprise version.</li> <li>Redo the instructions above to download the new <code>constraints.txt</code> file, create, and then upload a new wheelhouse tarball.</li> <li>Uncheck \"restore mode\" and deploy.</li> </ol>"},{"location":"netbox-enterprise/nbe-ec-installation/","title":"NetBox Enterprise Installation","text":"<p>You should be able to follow these instructions for installing NetBox Enterprise in most environments.</p> <p>Note</p> <p>The hostname and IP address of the host cannot be changed after installation, and must be finalized before proceeding.</p>"},{"location":"netbox-enterprise/nbe-ec-installation/#deploying-the-cluster","title":"Deploying the cluster","text":"<p>The following steps are required for a NetBox Enterprise installation.</p> <ol> <li> <p>Download the installer and license file to your host (the <code>Authorization</code> token should be provided by NetBox Labs):</p> <p><pre><code> curl -f \"https://app.enterprise.netboxlabs.com/embedded/netbox-enterprise/stable\" -H \"Authorization: &lt;provided by NetBox Labs&gt;\" -o netbox-enterprise-stable.tgz\n</code></pre>    Confirm the file size is ~300MB</p> </li> <li> <p>Uncompress the package and launch the installation:</p> <pre><code>tar -xvzf netbox-enterprise-stable.tgz\nsudo ./netbox-enterprise install --license license.yaml\n</code></pre> <p>You\u2019ll be requested to create a password for the NetBox Enterprise admin console. A Kubernetes cluster will then be deployed, ready to host all the NetBox application components. The deployment of the cluster is complete with this message:</p> <pre><code>Visit the Admin Console to configure and install netbox-enterprise: http://my.netbox-enterprise.host:30000\n</code></pre> </li> </ol>"},{"location":"netbox-enterprise/nbe-ec-installation/#deploying-netbox","title":"Deploying NetBox","text":"<p>Access the NetBox Enterprise admin console and configure NetBox.</p> <p>Open the provided URL in a browser. A prompt will require the password created in Step 2:</p> <p></p> <p>Click <code>Start</code> and you will be greeted by a warning about self-signed certificates:</p> <p></p> <p>Click <code>Continue</code> and accept the self-signed TLS certificate according to the instructions for your browser.</p> <p>You will then be prompted to optionally set a hostname and upload a self-signed certificate. It is recommended that you set the hostname now, but if you do not upload a TLS certificate you can do it later. Instructions for TLS configuration are available in the TLS and Ingress documentation</p> <p></p> <p>Log In to the Admin Console</p> <p>Once TLS is configured, you will be prompted to log in to the NetBox Enterprise Admin Console. Enter the password you created in the installer CLI.</p> <p></p> <p>Once logged in, you'll be presented with the option to add additional nodes to the cluster. </p> <p>Do not configure additional nodes, it is currently not supported.</p> <p>Multi-Node Clusters</p> <p>Adding nodes to the cluster is currently not supported.</p> <p></p> <p>Click <code>Continue</code> to move on to the NetBox Enterprise configuration wizard.</p>"},{"location":"netbox-enterprise/nbe-ec-installation/#configure-netbox-enterprise","title":"Configure\u00a0NetBox Enterprise","text":"<p>A wizard will guide the configuration of NetBox for the environment:</p> <p>Provisions a Superuser and password: </p> <p>Set the number of replicas and choose a preset for the resources allocated to NetBox.</p> <p>It is recommended that you set the number of replicas to <code>1</code> until initial installation has completed, and then update it to a higher value.</p> <p></p> <p>Be Advised</p> <p>Do not enable Restore Mode when initially setting up NetBox or the installation will fail.</p> <p>Configure your PostgreSQL database and Redis cache:</p> <p>Choose the built-in or external PostgreSQL:   </p> <p>Choose the built-in or external Redis object store:   </p> <p>Finally, accept the terms of service by writing \"ACCEPT\" (case-insensitive) and you can proceed to the deployment.</p> <p></p>"},{"location":"netbox-enterprise/nbe-ec-installation/#finish-the-deployment","title":"Finish the Deployment","text":"<p>Once you have accepted the terms of service, the installer will run some additional checks to make sure your host can run NetBox Enterprise.</p> <p></p> <p>Click <code>Deploy</code> to launch the first deployment.</p> <p>You will then be redirected to the admin console Dashboard. The initial deployment will take longer than subsequent ones, as it brings up all subsystems for the first time and runs migrations to initialize the database.</p> <p></p> <p>The <code>Unavailable</code> status will change to <code>Ready</code> once the deployment is complete and NetBox has fully initialized:</p> <p></p>"},{"location":"netbox-enterprise/nbe-ec-installation/#verify-the-deployment","title":"Verify the Deployment","text":"<p>Once you see <code>Ready</code>, NetBox Enterprise is fully deployed, and available on ports <code>80</code> and <code>443</code>.</p>"},{"location":"netbox-enterprise/nbe-ec-linux-changes/","title":"Linux Root-Level Changes","text":"<p>This document summarizes the system-level changes made to a Linux host when installing a NetBox Enterprise Embedded Cluster, particularly in relation to directories, files, and runtime configurations affected under <code>/</code>.</p>"},{"location":"netbox-enterprise/nbe-ec-linux-changes/#key-directories-created","title":"Key Directories Created","text":"<p>During installation, the Embedded Cluster creates several directories for container runtimes, network configuration, logging, and Kubernetes internals. These directories may be used for binary placement, socket communication, runtime data, or logging.</p> Path Description <code>/etc/cni</code> CNI (Container Network Interface) configuration <code>/etc/k0s</code> Configuration for the k0s Kubernetes distribution <code>/opt/cni</code> Optional location for CNI plugin binaries <code>/opt/containerd</code> Data and binaries for containerd runtime <code>/run/calico</code> Calico's runtime data and state <code>/run/containerd</code> Runtime socket and process management for containerd <code>/run/k0s</code> Runtime files and PID info for k0s <code>/sys/fs/cgroup/kubepods</code> cgroup hierarchy for Kubernetes pods <code>/sys/fs/cgroup/system.slice/containerd.service</code> cgroup slice for the containerd system service <code>/sys/fs/cgroup/system.slice/k0scontroller.service</code> cgroup slice for the k0scontroller service <code>/usr/libexec/k0s</code> Executables used by k0s, potentially for internal service components <code>/usr/local/bin/k0s</code> The k0s binary, typically symlinked or copied here <code>/var/lib/calico</code> Persistent data for the Calico network plugin <code>/var/lib/cni</code> CNI state and cache <code>/var/lib/containers</code> OCI container storage (may contain container images and layers) <code>/var/lib/kubelet</code> State for the kubelet, pod manifests, volumes, etc. <code>/var/log/calico</code> Logs generated by Calico agents <code>/var/log/containers</code> Logs for individual containers, typically symlinked from journald <code>/var/log/embedded-cluster</code> Logs specific to Embedded Cluster installation and runtime <code>/var/log/pods</code> Logs organized by pod name/namespace"},{"location":"netbox-enterprise/nbe-ec-linux-changes/#runtime-kernel-modifications","title":"Runtime &amp; Kernel Modifications","text":"<p>cgroups are used extensively to isolate resources:</p> <ul> <li><code>kubepods</code> cgroup under <code>/sys/fs/cgroup</code></li> <li>Systemd slices for services like <code>containerd</code> and <code>k0scontroller</code></li> <li>These modifications may impact systems with strict lockdowns or non-standard cgroup hierarchies.</li> </ul>"},{"location":"netbox-enterprise/nbe-ec-linux-changes/#binaries-and-services","title":"Binaries and Services","text":"<ul> <li>The <code>k0s</code> binary is located at <code>/usr/local/bin/k0s</code>.</li> <li>Services for <code>k0scontroller</code>, <code>containerd</code>, and possibly <code>calico</code> will be active post-install.</li> <li>Services will install unit files in <code>/etc/systemd/system/</code>.</li> </ul>"},{"location":"netbox-enterprise/nbe-ec-linux-changes/#firewall-requirements","title":"Firewall Requirements","text":"<p>To allow proper operation of the Embedded Cluster, the following network ports must be open:</p> Port Protocol Purpose 6443 TCP Kubernetes API server (used by kubelets, kubectl, etc.) 2379-2380 TCP etcd (Kubernetes backing store \u2013 internal traffic) 10250 TCP Kubelet API for health checks and logs 4789 UDP VXLAN overlay (used by Calico) 8472 UDP VXLAN (alternative port for Calico) 51820 UDP WireGuard (if enabled for Calico networking) 179 TCP BGP (used if Calico is in BGP mode) 443 TCP NetBox Enterprise UI and API access 8800 TCP Admin Console (legacy or diagnostic use) <p>Note: Ingress/egress rules must permit internal pod-to-pod communication. For systems in restricted environments, please refer to the Special Cases for Restricted Environments section in the requirements documentation. This provides detailed guidance on configuring firewalls and network policies to ensure proper operation of the Embedded Cluster.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/","title":"NetBox Enterprise Requirements for Red Hat Enterprise Linux (RHEL)","text":""},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#tested-versions","title":"Tested Versions","text":"<p>This guide was used on fresh installs of the following versions of RHEL:</p> <ul> <li>RHEL 9</li> <li>RHEL 9.5</li> </ul>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#steps-to-prepare-rhel","title":"Steps to prepare RHEL","text":""},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#disable-swap","title":"Disable Swap","text":"<p>Swap can lead to unpredictable memory behavior in Kubernetes.</p> <pre><code>sudo swapoff -a\nsudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#set-selinux-to-permissibe-mode-can-be-enforced-later","title":"Set SELinux to Permissibe mode (can be enforced later)","text":"<pre><code>sudo setenforce Permissive\nsudo sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#configure-firewall","title":"Configure Firewall","text":"<p>If firewalld isn't installed</p> <pre><code>sudo dnf -y install dnf-plugins-core\nsudo dnf -y install firewalld\nsudo systemctl enable --now firewalld\n</code></pre> <p>Open required ports for the internal kubernetes platform.</p> <pre><code># Kubernetes API, etcd, and control plane components\nsudo firewall-cmd --permanent --add-port={6443,2379,2380,10250,10251,10252,10255,5473,10257,10259}/tcp\n\n# NodePort range\nsudo firewall-cmd --permanent --add-port=30000-32767/tcp\n\n# BGP and VXLAN (optional, for Calico)\nsudo firewall-cmd --permanent --add-port=4789/udp\nsudo firewall-cmd --permanent --add-port=179/tcp\n\n# Reload firewall\nsudo firewall-cmd --reload\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#configure-kernel-modules-and-parameters","title":"Configure Kernel Modules and Parameters","text":"<p>Install kernel headers:</p> <pre><code>sudo dnf -y install kernel-devel-$(uname -r)\n</code></pre> <p>Load and persist modules:</p> <pre><code>sudo modprobe br_netfilter ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh overlay\n\ncat &lt;&lt;EOF | sudo tee /etc/modules-load.d/kubernetes.conf\nbr_netfilter\nip_vs\nip_vs_rr\nip_vs_wrr\nip_vs_sh\noverlay\nEOF\n\nsudo sysctl --system\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#install-containerd-optional-runtime","title":"Install containerd (optional runtime)","text":"<pre><code>sudo dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo\nsudo dnf makecache\nsudo dnf install containerd.io -y\n\nsudo mkdir -p /etc/containerd\ncontainerd config default | sudo tee /etc/containerd/config.toml\n\nsudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml\n\nsudo systemctl enable --now containerd\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#reboot","title":"Reboot","text":"<p>Reboot to apply changes</p> <pre><code>sudo reboot now\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#install-netbox-enterprise","title":"Install NetBox Enterprise","text":"<p>Run through the regular installation here.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#optional-enable-selinux-enforcing","title":"Optional - Enable SELinux Enforcing","text":""},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#install-selinux-tools","title":"Install SELinux Tools","text":"<pre><code>sudo dnf -y inst\nall setroubleshoot-server setools mcstrans\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#run-the-suggestions-from-the-enterprise-install-for-selinux","title":"Run the suggestions from the enterprise install for SELinux","text":"<pre><code>export EC_DIR=\"/var/lib/embedded-cluster\"\nexport KUBE_DIR=\"${EC_DIR}/k0s\"\n\n# tell SELinux the Cluster directory is owned by Containerd\nsudo semanage fcontext -a -t container_var_lib_t \"${EC_DIR}\"\nsudo restorecon -R -v \"${EC_DIR}\"\n\n# additionally, binaries should be allowed to execute\nsudo semanage fcontext -a -t container_runtime_exec_t \"${KUBE_DIR}/bin/containerd.*\"\nsudo semanage fcontext -a -t container_runtime_exec_t \"${KUBE_DIR}/bin/runc\"\nsudo restorecon -R -v \"${KUBE_DIR}/bin\"\n\n# fix permissions for containerd and restrict some folders to read-only\nsudo semanage fcontext -a -t container_var_lib_t \"${KUBE_DIR}/containerd(/.*)?\"\nsudo semanage fcontext -a -t container_ro_file_t \"${KUBE_DIR}/containerd/io.containerd.snapshotter.*/snapshots(/.*)?\"\nsudo restorecon -R -v ${KUBE_DIR}/containerd\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#check-for-errors","title":"Check for errors","text":"<p>Run sealert to look for issues</p> <pre><code>sealert -a /var/log/audit/audit.log\n</code></pre> <p>Look for messages like this and run the command suggested based on confidence</p> <p>Note</p> <p>It is important you understand these before enabling and that you can possible be creating security risks if you do not understand what you're enabling.</p> <pre><code>SELinux is preventing /usr/sbin/setfiles from 'read, append' accesses on the file /var/lib/embedded-cluster/tmp/tmph3gb9qv1.\n*****  Plugin leaks (86.2 confidence) suggests   *****************************\nIf you want to ignore setfiles trying to read append access the tmph3gb9qv1 file, because you believe it should not need this access.\nThen you should report this as a bug.  \nYou can generate a local policy module to dontaudit this access.\nDo\n# ausearch -x /usr/sbin/setfiles --raw | audit2allow -D -M my-setfiles\n# semodule -X 300 -i my-setfiles.pp\n*****  Plugin catchall (14.7 confidence) suggests   **************************\nIf you believe that setfiles should be allowed read append access on the tmph3gb9qv1 file by default.\nThen you should report this as a bug.\nYou can generate a local policy module to allow this access.\nDo\nallow this access for now by executing:\n# ausearch -c 'setfiles' --raw | audit2allow -M my-setfiles\n# semodule -X 300 -i my-setfiles.pp\nAdditional Information:\nSource Context                unconfined_u:unconfined_r:setfiles_t:s0-s0:c0.c102\n                              3\nTarget Context                unconfined_u:object_r:var_lib_t:s0\nTarget Objects                /var/lib/embedded-cluster/tmp/tmph3gb9qv1 [ file ]\nSource                        setfiles\nSource Path                   /usr/sbin/setfiles\nPort                          &lt;Unknown&gt;\nHost                          &lt;Unknown&gt;\nSource RPM Packages           policycoreutils-3.6-2.1.el9.x86_64\nTarget RPM Packages           \nSELinux Policy RPM            selinux-policy-targeted-38.1.45-3.el9_5.noarch\nLocal Policy RPM              selinux-policy-targeted-38.1.45-3.el9_5.noarch\nSelinux Enabled               True\nPolicy Type                   targeted\nEnforcing Mode                Permissive\nHost Name                     tom-testing-rhel\nPlatform                      Linux tom-testing-rhel\n                              5.14.0-503.38.1.el9_5.x86_64 #1 SMP\n                              PREEMPT_DYNAMIC Sun Apr 13 22:01:49 EDT 2025\n                              x86_64 x86_64\nAlert Count                   1\nFirst Seen                    2025-04-24 12:39:11 EDT\nLast Seen                     2025-04-24 12:39:11 EDT\nLocal ID                      fb07cf19-dcea-4b68-8990-59a7a5ba57e8\nRaw Audit Messages\ntype=AVC msg=audit(1745512751.796:1240): avc:  denied  { read append } for  pid=62558 comm=\"setfiles\" path=\"/var/lib/embedded-cluster/tmp/tmph3gb9qv1\" dev=\"vda4\" ino=209964330 scontext=unconfined_u:unconfined_r:setfiles_t:s0-s0:c0.c1023 tcontext=unconfined_u:object_r:var_lib_t:s0 tclass=file permissive=1\ntype=SYSCALL msg=audit(1745512751.796:1240): arch=x86_64 syscall=execve success=yes exit=0 a0=5609fe032210 a1=560a0902dfa0 a2=0 a3=19dd30 items=0 ppid=62146 pid=62558 auid=0 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=pts1 ses=1 comm=setfiles exe=/usr/sbin/setfiles subj=unconfined_u:unconfined_r:setfiles_t:s0-s0:c0.c1023 key=(null)ARCH=x86_64 SYSCALL=execve AUID=root UID=root GID=root EUID=root SUID=root FSUID=root EGID=root SGID=root FSGID=root\nHash: setfiles,setfiles_t,var_lib_t,file,read,append\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#run-suggested-commands","title":"Run suggested commands","text":"<p>An example from the above log message would be:</p> <pre><code>ausearch -x /usr/sbin/groupadd --raw | audit2allow -D -M my-groupadd\nsemodule -X 300 -i my-groupadd.pp\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#ensure-no-errors-remain","title":"Ensure no errors remain","text":"<p>Repeat the above two seteps until the following command returns nothing.</p> <pre><code>sealert -a /var/log/audit/audit.log\n</code></pre>"},{"location":"netbox-enterprise/nbe-ec-requirements-rhel/#set-enforcing","title":"Set Enforcing","text":"<pre><code>sudo setenforce Enforcing\nsudo sed -i --follow-symlinks 's/SELINUX=permissive/SELINUX=enforcing/g' /etc/sysconfig/selinux\n</code></pre> <p>Note</p> <p>Enable Permissive again for any upgrades, plug-ins and changes and run through the sealert and suggestions until no errors remain before re-enabling selinux.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/","title":"NetBox Enterprise Requirements","text":""},{"location":"netbox-enterprise/nbe-ec-requirements/#host-system-requirements","title":"Host system requirements","text":""},{"location":"netbox-enterprise/nbe-ec-requirements/#recommended","title":"Recommended","text":"<p>The following are the recommended system requirements for a production deployment of NetBox Enterprise running two replicas. For larger environments with more replicas, additional resources should be allocated.</p> <ul> <li>8 Virtual CPU (vCPU)</li> <li>24 GB Memory (RAM)</li> <li>100 GB SSD free disk space in <code>/var/lib</code></li> <li>disable swap if enabled</li> </ul> <p>Note</p> <p>For non-production deployments of NetBox Enterprise, the minimum system requirements can be reduced to 4 Virtual CPU (vCPU) and 16 GB Memory (RAM). All other requirements remain the same.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#host-operating-system","title":"Host operating system","text":"<ul> <li>Linux (Kernel versions 4.3 and above)</li> </ul> <p>Note</p> <p>For Red Hat Enterprise Linux (RHEL) deployments please see additional requirements here.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#architecture","title":"Architecture","text":"<ul> <li>x86-64</li> </ul>"},{"location":"netbox-enterprise/nbe-ec-requirements/#special-cases-for-restricted-environments","title":"Special Cases for Restricted Environments","text":"<p>In some restricted environments, you will need to take additional steps alongside the basic installation instructions.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#traditional-proxies","title":"Traditional Proxies","text":"<p>As of version 1.6.0, NetBox Enterprise supports installing through proxies using the following configuration.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#proxy-configuration","title":"Proxy Configuration","text":"<p>Before you can install, you must configure your proxy to allow the following hostnames:</p> <ul> <li>app.enterprise.netboxlabs.com</li> <li>get.enterprise.netboxlabs.com</li> <li>proxy.enterprise.netboxlabs.com</li> <li>registry.enterprise.netboxlabs.com</li> <li>replicated.app</li> <li>proxy.replicated.com</li> <li>*.enterprise.netboxlabs.com</li> </ul> <p>They are required to access various resources used in the NetBox Enterprise installation.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#installation","title":"Installation","text":"<p>Once you have configured your proxy to allow access to the NetBox Enterprise hosts, you will need to pass some additional arguments to the NetBox Enterprise installer when following the basic installation instructions.</p> <p>Note</p> <p>NetBox Enterprise will not inherit proxy settings from the shell environment, they must be explicitly provided on the installation command-line.</p> <ul> <li> <p><code>--http-proxy &lt;proxy-url&gt;</code> and <code>--https-proxy &lt;proxy-url&gt;</code></p> <p>The proxy url should be a complete URL to reach the proxy. (eg, <code>http://myhost:8888</code>)</p> </li> <li> <p><code>--no-proxy</code></p> <p>By default, the installer will automatically disable proxying on the internal cluster addresses, as well as the default network interface on your host.</p> <p>In some cases, if the installer can't autodetect an interface or if you have a more complicated network, you may need to specify this manually. It should be in the form of a comma-separated list of addresses with CIDR netmasks (<code>1.2.3.4/32</code>), or domains (<code>foo.com</code>, <code>*.bar.com</code>).</p> </li> </ul>"},{"location":"netbox-enterprise/nbe-ec-requirements/#man-in-the-middle-mitm-proxies","title":"Man-In-The-Middle (MITM) Proxies","text":"<p>If you are using a MITM proxy (ie, one which uses an internal TLS certificate authority for communication with the proxy, rather than directly passing encrypted traffic), you will need an additional option:</p> <ul> <li><code>--private-ca &lt;/path/to/private-ca-bundle&gt;</code></li> </ul> <p>This will allow the cluster to accept traffic that has been encrypted using your internal CA.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#firewalld","title":"Firewalld","text":"<p>If you are using Firewalld (commonly found on RHEL installations), you will need to create a zone for the cluster before installing.</p> <ol> <li>Determine any host IP addresses or networks (external or otherwise) that might need access to the cluster.</li> <li> <p>Create a file called <code>/etc/firewalld/zones/netbox-enterprise.xml</code> with the following contents:</p> </li> <li> <p>```xml    </p> </li> </ol> <p> netbox-enterprise Zone for NetBox Enterprise communication     ```</p> <ol> <li>In the spot where it says <code>&lt;!-- HOST IP ADDRESSES GO HERE --&gt;</code>, add a <code>&lt;source /&gt;</code> tag for each host or network you want to allow.    For example, if your external IP is <code>1.2.3.4</code>, and you also have a private class C network <code>192.168.123.0</code>, you would add two lines:</li> </ol> <pre><code>&lt;source address=\"1.2.3.4/32\" /&gt;\n&lt;source address=\"192.168.123.0/24\" /&gt;\n</code></pre> <ol> <li>Run <code>sudo firewall-cmd --reload</code> to load the zone configuration.</li> </ol> <p>Then you can follow the basic installation instructions as normal.</p>"},{"location":"netbox-enterprise/nbe-ec-requirements/#selinux","title":"SELinux","text":"<p>There are two steps to installing with SELinux enabled with enforcement turned on.</p> <p>First, before you install NetBox Enterprise, run:</p> <pre><code>sudo setenforce 0\n</code></pre> <p>This will temporarily disable SELinux enforcement until you explicitly reenable it or reboot.</p> <p>Next, follow the basic installation instructions.</p> <p>Finally, run the following commands to make sure your NetBox Enterprise installation is accessible with enforcement enabled:</p> <pre><code>export EC_DIR=\"/var/lib/embedded-cluster\"\nexport KUBE_DIR=\"${EC_DIR}/k0s\"\n\n# tell SELinux the Cluster directory is owned by Containerd\nsudo semanage fcontext -a -t container_var_lib_t \"${EC_DIR}\"\nsudo restorecon -R -v \"${EC_DIR}\"\n\n# additionally, binaries should be allowed to execute\nsudo semanage fcontext -a -t container_runtime_exec_t \"${KUBE_DIR}/bin/containerd.*\"\nsudo semanage fcontext -a -t container_runtime_exec_t \"${KUBE_DIR}/bin/runc\"\nsudo restorecon -R -v \"${KUBE_DIR}/bin\"\n\n# fix permissions for containerd and restrict some folders to read-only\nsudo semanage fcontext -a -t container_var_lib_t \"${KUBE_DIR}/containerd(/.*)?\"\nsudo semanage fcontext -a -t container_ro_file_t \"${KUBE_DIR}/containerd/io.containerd.snapshotter.*/snapshots(/.*)?\"\nsudo restorecon -R -v ${KUBE_DIR}/containerd\n</code></pre> <p>You can then reboot, or run <code>sudo setenforce 1</code> to put your system back into a normal state.</p>"},{"location":"netbox-enterprise/nbe-kots-installation/","title":"NetBox Enterprise KOTS Installation","text":""},{"location":"netbox-enterprise/nbe-kots-installation/#kubernetes-dependencies","title":"Kubernetes dependencies","text":"<p>Ensure you have the following Kubernetes dependencies installed. Please refer to the instructions for your operating system to install them.</p> <ul> <li>kubectl: general tool for interacting with Kubernetes clusters</li> <li>helm: a \"package manager\" for Kubernetes</li> </ul>"},{"location":"netbox-enterprise/nbe-kots-installation/#install-kots","title":"Install KOTS","text":"<p>KOTS is a kubectl plugin and admin console to help manage Kubernetes Off-The-Shelf software from one or more Helm charts. To install, run the following command:</p> <pre><code>curl https://kots.io/install | bash\n</code></pre>"},{"location":"netbox-enterprise/nbe-kots-installation/#install-the-netbox-enterprise-helm-chart","title":"Install the NetBox Enterprise Helm chart","text":"<p>Install the chart into the cluster: <pre><code>kubectl kots install netbox-enterprise\n</code></pre></p> <p>You will be prompted to create a namespace to deploy to: <pre><code>Enter the namespace to deploy to:\n</code></pre></p> <p>You will also be prompted to create a password for the Admin Console: <pre><code>Enter a new password for the admin console (6+ characters):\n</code></pre></p> <p>The helm chart was successfully installed when you see this: <pre><code>  \u2022 Deploying Admin Console\n    \u2022 Creating namespace \u2713\n    \u2022 Waiting for datastore to be ready \u2713\n  \u2022 Waiting for Admin Console to be ready \u2713\n\n  \u2022 Press Ctrl+C to exit\n  \u2022 Go to http://localhost:8800 to access the Admin Console\n</code></pre></p>"},{"location":"netbox-enterprise/nbe-kots-installation/#install-netbox","title":"Install NetBox","text":""},{"location":"netbox-enterprise/nbe-kots-installation/#connect-to-the-admin-console","title":"Connect to the Admin Console","text":"<p>Access the NetBox Enterprise Admin Console by opening the provided URL in a browser.</p> <p>Tip</p> <p>If you are connecting to the cluster over the network, you might need to configure port forwarding to connect to the Admin Console: <code>kubectl port-forward -n &lt;namespace&gt; svc/kotsadm --address 0.0.0.0  3000:3000</code></p> <p>Once connected, you will be prompted for the password you created earlier:</p> <p></p> <p>You will then be prompted to provide your license file. Your license file should have been provided to you by NetBox Labs.</p> <p></p>"},{"location":"netbox-enterprise/nbe-kots-installation/#configure-netbox","title":"Configure NetBox","text":"<p>You will now be presented with a form to configure NetBox for your environment:</p> <p></p> <p>You can configure the following NetBox configuration parameters:</p> <ul> <li>Version of NetBox to deploy</li> <li>NetBox superuser name and password</li> <li>Number of NetBox replicas to run</li> <li>(Optional) External PostgreSQL</li> <li>(Optional) External S3-compatible storage</li> <li>(Optional) External Redis cache</li> <li>Advanced settings: plugins, remote authentication (SSO) and user group sync</li> </ul> <p>You'll also need to accept the NetBox Labs Terms of Service by entering <code>ACCEPT</code> before proceeding:</p> <p></p>"},{"location":"netbox-enterprise/nbe-kots-installation/#deploy-netbox","title":"Deploy NetBox","text":"<p>The deployment of NetBox Enterprise will then proceed:</p> <p></p> <p>The <code>Unavailable</code> status will change to <code>Ready</code> once the deployment is complete and NetBox has fully initialized:</p> <p></p> <p>NetBox Enterprise should now be fully deployed.</p> <p>Tip</p> <p>Although deployment is complete, you may still need to configure your ingress controller before you can connect without having to use port-forwarding. NetBox Enterprise is configured to expose a ClusterIP service with the name netbox-enterprise on port 80.</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/","title":"NetBox Enterprise KOTS Requirements","text":""},{"location":"netbox-enterprise/nbe-kots-requirements/#system-requirements","title":"System requirements","text":"<p>To install NetBox Enterprise on an existing cluster, the cluster must meet the following requirements:</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/#recommended-cluster-requirements","title":"Recommended cluster requirements","text":"<p>The following are the recommended system requirements for a production deployment of NetBox Enterprise running two replicas. For larger environments with more replicas, additional resources should be allocated.</p> <ul> <li>8 Virtual CPU (vCPU)</li> <li>24 GB Memory (RAM)</li> <li>100 GB SSD free disk space in <code>/var/lib</code></li> </ul> <p>Note</p> <p>For non-production deployments of NetBox Enterprise, the minimum system requirements can be reduced to 4 Virtual CPU (vCPU) and 16 GB Memory (RAM). All other requirements remain the same.</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/#supported-operating-systems","title":"Supported operating systems","text":"<p>The following are the supported operating systems for nodes:</p> <ul> <li>Linux AMD64</li> </ul>"},{"location":"netbox-enterprise/nbe-kots-requirements/#available-storageclass","title":"Available StorageClass","text":"<p>The cluster must have an existing StorageClass available. KOTS creates the required stateful components using the default StorageClass in the cluster.</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/#kubernetes-version-compatibility","title":"Kubernetes version compatibility","text":"<p>KOTS installation of NetBox Enterprise is supported on most common Kubernetes clusters, running v1.27 or higher.</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/#port-forwarding","title":"Port forwarding","text":"<p>To support port forwarding, Kubernetes clusters require that the SOcket CAT (socat) package is installed on each node.</p>"},{"location":"netbox-enterprise/nbe-kots-requirements/#rbac-requirements","title":"RBAC Requirements","text":"<p>The user that runs the installation command must have at least the minimum role-based access control (RBAC) permissions that are required by KOTS. If the user does not have the required RBAC permissions, then an error message displays: <code>Current user has insufficient privileges to install Admin Console</code>.</p> <p>The required RBAC permissions vary depending on if the user attempts to install KOTS with cluster-scoped access or namespace-scoped access:</p> <ul> <li>Cluster-scoped RBAC Requirements (Default)</li> <li>Namespace-scoped RBAC Requirements</li> </ul>"},{"location":"netbox-enterprise/nbe-kots-requirements/#cluster-scoped-rbac-requirements-default","title":"Cluster-scoped RBAC Requirements (Default)","text":"<p>By default, KOTS requires cluster-scoped access. With cluster-scoped access, a Kubernetes ClusterRole and ClusterRoleBinding are created that grant KOTS access to all resources across all namespaces in the cluster.</p> <p>To install KOTS with cluster-scoped access, the user must meet the following RBAC requirements:</p> <ul> <li>The user must be able to create workloads, ClusterRoles, and ClusterRoleBindings.</li> <li>The user must have cluster-admin permissions to create namespaces and assign RBAC roles across the cluster.</li> </ul>"},{"location":"netbox-enterprise/nbe-kots-requirements/#namespace-scoped-rbac-requirements","title":"Namespace-scoped RBAC Requirements","text":"<p>KOTS can be installed with namespace-scoped access rather than the default cluster-scoped access. With namespace-scoped access, a Kubernetes Role and RoleBinding are automatically created that grant KOTS permissions only in the namespace where it is installed. Please contact us for more details.</p>"},{"location":"netbox-enterprise/nbe-ldap/","title":"LDAP Configuration for NetBox Enterprise","text":"<ol> <li>In the Admin Console for NetBox Enterprise, navigate to the Config tab and scroll to the bottom to check Advanced Settings</li> <li>Apply the following into NetBox Python Configuration Overrides <pre><code>REMOTE_AUTH_ENABLED = True\nREMOTE_AUTH_BACKEND = 'netbox.authentication.LDAPBackend'\nREMOTE_AUTH_CREATE_USER = True\n</code></pre></li> <li>Apply the following into NetBox Environment Overrides, replacing the relevant information specific to your environment <pre><code>AUTH_LDAP_SERVER_URI: \"ldaps://xxxxxxx:636\"\nAUTH_LDAP_BIND_DN: \"cn=administrator,cn=users,DC=nifry,DC=local\"\nAUTH_LDAP_BIND_PASSWORD: \"xxxxxx\"\nAUTH_LDAP_CONNECTION_OPTIONS: \"{ ldap.OPT_REFERRALS: 0 }\"\nAUTH_LDAP_USER_SEARCH_BASEDN: \"cn=users,dc=nifry,dc=local\"\nAUTH_LDAP_USER_SEARCH: 'LDAPSearch(\"cn=users,dc=nifry,dc=local\", ldap.SCOPE_SUBTREE, \"sAMAccountName=%(user)s\")'\nAUTH_LDAP_GROUP_TYPE: \"NestedGroupOfNamesType\"\nAUTH_LDAP_GROUP_SEARCH_BASEDN: \"cn=users,DC=nifry,DC=local\"\nAUTH_LDAP_FIND_GROUP_PERMS: true\nAUTH_LDAP_MIRROR_GROUPS: true\nAUTH_LDAP_REQUIRE_GROUP_DN: \"CN=Netbox Users,CN=Users,DC=nifry,DC=local\"\nAUTH_LDAP_IS_ADMIN_DN: \"CN=Netbox Admins,CN=Users,DC=nifry,DC=local\"\nAUTH_LDAP_IS_SUPERUSER_DN: \"CN=Netbox Superusers,CN=Users,DC=nifry,DC=local\"\nAUTH_LDAP_CACHE_TIMEOUT: 0\nLDAP_IGNORE_CERT_ERRORS: true\n</code></pre></li> <li>Here's how it should look in the end </li> </ol>"},{"location":"netbox-enterprise/nbe-migrating/","title":"Migrating to NetBox Enterprise","text":"<p>Migrating from NetBox open source to NetBox Labs Enterprise is a simple and efficient process. Because NetBox Enterprise is built on the same open source platform, database imports can be completed quickly, enabling a smooth transition.</p>"},{"location":"netbox-enterprise/nbe-migrating/#database","title":"Database","text":"<p>Compatibility Check</p> <p>The database being migrated must match the major and minor version of the NetBox deployed with NetBox Enterprise. NetBox Labs support can upgrade older databases on your behalf to assist in the migration process.</p>"},{"location":"netbox-enterprise/nbe-migrating/#exporting-the-open-source-database","title":"Exporting the Open Source Database","text":"<ol> <li>Use the following command to export your existing NetBox database: <pre><code>pg_dump --username netbox --password --host localhost netbox &gt; netbox.pgsql \n</code></pre></li> </ol> <p>Info</p> <p>Notify the NetBox Labs team if you used any additional flags for the 'pg_dump' command, or if you exported the data to a different format.</p>"},{"location":"netbox-enterprise/nbe-migrating/#importing-the-database-to-netbox-enterprise","title":"Importing the Database to NetBox Enterprise","text":"<ol> <li>Follow the steps outlined here to import the database into NetBox Enterprise.</li> </ol>"},{"location":"netbox-enterprise/nbe-migrating/#media-files-optional","title":"Media Files (Optional)","text":"<p>If images and/or scripts are used in your NetBox, migrate them to the NetBox Labs deployment.</p> <p>Info</p> <p>The steps below assume the default paths used by the open source deployment. If the Media or Scripts locations have been changed with the MEDIA_ROOT or SCRIPTS_ROOT parameters in configuration.py, modify the following steps according to those paths.</p>"},{"location":"netbox-enterprise/nbe-migrating/#images","title":"Images","text":"<ol> <li>Locate existing images in your open source installation's media root directory: <pre><code>cd /opt/netbox/netbox/ &amp;&amp; ls -lR media\n</code></pre></li> <li> <p>Copy and transfer the entire media directory to the NetBox Enterprise server.</p> </li> <li> <p>Enable the NetBox Enterprise shell and identify a running netbox-enterprise pod: <pre><code>sudo ./netbox-enterprise shell\nkubectl get pods -n kotsadm\n</code></pre> <pre><code>NAME                                                  READY   STATUS      RESTARTS      AGE\nkotsadm-54bbd64487-dkj6t                              1/1     Running     1 (24h ago)   3d18h\nkotsadm-rqlite-0                                      1/1     Running     1 (24h ago)   3d18h\nkurl-proxy-kotsadm-6c7c96b4cb-66p6g                   1/1     Running     2 (24h ago)   3d18h\nnetbox-enterprise-backup-labeler-29028255-rxlzm       0/1     Completed   0             39m\nnetbox-enterprise-backup-labeler-29028270-7x2w8       0/1     Completed   0             24m\nnetbox-enterprise-backup-labeler-29028285-xqqn6       0/1     Completed   0             9m34s\n----&gt; netbox-enterprise-c769578d5-f9kl7               1/1     Running     1 (24h ago)   24h\nnetbox-enterprise-housekeeping-29023200-mm7wd         0/1     Completed   0             3d12h\nnetbox-enterprise-housekeeping-29024640-9zq9s         0/1     Completed   0             2d12h\nnetbox-enterprise-housekeeping-29026080-dxb6j         0/1     Completed   0             36h\nnetbox-enterprise-housekeeping-29027520-fj7zk         0/1     Completed   0             12h\nnetbox-enterprise-postgres-cluster-instance1-59f8-0   2/2     Running     2 (24h ago)   3d16h\nnetbox-enterprise-redis-no-persistence-master-0       2/2     Running     2 (24h ago)   3d17h\nnetbox-enterprise-redis-no-persistence-replicas-0     2/2     Running     2 (24h ago)   3d17h\nnetbox-enterprise-worker-589cf884c4-z57pg             1/1     Running     2 (24h ago)   3d16h\npgo-88dccd7c9-w766g                                   1/1     Running     1 (24h ago)   3d17h\nreplicated-56c85b569f-b22hm                           1/1     Running     1 (24h ago)   3d16h\n</code></pre></p> </li> <li>Copy the media directory contents into the pod. <pre><code>kubectl cp -n kotsadm ./media netbox-enterprise-c769578d5-f9kl7:/opt/netbox/netbox\n</code></pre></li> </ol> <p>Note</p> <p>Pod names are randomly generated and need to be identified. If multiple replicas are running, select any pod with the pattern \"netbox-enterprise-########-XXXXX\"</p>"},{"location":"netbox-enterprise/nbe-migrating/#scripts","title":"Scripts","text":"<ol> <li>Locate existing scripts in your open source installation's scripts root directory: <pre><code>cd /opt/netbox/netbox/ &amp;&amp; ls -lR scripts\n</code></pre></li> <li>Copy and transfer scripts onto an endpoint with access to the NetBox Enterprise web interface.</li> <li>Login to NetBox Enterprise and navigate to Customization &gt; Scripts.</li> <li>Click Add and upload the first script.</li> <li>Repeat the previous step for any remaining scripts.</li> </ol>"},{"location":"netbox-enterprise/nbe-overview/","title":"NetBox Enterprise","text":""},{"location":"netbox-enterprise/nbe-overview/#overview","title":"Overview","text":"<p>NetBox Enterprise is a distribution of NetBox built by NetBox Labs for organizations deploying NetBox in their own infrastructure. NetBox Enterprise users gain a simplified installation and upgrade process, as well as advanced features and integrations not available in the community editon of NetBox.</p> <p>The NetBox Enterprise installer provides a fully managed, hands-off installation experience for installing NetBox Enterprise, including deploying and managing an underlying Kubernetes cluster. A bare Linux operating system with adequately sized compute resources is the only requirement.</p> <p>NetBox Enterprise installer deployments deliver all the components and dependencies required to deploy and operate NetBox, including databases, application servers, application load balancers, and object stores. This deployment still provides the flexibility of leveraging external components, such as a PostgreSQL cluster or a Redis key-value store.</p> <p>See the NetBox Enterprise Installation guide for more details.</p>"},{"location":"netbox-enterprise/nbe-release-notes/","title":"NetBox Enterprise 1.x Release Notes","text":""},{"location":"netbox-enterprise/nbe-release-notes/#11011102","title":"1.10.1/1.10.2","text":"<p>Minor releases to fix a number of issues with Diode and Assurance integration.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>db: move postgresql permissions-setting to an init</li> <li>diode: backport runtime-secret script from 1.11</li> <li>netbox: make sure netbox refreshes when override hostname changes</li> <li>redis: remove redis modules no longer needed for diode</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#features","title":"Features","text":"<ul> <li>config: add hostname override to the KOTS config</li> <li>config: show Diode/Assurance license status in KOTS UI</li> <li>diode: add deployments and services for diode components in replicated-app.yaml</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions","title":"Versions","text":"<p>This release uses the following upstream software:</p> <ul> <li>NetBox 4.2.9</li> <li>Redis 7.4.2 (if built-in Redis is enabled)</li> <li>PostgreSQL 16.8 (if built-in database is enabled)</li> <li>Diode 1.2.0</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.2 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2611\ufe0e netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 1.1.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.6 \u2611\ufe0e slurpit_netbox slurpit_netbox 1.1.13 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#1100","title":"1.10.0","text":"<p>This in the first release to include Diode and the NetBox Assurance plugin.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#features_1","title":"Features","text":"<ul> <li>cluster: import basic diode chart</li> <li>cluster: only pull images if necessary</li> <li>diode: add diode chart dependency and enable configuration</li> <li>diode: add diode reconciler and ingester configuration to netbox enterprise chart</li> <li>diode: add proxy to diode image pull</li> <li>diode: auto-configure diode plugin in netbox config</li> <li>diode: always update the host secret</li> <li>diode: bump assurance plugin to 1.0.1</li> <li>diode: change diode/hydra to use NBE PostgreSQL</li> <li>diode: configure plugin based on ingress hostname</li> <li>diode: don't auto-apply changesets if assurance is enabled</li> <li>diode: generate a secret containing the external host reliably</li> <li>diode: wait for backend to be running before configuring the diode plugin</li> <li>docker: switch chart to use production (1.20.0) nbe image</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_1","title":"Versions","text":"<p>This release uses the following upstream software:</p> <ul> <li>NetBox 4.2.9</li> <li>Redis 7.4.2 (if built-in Redis is enabled)</li> <li>PostgreSQL 16.8 (if built-in database is enabled)</li> <li>Diode 1.2.0</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_1","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.2 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2610 netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 1.0.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.4 \u2611\ufe0e slurpit_netbox slurpit_netbox 1.1.13 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#193","title":"1.9.3","text":"<p>Fix a bug that caused failure to download resources in airgap and proxied environments. Also includes an updated Branching plugin that fixes a number of bugs.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>cluster: clean up proxy references for dependencies</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_2","title":"Versions","text":"<p>This release uses the following upstream software:</p> <ul> <li>NetBox 4.2.9</li> <li>Redis 7.4.2 (if built-in Redis is enabled)</li> <li>PostgreSQL 16.8 (if built-in database is enabled)</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_2","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.2 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2611\ufe0e netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 1.1.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.6 \u2610 slurpit_netbox slurpit_netbox 1.1.13 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#192","title":"1.9.2","text":"<p>Updates NetBox to 4.2.9, plus includes an update to the cluster software which improves the handling of upgrades.</p> <p>NOTE: This update will upgrade NetBox to 4.2.9. If you have custom plugins installed, you will need to upgrade to NetBox Enterprise 1.9.2 and then create a new wheelhouse that contains plugins compatible with 4.2.9.</p> <p>Please review the upstream NetBox release notes from your current version through 4.2.9 for a complete list of breaking changes, enhancements, and bug fixes.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#features_2","title":"Features","text":"<ul> <li>cluster: bump to 2.4.0</li> <li>netbox: bump to NetBox 4.2.9</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_3","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.2.9 * Redis 7.4.2 (if built-in Redis is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_3","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.1 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2610 netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-netbox-branching netbox_branching 0.5.4 \u2611\ufe0e slurpit_netbox slurpit_netbox 1.1.13 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#191","title":"1.9.1","text":"<p>A minor release that contains build process updates under the covers, plus the Python XML fixes introduced in NetBox Enterprise 1.8.6.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_4","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.2.6 * Redis 7.4.2 (if built-in Redis is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_4","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.1 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2610 netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-netbox-branching netbox_branching 0.5.4 \u2611\ufe0e slurpit_netbox slurpit_netbox 1.1.13 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#190","title":"1.9.0","text":"<p>Updates the embedded NetBox to 4.2.6. Also upgrades a number of dependencies to their latest versions, adds some extra system consistency validation checks, and reduces the number of proxied domains necessary to install NetBox Enterprise.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>netbox: update to docker image with pydantic fix (NBE-185)</li> <li>add exit statements for better error handling in configmap-executable.yaml</li> <li>adjust formatting in cronjob-backup-labeler.yaml for consistency</li> <li>remove branch reference for command bar disabling from CI workflow and update Docker image tag</li> <li>remove unnecessary conditional for nodeSelector in cronjob-backup-labeler.yaml</li> <li>replace hardcoded imagePullPolicy with configurable value in cronjob-backup-labeler.yaml</li> <li>restore TTL and backoff limit in backup labeler CronJob configuration</li> <li>update Docker image tag to indicate command bar disabling</li> <li>update imagePullPolicy to 'IfNotPresent' in cronjob-backup-labeler.yaml</li> <li>update system validation query to use jq and change backup labeler image to netboxlabs/nbe-utils:latest</li> <li>update system validation query image version to netboxlabs/nbe-utils:1</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#features_3","title":"Features","text":"<ul> <li>add CronJob for netbox sidecar task to do system validation</li> <li>add system validation check CronJob with service account and role binding</li> <li>add TTL and backoff limit to backup labeler CronJob configuration</li> <li>cluster: add settings for the improved proxy support</li> <li>cluster: update to 2.3.1</li> <li>config: create some macros for nbe-utils and replace busybox</li> <li>deps: update pgo to 5.7.4, replicated-sdk to 1.5.0</li> <li>increase replicas for postgres instance to improve availability</li> <li>netbox: bump to netbox 4.2.6 and ensure versions are correct</li> <li>rename replicas_node_count to node_count for consistency in postgres configuration</li> <li>update backup labeler configuration with TTL and backoff limit</li> <li>update backup labeler to routines labeler and improve system validation error handling</li> <li>update dependencies in Chart.lock for netbox-enterprise</li> <li>update netbox sidecar CronJob to run every 5 minutes and improve error handling</li> <li>update postgres replica configuration to use dynamic node count</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_5","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.2.6 * Redis 7.4.2 (if built-in Redis is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_5","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified netbox-acls netbox_acls 1.8.1 \u2611\ufe0e netbox-bgp netbox_bgp 0.15.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.9.0 \u2610 netbox-documents netbox_documents 0.7.1 \u2610 netbox-floorplan-plugin netbox_floorplan 0.6.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.6 \u2610 netbox-inventory netbox_inventory 2.3.0 \u2610 netbox-lifecycle netbox_lifecycle 1.1.5 \u2610 netbox-plugin-dns netbox_dns 1.2.6 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.17 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.2.0 \u2610 netbox-topology-views netbox_topology_views 4.2.1 \u2611\ufe0e netbox-validity validity 3.1.3 \u2610 netboxlabs-netbox-branching netbox_branching 0.5.4 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#186","title":"1.8.6","text":"<p>Contains a fix for mismatched XML modules used by some 3rd-party plugins.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>docker: ignore low-priority trivy warning about KOTS dep</li> <li>docker: make sure lxml and xmlsec match (NBE-193)</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_6","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_6","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#185","title":"1.8.5","text":"<p>Contains a fix for upgrades freezing in some situations.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>cluster: remove unnecessary repository entry in ingress-nginx config</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_7","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_7","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#184","title":"1.8.4","text":"<p>Provides a number of updates to custom plugin installation, as well as other small enhancements and bug fixes, included in the 1.7.x series, most notably the security fix for the <code>ingress-nginx</code> controller (CVE-2025-1974).</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>cluster: properly show \"ready\" in restore mode</li> <li>cluster: remove the admission controller from status checks</li> <li>cluster: repair some shellcheck issues, remove vestigial config</li> <li>netbox: a few small cosmetic fixes to plugin install</li> <li>netbox: improve plugin installation issues for custom tarballs</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_8","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_8","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#183","title":"1.8.3","text":"<p>Provides a number of updates to custom plugin installation, as well as other small enhancements and bug fixes, included in the 1.7.x series, most notably the security fix for the <code>ingress-nginx</code> controller (CVE-2025-1974).</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>cluster: properly show \"ready\" in restore mode</li> <li>netbox: a few small cosmetic fixes to plugin install</li> <li>repair some shellcheck issues, remove vestigial config</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#features_4","title":"Features","text":"<ul> <li>cluster: make a label to tag pods supporting upload</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_9","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_9","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#181","title":"1.8.1","text":"<p>Fixes user creation, password validation, and group/SSO issues in NetBox.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>netbox: use proper import location of the OWASP validator</li> <li>docker: fix nbce-common install, remove deprecated nbc_auth</li> <li>docker: make sure nbc_auth_extensions are in the right place</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_10","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_10","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#180","title":"1.8.0","text":"<p>Improves logging in the NetBox containers, and adds support for uploading custom plugins.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li>cluster: fixed a few pod label macros</li> <li>config: feedback - use bash for extra script safety</li> <li>config: remove vestigial validation mount</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#features_5","title":"Features","text":"<ul> <li>config: adding log fixing branch to the CI workflow to create a release in Replicated</li> <li>config: allow uploading plugins for <code>pip install</code></li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_11","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_11","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#176","title":"1.7.6","text":"<p>Contains a fix for incorrect permissions in the media folder after restore from backup.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li>cluster: remove the admission controller from status checks</li> <li>netbox: make sure volume permissions are correct</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_12","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.8 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_12","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#175","title":"1.7.5","text":"<p>Contains a security fix for the <code>ingress-nginx</code> controller (CVE-2025-1974).</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li>cluster: disable ingress-nginx admission controller</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_13","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_13","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.2 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#174","title":"1.7.4","text":"<p>Fix missing authentication plugins for group and SSO configs.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li>docker: make sure nbc_auth_extensions are in the right place</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_14","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_14","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#173","title":"1.7.3","text":"<p>Re-release of 1.7.2 with additional password validator fixes, plus reverting to a previous working redis chart.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li>netbox: use proper import location of the OWASP validator</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_15","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_15","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#172","title":"1.7.2","text":"<p>Fixes a bug where the custom password validator was missing.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>docker: fix nbce-common install, remove deprecated nbc_auth</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_16","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_16","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.3 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#171","title":"1.7.1","text":"<p>Fixes a bug in downloading the ingress Helm chart when using a proxy for installation.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li>cluster: use the proxy to download the ingress chart</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_17","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 (if built-in database is enabled) * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_17","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.2 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#170","title":"1.7.0","text":"<p>Updates the embedded NetBox to 4.1.11. Also upgrades the cluster software, which brings many bug fixes and features, including better preflight checks, and a direct link to the NetBox UI from the admin console.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#features_6","title":"Features","text":"<ul> <li>cluster: update to 1.19.0</li> <li>cluster: add a link to the NetBox UI from the admin console</li> <li>deps: update to NetBox 4.1.11 + latest NetBox chart</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#versions_18","title":"Versions","text":"<p>This release uses the following upstream software: * NetBox 4.1.11 * Redis 7.4.2 * PostgreSQL 16.6 (if built-in database is enabled)</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_18","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Config Name Version Certified nbrisk nb_risk 41.0.1 \u2610 netbox-acls netbox_acls 1.7.0 \u2611\ufe0e netbox-bgp netbox_bgp 0.14.0 \u2611\ufe0e netbox-config-diff netbox_config_diff 2.8.0 \u2610 netbox-documents netbox_documents 0.7.0 \u2610 netbox-floorplan-plugin netbox_floorplan 0.5.0 \u2611\ufe0e netbox-interface-synchronization netbox_interface_synchronization 4.1.4 \u2610 netbox-inventory netbox_inventory 2.2.1 \u2610 netbox-lifecycle netbox_lifecycle 1.1.3 \u2610 netbox-plugin-dns netbox_dns 1.1.7 \u2611\ufe0e netbox-qrcode netbox_qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack netbox_reorder_rack 1.1.3 \u2610 netbox-secrets netbox_secrets 2.1.2 \u2610 netbox-topology-views netbox_topology_views 4.1.0 \u2611\ufe0e netbox-validity validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin netbox_diode_plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching netbox_branching 0.5.2 \u2611\ufe0e phonebox-plugin phonebox_plugin 0.0.10 \u2610 slurpit_netbox slurpit_netbox 1.0.45 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#165","title":"1.6.5","text":"<p>Fixes a small bug that would cause the admin console to improperly display an error on upgrade. Also updates a few dependencies.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li>cluster: move ingress back to <code>ingress-nginx</code> namespace</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#features_7","title":"Features","text":"<ul> <li>deps: bump to latest docker image + current plugins</li> <li>deps: update bitnami-common and netbox oss charts</li> <li>netbox: update to latest 4.0.x-compatible plugins</li> </ul>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_19","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Version Certified nbrisk 41.0.1 \u2610 netbox-acls 1.7.0 \u2611\ufe0e netbox-bgp 0.14.0 \u2611\ufe0e netbox-config-diff 2.7.0 \u2610 netbox-documents 0.7.0 \u2610 netbox-floorplan-plugin 0.5.0 \u2611\ufe0e netbox-interface-synchronization 4.1.4 \u2610 netbox-inventory 2.1.0 \u2610 netbox-lifecycle 1.1.3 \u2610 netbox-plugin-dns 1.1.6 \u2611\ufe0e netbox-qrcode 0.0.15 \u2611\ufe0e netbox-secrets 2.1.0 \u2610 netbox-topology-views 4.1.0 \u2611\ufe0e netbox-validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching 0.5.2 \u2611\ufe0e phonebox-plugin 0.0.10 \u2610 slurpit_netbox 1.0.43 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#164","title":"1.6.4","text":"<p>Disable unnecessary Redis persistence and redundant PostgreSQL backups, plus fix an issue with file upload limits and missing static content from enabled plugins.</p> <p>NetBox Enterprise 1.6.4 includes NetBox 4.1.7, and is anticipated to be a release candidate for stable.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_20","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Version Certified nbrisk 41.0.1 \u2610 netbox-acls 1.7.0 \u2611\ufe0e netbox-bgp 0.14.0 \u2611\ufe0e netbox-config-diff 2.7.0 \u2610 netbox-documents 0.7.0 \u2610 netbox-floorplan-plugin 0.5.0 \u2611\ufe0e netbox-interface-synchronization 4.1.4 \u2610 netbox-inventory 2.1.0 \u2610 netbox-lifecycle 1.1.3 \u2610 netbox-plugin-dns 1.1.6 \u2611\ufe0e netbox-qrcode 0.0.15 \u2611\ufe0e netbox-secrets 2.1.0 \u2610 netbox-topology-views 4.1.0 \u2611\ufe0e netbox-validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin 0.6.0 \u2611\ufe0e netboxlabs-netbox-branching 0.5.2 \u2611\ufe0e phonebox-plugin 0.0.10 \u2610 slurpit_netbox 1.0.43 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#163","title":"1.6.3","text":"<p>Just a few small bug fixes, mostly related to internal changes. Also contains dependency updates.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#162","title":"1.6.2","text":"<p>Primarily internal and build-related changes. No new features.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#161","title":"1.6.1","text":"<p>Fixes a number of bugs related to file uploads and proxy environments.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#160","title":"1.6.0","text":"<p>Adds the changes plugin by default, and upgrades NetBox to 4.1.7. Fixes some small bugs in plugin initialization and proxied installs.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#150","title":"1.5.0","text":"<p>The 1.5.x series was released internally for development testing of upgrades to NetBox 4.1 and branching plugin inclusion.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#142","title":"1.4.2","text":"<p>A re-release of 1.4.1 with a fix that makes sure plugin versions that are only compatible with NetBox 4.1 are not included.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_21","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Version Certified nbrisk 40.0.1 \u2610 netbox-acls 1.6.1 \u2610 netbox-bgp 0.13.3 \u2611\ufe0e netbox-config-diff 2.7.0 \u2610 netbox-documents 0.7.0 \u2610 netbox-floorplan-plugin 0.4.1 \u2611\ufe0e netbox-interface-synchronization 4.1.4 \u2610 netbox-inventory 2.0.2 \u2610 netbox-lifecycle 1.0.4 \u2610 netbox-plugin-dns 1.1.5 \u2611\ufe0e netbox-qrcode 0.0.14 \u2611\ufe0e netbox-reorder-rack 1.1.3 \u2610 netbox-secrets 2.0.3 \u2610 netbox-topology-views 4.0.1 \u2611\ufe0e netbox-validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin 0.3.0 \u2610 phonebox-plugin 0.0.9 \u2610 slurpit_netbox 0.9.84 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#141","title":"1.4.1","text":"<p>A small release with some dependency updates and the latest set of NetBox 4.0-compatible plugins.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#plugins_22","title":"Plugins","text":"<p>The following plugins are included in this release:</p> Plugin Version Certified nbrisk 41.0.1 \u2610 netbox-acls 1.7.0 \u2611\ufe0e netbox-bgp 0.14.0 \u2611\ufe0e netbox-config-diff 2.7.0 \u2610 netbox-documents 0.7.0 \u2610 netbox-floorplan-plugin 0.4.1 \u2611\ufe0e netbox-interface-synchronization 4.1.4 \u2610 netbox-inventory 2.1.0 \u2610 netbox-lifecycle 1.1.3 \u2610 netbox-plugin-dns 1.1.5 \u2611\ufe0e netbox-qrcode 0.0.15 \u2611\ufe0e netbox-reorder-rack 1.1.3 \u2610 netbox-secrets 2.1.0 \u2610 netbox-topology-views 4.1.0 \u2611\ufe0e netbox-validity 3.0.5 \u2610 netboxlabs-diode-netbox-plugin 0.6.0 \u2611\ufe0e phonebox-plugin 0.0.10 \u2610 slurpit_netbox 1.0.33 \u2611\ufe0e"},{"location":"netbox-enterprise/nbe-release-notes/#140","title":"1.4.0","text":"<p>Adds support for supplying custom environment variables (eg, for LDAP config). It also contains a small auth change to allow curly braces and spaces in the new password validator.</p> <p>A number of included plugins were updated to their latest compatible versions: * <code>netbox_bgp</code> was updated to 0.13.3 * <code>netbox_floorplan_plugin</code> was updated to 0.4.1 * <code>netbox_plugin_dns</code> was updated to 1.1.3 * <code>netbox_topology_views</code> was updated to 4.0.1 * <code>slurpit_netbox</code> was updated to 0.9.84</p>"},{"location":"netbox-enterprise/nbe-release-notes/#130","title":"1.3.0","text":"<p>Compatible with any standard Kubernetes ingress controller now in KOTS installs, rather than only Nginx. Also fixes a potential data loss issue with uploaded images, as well as enabling script and report uploads.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#120","title":"1.2.0","text":"<p>Improves ingress configuration, adds support for inheriting the TLS configuration from the Admin Console configuration, and adds a \"restore mode\" for restoring manual backup data, plus many dependency updates and internal improvements.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#110","title":"1.1.0","text":"<p>Simplifies the firewall configuration necessary for installation by making sure all initialization downloads go through our proxy domain.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#106","title":"1.0.6","text":"<p>Adds support for NetBox resource usage adjustment and some improvements to startup time on a first install.</p> <p>It also adds support for backup and restore, depending on your environment and license.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#105","title":"1.0.5","text":"<p>Adds support for scraping Prometheus metrics from NetBox, as well as the embedded PostgreSQL, Redis, and SeaweedFS if they are enabled.</p> <p>Updated to support NetBox v4.0.9, and includes additional bug fixes and startup time improvements.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#104","title":"1.0.4","text":"<p>Adds OWASP password complexity validation to NetBox, and includes dependency updates.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#103","title":"1.0.3","text":"<p>Fixes issues with preflight checks, and includes minor dependency updates.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#102","title":"1.0.2","text":"<p>Provides a number of dependency updates and bug fixes, and includes initial support for backups of built-in Redis and PostgreSQL.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#101","title":"1.0.1","text":"<p>Provides bug fixes encountered during the initial rollout of the NetBox Enterprise application.</p>"},{"location":"netbox-enterprise/nbe-release-notes/#100","title":"1.0.0","text":"<p>Provides final cleanup of the Beta stream in preparation for the wider release.</p> <p>Provides a number of internal changes, and includes fixes for an issue where annotations could render improperly and cause problems with upgrades. Updated to support NetBox v4.0.7.</p>"},{"location":"netbox-enterprise/nbe-saml-group-map/","title":"Configuring SAML Group Mapping in NetBox Enterprise","text":"<p>Setting up Group Mapping for SAML requires the base SAML SSO Setup to be configured and working first.</p>"},{"location":"netbox-enterprise/nbe-saml-group-map/#configure-the-idp","title":"Configure the IdP","text":"<p>NetBox Enterprise expects a SAML group attribute statement to be named <code>groups</code>, which contains a list of group names the user belongs to. If your IdP sends group information under a different attribute name, such as <code>MemberOf</code>, you must update its configuration to use <code>groups</code> to ensure proper mapping.</p> <p>Example:</p> <p></p>"},{"location":"netbox-enterprise/nbe-saml-group-map/#configuring-group-mappings","title":"Configuring Group Mappings","text":"<ol> <li>Desired groups must first be configured within NetBox</li> <li>In the Admin Console for NetBox Enterprise, navigate to the Config tab and scroll to the bottom to check Advanced Settings</li> <li>Apply the following into NetBox Python Configuration Overrides, replacing the relevant information.</li> </ol> <pre><code>SOCIAL_AUTH_PIPELINE = (\n'social_core.pipeline.social_auth.social_details',\n'social_core.pipeline.social_auth.social_uid',\n'social_core.pipeline.social_auth.social_user',\n'social_core.pipeline.user.get_username',\n'social_core.pipeline.social_auth.associate_by_email',\n'social_core.pipeline.user.create_user',\n'social_core.pipeline.social_auth.associate_user',\n'netbox.authentication.user_default_groups_handler',\n'social_core.pipeline.social_auth.load_extra_data',\n'social_core.pipeline.user.user_details',\n'nbc_auth_extensions.saml_authentication.saml_map_groups',\n)\n\nSOCIAL_AUTH_PIPELINE_CONFIG = {\n    'SAML_USER_FLAGS_BY_GROUP': {\n        \"is_staff\": {\n            \"idp-staff-group-name\" # remove this line if no group should be granted 'Staff'\n        },\n        \"is_superuser\": {\n            \"idp-superuser-group-name\" # remove this line if no group should be granted 'Superuser'\n        }\n    },\n    'SAML_GROUP_MAP': {\n        \"idp-group-name-1\": \"netbox-group-name-1\",\n        \"idp-group-name-2\": \"netbox-group-name-2\"\n    }\n}\n</code></pre>"},{"location":"netbox-enterprise/nbe-saml/","title":"NetBox Enterprise SAML Configuration Guide","text":""},{"location":"netbox-enterprise/nbe-saml/#required-information","title":"Required Information","text":"<ul> <li>Entity ID: This is your IdP's Entity ID obtained from the SAML metadata</li> <li>SSO URL: Your IdP's SSO login URL</li> <li>x509 Certificate: The Base64-encoded X.509 certificate used to sign SAML assertions</li> <li>NetBox Enterprise URL: URL For the NetBox Enterprise instance</li> </ul>"},{"location":"netbox-enterprise/nbe-saml/#generate-public-and-private-keys","title":"Generate Public and Private Keys","text":"<p>These will be used later during configuration and can be generated from anywhere. Be sure to keep the private key secure.</p> <pre><code>openssl genpkey -algorithm RSA -out saml_private_key.pem -pkeyopt rsa_keygen_bits:2048\n\nopenssl req -new -x509 -key saml_private_key.pem -out saml_cert.pem -days &lt;specify number of days valid&gt;\n</code></pre>"},{"location":"netbox-enterprise/nbe-saml/#configure-the-idp","title":"Configure the IdP","text":"<p>Set up the IdP using the public key from the previous section, and the ACS URL (based on the NetBox Enterprise URL). These steps will vary depending on the IdP in use.</p> <p>ACS URL: \"{NetBox Enterprise URL}/oauth/complete/saml/\" SP Entity ID: \"{NetBox Enterprise URL}\"</p> <p>Example:</p> <p></p>"},{"location":"netbox-enterprise/nbe-saml/#configure-attributes-or-claims","title":"Configure Attributes or Claims","text":"<p>Setup similar mappings in the IdP's \"Attributes\" or \"Claims\" section. Names may vary on different platforms.</p> <pre><code>\"attr_first_name\": \"first_name\"\n\"attr_last_name\": \"last_name\"\n\"attr_username\": \"email\"\n\"attr_email\": \"email\"\n</code></pre> <p>Example:</p> <p></p>"},{"location":"netbox-enterprise/nbe-saml/#capture-x509-certificate","title":"Capture x509 Certificate","text":"<p>After setting up the IdP, generate a certificate in the IdP (this may be done by default). The x509 certificate can either be downloaded or viewed in the SAML metadata URL. This certificate data will be used in the next step.</p>"},{"location":"netbox-enterprise/nbe-saml/#update-netbox-enterprise-config","title":"Update NetBox Enterprise Config","text":"<ol> <li>In the Admin Console for NetBox Enterprise, navigate to the Config tab and scroll to the bottom to check Advanced Settings</li> <li>Apply the following into NetBox Python Configuration Overrides, replacing the relevant information from previous steps.</li> </ol> <pre><code>REMOTE_AUTH_ENABLED = True\nREMOTE_AUTH_AUTO_CREATE_USER = True\nREMOTE_AUTH_BACKEND = 'social_core.backends.saml.SAMLAuth'\nSOCIAL_AUTH_REDIRECT_IS_HTTPS = True\n\nSOCIAL_AUTH_SAML_SP_ENTITY_ID = \"&lt;NetBox Enterprise Instance URL&gt;\"\nSOCIAL_AUTH_SAML_SP_PUBLIC_CERT = \"-----BEGIN CERTIFICATE-----&lt;Public Key goes here&gt;-----END CERTIFICATE-----\"\nSOCIAL_AUTH_SAML_SP_PRIVATE_KEY = \"-----BEGIN PRIVATE KEY-----&lt;Private Key goes here&gt;-----END PRIVATE KEY-----\"\n\nSOCIAL_AUTH_SAML_ORG_INFO = {\n    \"en-US\": {\n        \"name\": \"&lt;Org Name&gt;\",\n        \"displayname\": \"&lt;Org Display Name&gt;\",\n        \"url\": \"&lt;Org Website&gt;\",\n    }\n}\n\nSOCIAL_AUTH_SAML_TECHNICAL_CONTACT = {\n    \"givenName\": \"support\",\n    \"emailAddress\": \"[&lt;Support Email Address&gt;](mailto:&lt;Support Email Address&gt;)\"\n}\n\nSOCIAL_AUTH_SAML_SUPPORT_CONTACT = {\n    \"givenName\": \"support\",\n    \"emailAddress\": \"[&lt;Support Email Address&gt;](mailto:&lt;Support Email Address&gt;)\"\n}\n\nSOCIAL_AUTH_SAML_ENABLED_IDPS = {\n    \"idp\": {\n        \"entity_id\": \"&lt;SAML Entity ID&gt;\",\n        \"url\": \"&lt;SAML Sign-on URL&gt;\",\n        \"x509cert\": \"&lt;x509 Certificate&gt;\",\n        \"attr_user_permanent_id\": \"email\",\n        \"attr_first_name\": \"first_name\",\n        \"attr_last_name\": \"last_name\",\n        \"attr_username\": \"email\",\n        \"attr_email\": \"email\",\n    }\n}\n</code></pre>"},{"location":"netbox-enterprise/nbe-tls-ingress/","title":"TLS and Ingress: Accessing NetBox Enterprise","text":""},{"location":"netbox-enterprise/nbe-tls-ingress/#netbox-enterprise-installs","title":"NetBox Enterprise Installs","text":""},{"location":"netbox-enterprise/nbe-tls-ingress/#ingress","title":"Ingress","text":"<p>The NetBox Enterprise installation provides its own ingress controller. No additional configuration is required to reach NetBox on HTTP and HTTPS.</p>"},{"location":"netbox-enterprise/nbe-tls-ingress/#tls","title":"TLS","text":""},{"location":"netbox-enterprise/nbe-tls-ingress/#configuration","title":"Configuration","text":"<p>When you first install NetBox Enterprise and log into the Admin Console, it asks you to configure the TLS certificate. By default, it will generate a self-signed certificate, but you are able to instead upload private key and certificate chain files.</p> <p>This key and certificate chain are used for any TLS connections to the cluster, whether it's the Admin Console (on port 30000) or the main NetBox interface (on port 443).</p>"},{"location":"netbox-enterprise/nbe-tls-ingress/#key-replacementrotation","title":"Key Replacement/Rotation","text":"<p>If you configured your Admin Console to use a self-signed certificate on install and wish to replace it with your own key, or if you have an existing custom key that needs rotation, you can follow these steps to do so.</p> <p>Note</p> <p>Ensure you have your private key and a full certificate chain in PEM format. If you're using Let's Encrypt, this will be the <code>privkeyXX.pem</code> and <code>fullchainXX.pem</code> files. For other certificate providers, consult their documentation.</p> <p>First, access the NetBox Enterprise shell:</p> <pre><code>/var/lib/embedded-cluster/bin/netbox-enterprise shell\n</code></pre> <p>Then, delete the old secret and create the new one, providing the path to your chain and key files:</p> <pre><code>kubectl -n kotsadm delete secret kotsadm-tls &amp;&amp; \\\nkubectl -n kotsadm create secret tls kotsadm-tls --cert=/path/to/cert.pem --key=/path/to/key.pem\n</code></pre> <p>Finally, delete the proxy and ingress pods, so they relaunch with the new configuration:</p> <pre><code>NGINX_POD=\"$(kubectl -n ingress-nginx get pods --selector='app.kubernetes.io/name=ingress-nginx' -o name)\"\nPROXY_POD=\"$(kubectl -n kotsadm get pods --selector='app==kurl-proxy-kotsadm' -o name)\"\nkubectl -n ingress-nginx delete \"${NGINX_POD}\" &amp;&amp; \\\nkubectl -n kotsadm delete \"${PROXY_POD}\"\n</code></pre>"},{"location":"netbox-enterprise/nbe-troubleshooting/","title":"Advanced Tools and Troubleshooting","text":"<p>NetBox Enterprise is designed to harness the power of Kubernetes while minimizing the amount of work the average person needs to manage it. However, sometimes it's still useful or necessary to peek under the hood.</p>"},{"location":"netbox-enterprise/nbe-troubleshooting/#applications","title":"Applications","text":"<p>The following applications are used for various facets of administration:</p> <ul> <li>kubectl*: CLI for interacting with clusters.</li> <li>preflight*: CLI for manually running preflight validation checks.   Install by running: <code>curl https://krew.sh/preflight | bash</code></li> <li>support-bundle*: CLI for manually generating support bundles.   Install by running: <code>curl https://krew.sh/support-bundle | bash</code></li> <li>k9s: a TUI for managing and viewing cluster resources.</li> </ul> <p>* provided by the NetBox Enterprise install</p>"},{"location":"netbox-enterprise/nbe-troubleshooting/#accessing-your-cluster-from-the-command-line","title":"Accessing Your Cluster from the Command Line","text":"<p>If you are running the NetBox Enterprise installer, you will need to first execute a command to get a shell environment that knows how to interact with it.  To do this, run:</p> <pre><code>/var/lib/embedded-cluster/bin/netbox-enterprise shell\n</code></pre>"},{"location":"netbox-enterprise/nbe-troubleshooting/#accessing-your-cluster-from-the-web","title":"Accessing Your Cluster from the Web","text":"<p>The admin console is always available at <code>https://your-cluster-host-or-ip:30000/</code> in a default NetBox Enterprise install.</p>"},{"location":"netbox-enterprise/nbe-troubleshooting/#generating-a-support-bundle","title":"Generating a Support Bundle","text":""},{"location":"netbox-enterprise/nbe-troubleshooting/#command-line","title":"Command-Line","text":"<p>Access your cluster from the shell.  If you haven't installed the <code>support-bundle</code> package, do so now.</p> <p>Run: <pre><code>kubectl support-bundle /var/lib/embedded-cluster/support/host-support-bundle.yaml --load-cluster-specs\n</code></pre></p> <p>This will run a series of tests and provide a short summary of what it found, much like the preflights that run during install and when deploying. When complete, the TUI will display, like so: </p> <p>Typing <code>s</code> to save will save a short summary <code>.txt</code> file of the output you can see in the TUI. Typing <code>q</code> to quit will quit without saving the summary. In both cases, a <code>.tar.gz</code> support bundle will also be created in the current directory. This file can be used by NetBox Labs to troubleshoot your system.</p>"},{"location":"netbox-enterprise/nbe-troubleshooting/#debug-logging","title":"Debug Logging","text":"<p>\u26a0\ufe0f Warning: Do not enable debug logging in production environments. Debug logging can expose sensitive information to unauthenticated users and significantly impact system performance.</p> <p>Enable debug logging to increase log verbosity for troubleshooting issues. Debug logs provide detailed information about system operations and can help diagnose problems.</p>"},{"location":"netbox-enterprise/nbe-troubleshooting/#enabling-debug-mode","title":"Enabling Debug Mode","text":"<ol> <li>Access the admin console</li> <li>Navigate to \"Config\" section</li> <li>Find \"Enable Debug Logging\" toggle</li> <li>Enable the toggle</li> <li>Click \"Save Config\"</li> <li>Deploy the updated configuration</li> </ol>"},{"location":"netbox-enterprise/nbe-troubleshooting/#viewing-debug-logs","title":"Viewing Debug Logs","text":"<p>Access the logs using:</p> <pre><code>kubectl logs netbox-enterprise-&lt;pod_id&gt; -n kotsadm\n</code></pre> <p>Log example:</p> <p></p>"},{"location":"netbox-extensions/branching/","title":"NetBox Branching","text":"<p>NetBox is the world's leading source of truth for network infrastructure, featuring an extensive and complex data model. But sometimes it can be challenging to orchestrate changes, especially when working within a large team. This plugin introduces a new paradigm for NetBox to help overcome these challenges: branching.</p> <p>If you're familiar with git or similar version control systems, the concept of branching should be familiar. Essentially, this plugin allows you to make copies of NetBox's data model and alter them independently. Your changes will be reflected only within the branch you're working on, until you decide to merge your branch into the main data model.</p> <p>This allows you and your colleagues to stage changes within isolated environments and avoid interfering with one another's work or pushing changes to the network prematurely. Each branch can be synchronized as needed to keep up to date with external changes, and merged when needed.</p>"},{"location":"netbox-extensions/branching/#features","title":"Features","text":"<ul> <li> <p>Users can create new branches and switch between them seamlessly while navigating the web UI.</p> </li> <li> <p>Each branch exists in isolation from its peers: Changes made within one branch won't affect any other branches.</p> </li> <li> <p>Standard NetBox permissions are employed to control which users can perform branch operations.</p> </li> <li> <p>Branches can be created, synchronized, merged, reverted, and deleted through the REST API.</p> </li> <li> <p>No external dependencies! This plugin requires only NetBox v4.1 or later and a conventional PostgreSQL database (v12.0 or later).</p> </li> </ul>"},{"location":"netbox-extensions/branching/#terminology","title":"Terminology","text":"<ul> <li> <p>Main is shorthand for the primary NetBox state. Any changes made outside the context of a specific branch are made here.</p> </li> <li> <p>The creation, modification, or deletion of an object is a change.</p> </li> <li> <p>A branch is an independent copy of the NetBox data model which diverges from main at a set point in time. Any changes to main after that time will not be reflected in the branch. Likewise, changes made within the branch will not be reflected in main.</p> </li> <li> <p>Branches are provisioned automatically upon creation. The initial state of a branch is identical to the state of main at the time it was provisioned. </p> </li> <li> <p>Changes in main can be synchronized at any time into a branch. Branches are independent of one another: Changes must be synchronized into each branch individually. This ensures complete isolation among branches.</p> </li> <li> <p>Once the work within a branch has been completed, it can be merged into main. Once a branch has been merged, it is generally no longer used.</p> </li> <li> <p>Merged changes can be reverted provided the branch has not yet been deleted. This effectively replays the changes in reverse order to undo the relevant changes.</p> </li> </ul>"},{"location":"netbox-extensions/branching/#workflow","title":"Workflow","text":"<p>The first step is to create a new branch. Upon creation, a background job is automatically queued to provision a dedicated PostgreSQL schema for the branch. When provisioning is complete, the branch's status is updated to \"ready.\"</p> <p>Users can now activate the branch and begin making changes within it. These changes will be contained to the branch, and will not impact main. Likewise, any changes to main will not be reflected in the branch until it has been synchronized by a user. A branch may be synchronized repeatedly to keep it up to date with main over time.</p> <p>Once work in the branch has been completed, it can be merged into main.</p> <p><code>mermaid sequenceDiagram     actor User B     participant Main     participant Branch     actor User A     Main-&gt;&gt;Branch: Provision new branch     User A-&gt;&gt;Branch: Make changes     User B-&gt;&gt;Main: Make unrelated changes     Main-&gt;&gt;Branch: Synchronize changes     User A-&gt;&gt;Branch: Make more changes     Branch-&gt;&gt;Main: Merge branch</code></p> <p>In the event a branch should not have been merged, it can be reverted. Previously merged changes to main will be unwound and the branch will be restored to its pre-merge state. The branch is again marked as ready for additional changes, if needed, and can be merged again.</p> <p><code>mermaid sequenceDiagram     participant Main     participant Branch     actor User A     Main-&gt;&gt;Branch: Provision new branch     User A-&gt;&gt;Branch: Make changes     Branch-&gt;&gt;Main: Merge branch     Note left of Main: Error detected!     Main-&gt;&gt;Branch: Revert changes     User A-&gt;&gt;Branch: Correct error     Branch-&gt;&gt;Main: Merge branch</code></p>"},{"location":"netbox-extensions/branching/#getting-started","title":"Getting Started","text":""},{"location":"netbox-extensions/branching/#database-preparation","title":"Database Preparation","text":"<p>Before installing this plugin, ensure that the PostgreSQL user as which NetBox authenticates has permission to create new schemas in the database. This can be achieved by issuing the following command in the PostgreSQL shell (substituting <code>$database</code> and <code>$user</code> with their respective values):</p> <pre><code>GRANT CREATE ON DATABASE $database TO $user;\n</code></pre>"},{"location":"netbox-extensions/branching/#plugin-installation","title":"Plugin Installation","text":""},{"location":"netbox-extensions/branching/#1-virtual-environment","title":"1. Virtual Environment","text":"<p>The plugin can be installed from PyPI. First, activate the Python virtual environment used by NetBox (which is typically located at <code>/opt/netbox/venv/</code>):</p> <pre><code>source /opt/netbox/venv/bin/activate\n</code></pre> <p>Note</p> <p>You may need to modify the <code>source</code> command above if your virtual environment has been installed in a different location.</p>"},{"location":"netbox-extensions/branching/#2-python-package","title":"2. Python Package","text":"<p>Use <code>pip</code> to install the Python package:</p> <pre><code>pip install netboxlabs-netbox-branching\n</code></pre>"},{"location":"netbox-extensions/branching/#3-enable-plugin","title":"3. Enable Plugin","text":"<p>Add <code>netbox_branching</code> to the end of the <code>PLUGINS</code> list in <code>configuration.py</code>.</p> <pre><code>PLUGINS = [\n    # ...\n    'netbox_branching',\n]\n</code></pre> <p>Warning</p> <p><code>netbox_branching</code> must be the last (or only) plugin in the list. Branching support will not be registered for models provided by any plugin appearing later in the list.</p> <p>Note</p> <p>If there are no plugins already installed, you might need to create this parameter. If so, be sure to define <code>PLUGINS</code> as a list containing the plugin name as above, rather than just the name.</p>"},{"location":"netbox-extensions/branching/#4-configuration","title":"4. Configuration","text":"<p>This plugin employs dynamic schema resolution, which requires that we override two low-level Django settings. First, we'll wrap NetBox's configured <code>DATABASE</code> parameter with <code>DynamicSchemaDict</code> to support dynamic schemas. Second, we'll employ the plugin's custom database router.</p> <p>Create a new file named <code>local_settings.py</code> in the same directory as <code>settings.py</code>, and add the content below.</p> <pre><code>from netbox_branching.utilities import DynamicSchemaDict\nfrom .configuration import DATABASE\n\n# Wrap DATABASES with DynamicSchemaDict for dynamic schema support\nDATABASES = DynamicSchemaDict({\n    'default': DATABASE,\n})\n\n# Employ our custom database router\nDATABASE_ROUTERS = [\n    'netbox_branching.database.BranchAwareRouter',\n]\n</code></pre>"},{"location":"netbox-extensions/branching/#5-database-migrations","title":"5. Database Migrations","text":"<p>Run the included database migrations:</p> <pre><code>cd /opt/netbox/netbox\n./manage.py migrate\n</code></pre>"},{"location":"netbox-extensions/branching/#known-limitations","title":"Known Limitations","text":"<p>There are currently a few limitations to the functionality provided by this plugin that are worth highlighting. We hope to address these in future releases.</p> <ul> <li> <p>Branches may not persist across minor version upgrades of NetBox. Users are strongly encouraged to merge or remove all open branches prior to upgrading to a new minor release of NetBox (e.g. from v4.1 to v4.2). This is because database migrations introduced by the upgrade will not be applied to branch schemas, potentially resulting in an invalid state. However, it should be considered safe to upgrade to new patch releases (e.g. v4.1.0 to v4.1.1) with open branches.</p> </li> <li> <p>Open branches will not reflect newly installed plugins. Any branches created before installing a new plugin will not be updated to support its models. Note, however, that installing a new plugin will generally not impede the use of existing branches. Users are encouraged to install all necessary plugins prior to creating branches. (This also applies to database migrations introduced by upgrading a plugin.)</p> </li> </ul>"},{"location":"netbox-extensions/branching/changelog/","title":"Change Log","text":""},{"location":"netbox-extensions/branching/changelog/#v052","title":"v0.5.2","text":""},{"location":"netbox-extensions/branching/changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>#163 - Ensure changelog records for non-branching models are created in main schema</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v051","title":"v0.5.1","text":""},{"location":"netbox-extensions/branching/changelog/#enhancements","title":"Enhancements","text":"<ul> <li>#123 - Introduce template tags for branch action buttons</li> <li>#129 - Implement pre-event signals for branch actions</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>#98 - Cable changes in branch should not impact main schema</li> <li>#119 - Fix the dynamic selection of related objects in forms while a branch is active</li> <li>#120 - <code>max_branches</code> config parameter should disregard archived branches</li> <li>#138 - Fix rendering the ID column of the change diffs table</li> <li>#140 - Fix representation of branch status in REST API</li> <li>#142 - Fix tab record counts for archived branches</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v050","title":"v0.5.0","text":""},{"location":"netbox-extensions/branching/changelog/#enhancements_1","title":"Enhancements","text":"<ul> <li>#83 - Add a \"share\" button under object views when a branch is active</li> <li>#84 - Introduce the <code>max_working_branches</code> configuration parameter</li> <li>#88 - Add branching support for NetBox's graphQL API</li> <li>#90 - Introduce the ability to archive &amp; deprovision merged branches without deleting them</li> <li>#97 - Introduce the <code>exempt_models</code> config parameter to disable branching support for plugin models</li> <li>#116 - Disable branching support for applicable core models</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>#81 - Fix event rule triggering for the <code>branch_reverted</code> event</li> <li>#91 - Disregard the active branch (if any) when alerting on changes under object views</li> <li>#94 - Fix branch merging after modifying an object with custom field data</li> <li>#101 - Permit (but warn about) database queries issued before branching support has been initialized</li> <li>#102 - Record individual object actions in branch job logs</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v040","title":"v0.4.0","text":""},{"location":"netbox-extensions/branching/changelog/#enhancements_2","title":"Enhancements","text":"<ul> <li>#52 - Introduce the <code>max_branches</code> config parameter</li> <li>#71 - Ensure the consistent application of logging messages</li> <li>#76 - Validate required configuration items on initialization</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>#57 - Avoid recording ChangeDiff records for unsupported object types</li> <li>#59 - <code>BranchAwareRouter</code> should consider branching support for model when determining database connection to use</li> <li>#61 - Fix transaction rollback when performing a dry run sync</li> <li>#66 - Capture object representation on ChangeDiff when creating a new object within a branch</li> <li>#69 - Represent null values for ChangeDiff fields consistently in REST API</li> <li>#73 - Ensure all relevant branch diffs are updated when an object is modified in main</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v031","title":"v0.3.1","text":""},{"location":"netbox-extensions/branching/changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>#42 - Fix exception raised when viewing custom scripts</li> <li>#44 - Handle truncated SQL sequence names to avoid exceptions during branch provisioning</li> <li>#48 - Ensure background job is terminated in the event branch provisioning errors</li> <li>#50 - Branch state should remain as \"merged\" after dry-run revert</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v030","title":"v0.3.0","text":""},{"location":"netbox-extensions/branching/changelog/#enhancements_3","title":"Enhancements","text":"<ul> <li>#2 - Enable the ability to revert a previously merged branch</li> <li>#3 - Require review &amp; acknowledgment of conflicts before syncing or merging a branch</li> <li>#4 - Include a three-way diff summary in the REST API representation of a modified object</li> <li>#13 - Add a link to the active branch in the branch selector dropdown</li> <li>#15 - Default to performing a \"dry run\" for branch sync &amp; merge</li> <li>#17 - Utilize NetBox's <code>JobRunner</code> class for background jobs</li> <li>#29 - Register a branch column on NetBox's global changelog table</li> <li>#36 - Run the branch provisioning process within an isolated transaction</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>#10 - Fix branch merge failure when deleted object was modified in another branch</li> <li>#11 - Fix quick search functionality for branch diffs tab</li> <li>#16 - Fix support for many-to-many assignments</li> <li>#24 - Correct the REST API schema for the sync, merge, and revert branch endpoints</li> <li>#30 - Include only unmerged branches with relevant changes in object view notifications</li> <li>#31 - Prevent the deletion of a branch in a transitional state</li> </ul>"},{"location":"netbox-extensions/branching/changelog/#v020","title":"v0.2.0","text":"<ul> <li>Initial private release</li> </ul>"},{"location":"netbox-extensions/branching/configuration/","title":"Configuration Parameters","text":""},{"location":"netbox-extensions/branching/configuration/#exempt_models","title":"<code>exempt_models</code>","text":"<p>Default: <code>[]</code> (empty list)</p> <p>A list of models provided by other plugins which should be exempt from branching support. (Only models which support change logging need be listed; all other models are ineligible for branching support.)</p> <p>Warning</p> <p>A model may not be exempted from branching support if it has one or more relationships to models for which branching is supported. Branching must be supported consistently for all inter-related models; otherwise, data corruption can occur. Configure this setting only if you have a specific need to disable branching for certain models provided by plugins.</p> <p>Models must be specified by app label and model name, as such:</p> <pre><code>exempt_models = (\n    'my_plugin.foo',\n    'my_plugin.bar',\n)\n</code></pre> <p>It is also possible to exclude all models from within a plugin by substituting an asterisk (<code>*</code>) for the model name:</p> <pre><code>exempt_models = (\n    'my_plugin.*',\n)\n</code></pre>"},{"location":"netbox-extensions/branching/configuration/#max_working_branches","title":"<code>max_working_branches</code>","text":"<p>Default: None</p> <p>The maximum number of operational branches that can exist simultaneously. This count excludes branches which have been merged or archived.</p>"},{"location":"netbox-extensions/branching/configuration/#max_branches","title":"<code>max_branches</code>","text":"<p>Default: None</p> <p>The maximum total number of branches that can exist simultaneously, including merged branches that have not been deleted. It may be desirable to limit the total number of provisioned branches to safeguard against excessive database size.</p>"},{"location":"netbox-extensions/branching/configuration/#schema_prefix","title":"<code>schema_prefix</code>","text":"<p>Default: <code>branch_</code></p> <p>The string to prefix to the unique branch ID when provisioning the PostgreSQL schema for a branch. Per the PostgreSQL documentation, this string must begin with a letter or underscore.</p> <p>Note that a valid prefix is required, as the randomly-generated branch ID alone may begin with a digit, which would not qualify as a valid schema name.</p>"},{"location":"netbox-extensions/branching/rest-api/","title":"Using the REST API","text":"<p>This plugin includes support for activating and deactivating branches via the REST API in addition to conventional creation, modification, and deletion operations.</p> <p>API Token Required</p> <p>You'll need a valid NetBox REST API token to follow any of the examples shown here. API tokens can be provisioned by navigating to the API tokens list in the user menu.</p>"},{"location":"netbox-extensions/branching/rest-api/#creating-a-branch","title":"Creating a Branch","text":"<p>Branches are created in a manner similar to most objects in NetBox. A <code>POST</code> request (including a valid authentication token) is sent to the <code>branches/</code> API endpoint with the desired attributes, such as name and description:</p> Request<pre><code>curl -X POST \\\n-H \"Authorization: Token $TOKEN\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Accept: application/json; indent=4\" \\\nhttp://netbox:8000/api/plugins/branching/branches/ \\\n--data '{\"name\": \"Branch 1\", \"description\": \"My new branch\"}'\n</code></pre> Response<pre><code>{\n    \"id\": 2,\n    \"url\": \"http://netbox:8000/api/plugins/branching/branches/2/\",\n    \"display\": \"Branch 1\",\n    \"name\": \"Branch 1\",\n    \"status\": \"new\",\n    \"owner\": {\n        \"id\": 1,\n        \"url\": \"http://netbox:8000/api/users/users/1/\",\n        \"display\": \"admin\",\n        \"username\": \"admin\"\n    },\n    \"description\": \"My new branch\",\n    \"schema_id\": \"td5smq0f\",\n    \"last_sync\": null,\n    \"merged_time\": null,\n    \"merged_by\": null,\n    \"comments\": \"\",\n    \"tags\": [],\n    \"custom_fields\": {},\n    \"created\": \"2024-08-12T17:07:46.196956Z\",\n    \"last_updated\": \"2024-08-12T17:07:46.196970Z\"\n}\n</code></pre> <p>Once a new branch has been created, it will be provisioned automatically, just as when one is created via the web UI. The branch's status will show \"ready\" when provisioning has completed.</p> <p>Once provisioned, branches can be modified and deleted via the <code>/api/plugins/branching/branches/&lt;id&gt;/</code> endpoint, similar to most objects in NetBox.</p>"},{"location":"netbox-extensions/branching/rest-api/#activating-a-branch","title":"Activating a Branch","text":"<p>Unlike the web UI, where a user's selected branch remains active until it is changed, the desired branch must be specified with each REST API request. This is accomplished by including the <code>X-NetBox-Branch</code> HTTP header specifying the branch's schema ID.</p> <pre><code>X-NetBox-Branch: $SCHEMA_ID\n</code></pre> <p>Schema IDs</p> <p>The schema ID for a branch can be found in its REST API representation or on its detail view in the web UI. This is a pseudorandom eight-character alphanumeric identifier generated automatically when a branch is created. Note that the value passed to the HTTP header does not include the <code>branch_</code> prefix, which comprises part of the schema's name in the underlying database.</p> <p>The example below returns all site objects that exist within the branch with schema ID <code>td5smq0f</code>:</p> Request<pre><code>curl -X POST \\\n-H \"Authorization: Token $TOKEN\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Accept: application/json; indent=4\" \\\n-H \"X-NetBox-Branch: td5smq0f\" \\\nhttp://netbox:8000/api/dcim/sites/\n</code></pre> <p>The branch is effectively \"deactivated\" for future API requests by simply omitting the header.</p> <p>Note</p> <p>The <code>X-NetBox-Branch</code> header is required only when making changes to NetBox objects within the context of an active branch. It is not required when creating, modifying, or deleting a branch itself.</p>"},{"location":"netbox-extensions/branching/rest-api/#syncing-merging-branches","title":"Syncing &amp; Merging Branches","text":"<p>Several REST API endpoints are provided to handle synchronizing, merging, and reverting branches:</p> Endpoint Description <code>/api/plugins/branching/branches/&lt;id&gt;/sync/</code> Synchronize changes from main to the branch <code>/api/plugins/branching/branches/&lt;id&gt;/merge/</code> Merge a branch into main <code>/api/plugins/branching/branches/&lt;id&gt;/revert/</code> Revert a previously merged branch <p>To synchronize updates from main into a branch, send a <code>POST</code> request to the desired branch's <code>sync/</code> endpoint.</p> <p>This endpoint requires a <code>commit</code> argument: Setting this to <code>false</code> effects a dry-run, where the changes to the branch are automatically rolled back at the end of the job. (This can be helpful to check for potential errors before committing to a set of changes.)</p> Request<pre><code>curl -X POST \\\n-H \"Authorization: Token $TOKEN\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Accept: application/json; indent=4\" \\\nhttp://netbox:8000/api/plugins/branching/branches/2/sync/ \\\n--data '{\"commit\": true}'\n</code></pre> <p>If successful, this will return data about the background job that has been enqueued to handle the synchronization of data. This job can be queried to determine the progress of the synchronization.</p> Response<pre><code>{\n    \"id\": 4,\n    \"url\": \"http://netbox:8000/api/core/jobs/4/\",\n    \"display_url\": \"http://netbox:8000/core/jobs/4/\",\n    \"display\": \"f0c6dea2-d5bb-4683-851e-2ac705510af4\",\n    \"object_type\": \"netbox_branching.branch\",\n    \"object_id\": 2,\n    \"name\": \"Sync branch\",\n    \"status\": {\n        \"value\": \"pending\",\n        \"label\": \"Pending\"\n    },\n    \"created\": \"2024-08-12T17:27:57.448405Z\",\n    \"scheduled\": null,\n    \"interval\": null,\n    \"started\": null,\n    \"completed\": null,\n    \"user\": {\n        \"id\": 1,\n        \"url\": \"http://netbox:8000/api/users/users/1/\",\n        \"display\": \"admin\",\n        \"username\": \"admin\"\n    },\n    \"data\": null,\n    \"error\": \"\",\n    \"job_id\": \"f0c6dea2-d5bb-4683-851e-2ac705510af4\"\n}\n</code></pre> <p>This same pattern can be followed to merge and revert branches via their respective API endpoints, listed above.</p>"},{"location":"netbox-extensions/branching/models/branch/","title":"Branches","text":"<p>A branch represents a divergent state from the main database.</p>"},{"location":"netbox-extensions/branching/models/branch/#fields","title":"Fields","text":""},{"location":"netbox-extensions/branching/models/branch/#name","title":"Name","text":"<p>The branch's unique name.</p>"},{"location":"netbox-extensions/branching/models/branch/#owner","title":"Owner","text":"<p>The NetBox user who created the branch.</p>"},{"location":"netbox-extensions/branching/models/branch/#schema-id","title":"Schema ID","text":"<p>The unique, randomly-generated identifier of the PostgreSQL schema which houses the branch in the database.</p>"},{"location":"netbox-extensions/branching/models/branch/#status","title":"Status","text":"<p>The current status of the branch. This must be one of the following values.</p> Status Description New Not yet provisioned in the database Provisioning A job is running to provision the branch's PostgreSQL schema Ready The branch is healthy and ready to be synchronized or merged Syncing A job is running to synchronize changes from main into the branch Merging A job is running to merge changes from the branch into main Reverting A job is running to revert previously merged changes in main Merged Changes from this branch have been successfully merged into main Archived A merged branch which has been deprovisioned in the database Failed Provisioning the schema for this branch has failed"},{"location":"netbox-extensions/branching/models/branch/#last-sync","title":"Last Sync","text":"<p>The time at which this branch was most recently synchronized with main. This value will be null if the branch has never been synchronized.</p> <p>Tip</p> <p>Reference the <code>synced_time</code> attribute on a branch to return either the branch's <code>last_sync</code> time or, if null, its creation time.</p>"},{"location":"netbox-extensions/branching/models/branch/#merged-time","title":"Merged Time","text":"<p>The time at which the branch was merged into main. This value will be null if the branch has not been merged.</p>"},{"location":"netbox-extensions/branching/models/branch/#merged-by","title":"Merged By","text":"<p>The NetBox user who merged the branch. This value will be null if the branch has not been merged.</p>"},{"location":"netbox-extensions/branching/models/branchevent/","title":"Branch Events","text":"<p>Branch operations, such as syncing and merging, are tracked as events. This record of events serves as a history for each branch.</p>"},{"location":"netbox-extensions/branching/models/branchevent/#fields","title":"Fields","text":""},{"location":"netbox-extensions/branching/models/branchevent/#time","title":"Time","text":"<p>The time at which the event occurred.</p>"},{"location":"netbox-extensions/branching/models/branchevent/#branch","title":"Branch","text":"<p>The branch to which this event pertains.</p>"},{"location":"netbox-extensions/branching/models/branchevent/#user","title":"User","text":"<p>The NetBox user responsible for triggering this event. This field may be null if the event was triggered by an internal process.</p>"},{"location":"netbox-extensions/branching/models/branchevent/#type","title":"Type","text":"<p>The type of event. This must be one of the following:</p> Type Description Provisioned The branch's schema was provisioned in the database Synced Changes from main were synchronized into the branch Merged Changes from the branch were merged into main Reverted Previously merged changes were reverted"},{"location":"netbox-extensions/branching/models/changediff/","title":"Change Diffs","text":"<p>A change diff summarized all changes to particular NetBox object within a branch. It serves to simplify the process of reviewing changes within a branch, and avoids the need to review successive individual changes which might otherwise prove tedious.</p>"},{"location":"netbox-extensions/branching/models/changediff/#fields","title":"Fields","text":""},{"location":"netbox-extensions/branching/models/changediff/#branch","title":"Branch","text":"<p>The branch to which this change pertains.</p>"},{"location":"netbox-extensions/branching/models/changediff/#object","title":"Object","text":"<p>The NetBox object to which this change pertains.</p>"},{"location":"netbox-extensions/branching/models/changediff/#action","title":"Action","text":"<p>The type of change. This must be one of the following:</p> <ul> <li>Created</li> <li>Updated</li> <li>Deleted</li> </ul>"},{"location":"netbox-extensions/branching/models/changediff/#original-data","title":"Original Data","text":"<p>A snapshot of the object prior to the change.</p>"},{"location":"netbox-extensions/branching/models/changediff/#modified-data","title":"Modified Data","text":"<p>A snapshot of the object as it has been modified within the branch.</p>"},{"location":"netbox-extensions/branching/models/changediff/#current-data","title":"Current Data","text":"<p>A snapshot of the object as it currently exists in main.</p>"},{"location":"netbox-extensions/branching/models/changediff/#conflicts","title":"Conflicts","text":"<p>A list of attributes with conflicting values. For example, if a site's status has been changed to different values in both main and in the branch, this will be flagged as a conflict: Adopting the new value from either version would overwrite the other.</p>"},{"location":"netbox-extensions/branching/models/objectchange/","title":"Object Changes","text":"<p>This model serves as a proxy for NetBox's native <code>ObjectChange</code> model.</p> <p>It does not introduce any new database fields. Rather, it implements several functions which assist in the application and reversal of changes from a branch (namely <code>apply()</code> and <code>undo()</code>).</p> <p>Tip</p> <p>There is typically no need to employ this model in external code. Use the NetBox's native <code>ObjectChange</code> model instead.</p>"},{"location":"netbox-extensions/branching/using-branches/api/","title":"Interact with Branches via API","text":"<p>Unlike the web UI, where a user's selected branch remains active until it is changed, the desired branch must be specified with each REST API request. This is accomplished by including the <code>X-NetBox-Branch</code> HTTP header specifying the branch's schema ID.</p> <pre><code>X-NetBox-Branch: $SCHEMA_ID\n</code></pre> <p>Schema IDs</p> <p>The schema ID for a branch can be found in its REST API representation or on its detail view in the web UI. This is a pseudorandom eight-character alphanumeric identifier generated automatically when a branch is created. Note that the value passed to the HTTP header does not include the <code>branch_</code> prefix, which comprises part of the schema's name in the underlying database.</p> <p>The example below returns all site objects that exist within the branch with schema ID <code>td5smq0f</code>:</p> <pre><code>curl -X POST \\\n-H \"Authorization: Token $TOKEN\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Accept: application/json; indent=4\" \\\n-H \"X-NetBox-Branch: td5smq0f\" \\\nhttp://netbox:8000/api/dcim/sites/\n</code></pre> <p>The branch is effectively \"deactivated\" for future API requests by simply omitting the header.</p> <p>Note</p> <p>The <code>X-NetBox-Branch</code> header is required only when making changes to NetBox objects within the context of an active branch. It is not required when creating, modifying, or deleting a branch itself.</p>"},{"location":"netbox-extensions/branching/using-branches/creating-a-branch/","title":"Creating a Branch","text":"<p>First, navigate to Branching &gt; Branches to view the list of any existing branches. Click the \"Add\" button at top right to create a new branch.</p> <p>Note</p> <p>If you don't see this button, check that you have permission to create a branch.</p> <p>Pick a unique name for your branch, and add a description if you like.</p> <p></p> <p>When a branch is first created, its status will show as \"new,\" indicating that its corresponding PostgreSQL schema has not yet been provisioned in the database. A background job is queued automatically to perform this task, which my take a few seconds to several minutes, depending on the size of your database.</p> <p>Tip</p> <p>You can check on the status of the provisioning job under the \"Jobs\" tab of the branch view.</p> <p>Once the branch's schema has been provisioned, the status will be updated to \"ready,\" and the branch will become available to activate. You can activate a branch by selecting it from the dropdown menu at top right.</p> <p></p> <p>When a branch is active, any changes you make in NetBox (aside from system resources such as users, permissions, etc.) will be reflected only within that branch. For example, if you create a new site when a branch is active, and then switch back to the main branch, the site will no longer appear. Switch back to the original branch, and the site will appear again.</p>"},{"location":"netbox-extensions/branching/using-branches/creating-a-branch/#branch-details","title":"Branch Details","text":"<p>Within the branch view, you'll notice several tabs. Each of these pertains to a set of changes related to the branch.</p> <ul> <li>Diff - This tab provides a summary of all the objects that have been created, updated, or deleted within the branch.</li> <li>Changes Behind - This tab lists all changes that have been made in main since the branch was last synchronized. Synchronizing the branch will update it to include these changes.</li> <li>Changes Ahead - This tab lists all changes made within your branch. Merging the branch will replicate these changes into main.</li> <li>Merged Changes - Once a branch has been merged, this tab lists all changes that have been applied from the branch. (This tab appears only for merged branches.)</li> </ul>"},{"location":"netbox-extensions/branching/using-branches/reverting-a-branch/","title":"Reverting a Branch","text":"<p>Once a branch has been merged, it is generally no longer needed, and can no longer be activated. However, occasionally you may find it necessary to undo the changes from a branch (due to an error or an otherwise undesired state). This can be done by reverting the branch. Only merged branches can be reverted.</p> <p>Warning</p> <p>Only branches which have not yet been archived or deleted can be reverted. Once a branch's schema has been deprovisioned, it can no longer be reverted.</p> <p>Before reverting a branch, review the changes listed under its \"Merged Changes\" tab. NetBox will attempt to undo these specific changes when reverting the branch.</p> <p>To revert a merged branch, click the \"Revert\" button. You will be asked to review the changes and to acknowledge any conflicts before executing the reversion. Continuing with the merge will queue a background job to carry out reverting the changes. When the job is running, the branch's status will show \"reverting.\"</p> <p>Tip</p> <p>You can check on the status of the reversion job under the \"Jobs\" tab of the branch view.</p> <p>Once the reversion has completed, the branch will be returned to its pre-merge status, and will again be available to activate. Its event history will show that the branch has been reverted.</p>"},{"location":"netbox-extensions/branching/using-branches/reverting-a-branch/#a-note-on-change-logging","title":"A Note on Change Logging","text":"<p>Reverting a merged branch does not erase any records from the global change log. The original changes resulting from the initial branch merge will be retained, and new change records signifying the inverse of those changes will be added. So, if you're hoping to cover your tracks after doing something foolish, reverting a branch won't help you. But it does provide a convenient path for backing out an undesirable change.</p> <p>For example, suppose you made three changes within a branch before merging it:</p> <ol> <li>Create site A</li> <li>Change the description of device B from \"foo\" to \"bar\"</li> <li>Delete tenant C</li> </ol> <p>Reverting the branch will apply the following changes, in this order:</p> <ol> <li>Create tenant C with its original attributes</li> <li>Change the description of device B from \"bar\" to \"too\"</li> <li>Delete site A</li> </ol> <p>After reverting the branch, the global change log will include a record for each of the six discrete changes.</p>"},{"location":"netbox-extensions/branching/using-branches/syncing-merging/","title":"Syncing &amp; Merging Changes","text":""},{"location":"netbox-extensions/branching/using-branches/syncing-merging/#syncing-a-branch","title":"Syncing a Branch","text":"<p>Synchronizing a branch replicates all recent changes from main into the branch. These changes can be reviewed under the \"Changes Behind\" tab under the branch view.</p> <p>To synchronize a branch, click the \"Sync\" button. (If this button is not visible, verify that the branch status shows \"ready\" and that you have permission to synchronize the branch.)</p> <p>While a branch is being synchronized, its status will show \"synchronizing.\"</p> <p>Tip</p> <p>You can check on the status of the syncing job under the \"Jobs\" tab of the branch view.</p>"},{"location":"netbox-extensions/branching/using-branches/syncing-merging/#merging-a-branch","title":"Merging a Branch","text":"<p>Merging a branch replicates all its changes into main, and updates the branch's status to \"merged.\" These changes can be reviewed under the \"Changes Ahead\" tab under the branch view. Typically, once a branch has been merged, it is no longer used.</p> <p>To merge a branch, click the \"Merge\" button. (If this button is not visible, verify that the branch status shows \"ready\" and that you have permission to merge the branch.)</p> <p>While a branch is being merged, its status will show \"merging.\"</p> <p>Tip</p> <p>You can check on the status of the merging job under the \"Jobs\" tab of the branch view.</p> <p>Once a branch has been merged, it can be reverted, archived, or deleted. Archiving a branch removes its associated schema from the PostgreSQL database to deallocate space. An archived branch cannot be restored, however the branch record is retained for future reference.</p>"},{"location":"netbox-extensions/branching/using-branches/syncing-merging/#dealing-with-conflicts","title":"Dealing with Conflicts","text":"<p>In the event an object has been modified in both your branch and in main in a diverging manner, this will be flagged as a conflict. For example, if both you and another user have modified the description of an interface to two different values in main and in the branch, this represents a conflict.</p> <p></p> <p>The good news is that you will be able to proceed with synchronizing or merging your branch even if conflicts exist, however you will need to acknowledge each such conflict to ensure that overwriting the relevant data in your branch with the data from main is acceptable. Do this by selecting each conflict before continuing with the merge.</p> <p>Alternatively, if the conflicting changes are problematic, you can go back and make the necessary changes in main to avoid overwriting data within your branch.</p>"},{"location":"netbox-extensions/branching/using-branches/syncing-merging/#dry-runs","title":"Dry Runs","text":"<p>By default, NetBox will perform a \"dry run\" when synchronizing or merging a branch. This means that it will replicate all the relevant changes to check for errors before ultimately aborting the change and returning the branch to its original state.  To permanently apply these changes instead, check the \"commit changes\" checkbox.</p>"},{"location":"netbox-extensions/changes/","title":"NetBox Change Management","text":"<p>This plugin adds change management support to NetBox. Leveraging the netbox-branching plugin, it implements policy and workflow controls to ensure proposed changes undergo formal review prior to being merged. It also retains a written record of all approved changes.</p>"},{"location":"netbox-extensions/changes/#getting-started","title":"Getting Started","text":""},{"location":"netbox-extensions/changes/#defining-a-policy","title":"Defining a Policy","text":"<p>Change policies determine who is eligible to approve a change request and how many approvals a change request requires. Each policy contains one or more rules which define these parameters.</p> <p>Begin by creating a new policy with a name of your choosing, then add however many rules are necessary to enforce your organization's change policy.</p> <p>For example, suppose your team requires that every change be approved by two engineers (members of the Engineering group in NetBox) and one of the two lead engineers (Alice and Bob). This can be achieved by adding two rules to the policy.</p> Rule Minimum reviews Reviewer groups Reviewers #1 2 Engineering - #2 1 - Alice, Bob <p>This policy will be met only when at least two members of the Engineering group and Alice or Bob submit approvals.</p>"},{"location":"netbox-extensions/changes/#create-a-change-request","title":"Create a Change Request","text":"<p>When you've finished staging your changes in a branch, click the \"request review\" button at the top of the branch view. This will take you to the change request creation form.</p> <p>Enter a name for your change request (or keep the default value, taken from the branch's name) and select the change policy which applies to your request. Each change request will be opened in \"draft\" status with medium priority by default, but these can be changed. Go ahead and change the status to \"needs review\" if it's ready for review now. Finally, provide a brief summary of your changes for reviewers.</p>"},{"location":"netbox-extensions/changes/#reviewing-a-change-request","title":"Reviewing a Change Request","text":"<p>Once a change request has been submitted, it can be reviewed by other users. To review a change request, click the \"add a review\" link above the list of reviews (if any). Select the status of your review and provide any comments you have. Your review will now show up under the change request.</p> <p>Alternatively, if you'd like to provide more detailed feedback, select the \"changes\" tab. Here, you can comment on specific changes within the branch and cite any concerns or suggestions you have. Other users can then reply to your comments.</p>"},{"location":"netbox-extensions/changes/#applying-a-change-request","title":"Applying a Change Request","text":"<p>Once a change request has been approved, the \"merge\" button will appear. Clicking it will take you to the form to merge the corresponding branch.</p> <p>Once the branch has been merged successfully, the change request's status will be automatically updated to \"completed.\"</p>"},{"location":"netbox-extensions/changes/changelog/","title":"Change Log","text":""},{"location":"netbox-extensions/changes/changelog/#v020","title":"v0.2.0","text":"<ul> <li>Initial release</li> </ul>"},{"location":"netbox-extensions/changes/configuration/","title":"Configuration Parameters","text":"<p>The following plugin configuration parameters are available.</p>"},{"location":"netbox-extensions/changes/configuration/#protect_main","title":"<code>protect_main</code>","text":"<p>Default: False</p> <p>When enabled, all object creations, changes, and deletions must be made within a branch. Changes to objects in main will not be permitted, except for those object types which do not support branching.</p>"},{"location":"netbox-extensions/changes/models/changerequest/","title":"Change Requests","text":"<p>A change request is submitted to request approval of proposed changes in a branch before it can be merged. All rules of the assigned change policy must be met for the request to be approved. When submitting a change request for a branch, the owner selects the governing policy and designates a priority.</p>"},{"location":"netbox-extensions/changes/models/changerequest/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/changerequest/#name","title":"Name","text":"<p>The user-defined name of the change request.</p>"},{"location":"netbox-extensions/changes/models/changerequest/#owner","title":"Owner","text":"<p>The user who submitted the change request.</p>"},{"location":"netbox-extensions/changes/models/changerequest/#policy","title":"Policy","text":"<p>The policy which must be met for the change request to be approved.</p> <p>Note</p> <p>The policy is selected by the change request owner.</p>"},{"location":"netbox-extensions/changes/models/changerequest/#branch","title":"Branch","text":"<p>The branch which will be merged when the change request has been approved.</p>"},{"location":"netbox-extensions/changes/models/changerequest/#status","title":"Status","text":"<p>The current status of the change request. Valid statuses are listed below.</p> Status Description Draft Not yet ready for review Needs review Waiting for reviews to satisfy the assigned policy Approved The assigned policy has been met Completed The assigned branch has been merged Rejected The proposed changes have been rejected"},{"location":"netbox-extensions/changes/models/changerequest/#priority","title":"Priority","text":"<p>The priority of the change request relative to other open requests. Valid priorities are listed below.</p> <ul> <li>High (5)</li> <li>Medium/high (4)</li> <li>Medium (3)</li> <li>Medium/low (2)</li> <li>Low (1)</li> </ul>"},{"location":"netbox-extensions/changes/models/changerequest/#summary","title":"Summary","text":"<p>A short summary of the proposed changes, reasoning for why they are being made, and any other relevant notes for reviewers.</p>"},{"location":"netbox-extensions/changes/models/comment/","title":"Comments","text":"<p>As part of the review process, users can leave comments on change requests to ask question or suggest changes. Each comment may start a thread of replies and can be marked resolved, which will hide the reply thread.</p>"},{"location":"netbox-extensions/changes/models/comment/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/comment/#author","title":"Author","text":"<p>The user who created the comment.</p>"},{"location":"netbox-extensions/changes/models/comment/#change-request","title":"Change Request","text":"<p>The change request to which the comment applies.</p>"},{"location":"netbox-extensions/changes/models/comment/#change-diff","title":"Change Diff","text":"<p>The specific change within the change request the comment applies (optional).</p>"},{"location":"netbox-extensions/changes/models/comment/#content","title":"Content","text":"<p>The comment body.</p>"},{"location":"netbox-extensions/changes/models/comment/#resolved","title":"Resolved","text":"<p>A boolean attribute indicating whether the comment has been addressed by the change request owner.</p>"},{"location":"netbox-extensions/changes/models/commentreply/","title":"Comment Replies","text":"<p>Each comment on a change request starts a new discussion thread to which users can reply. This helps keep the discussion around a change request organized.</p>"},{"location":"netbox-extensions/changes/models/commentreply/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/commentreply/#author","title":"Author","text":"<p>The user who created the reply.</p>"},{"location":"netbox-extensions/changes/models/commentreply/#comment","title":"Comment","text":"<p>The comment to which the reply thread belongs.</p>"},{"location":"netbox-extensions/changes/models/commentreply/#content","title":"Content","text":"<p>The reply body.</p>"},{"location":"netbox-extensions/changes/models/policy/","title":"Policies","text":"<p>A policy defines the conditions that must be met for a change request to be merged. Each policy defines one or more rules which assert these conditions. All rules must be met for the policy to be satisfied.</p> <p>Note</p> <p>A policy with no rules defined will always fail.</p>"},{"location":"netbox-extensions/changes/models/policy/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/policy/#name","title":"Name","text":"<p>The name by which the policy is referenced.</p>"},{"location":"netbox-extensions/changes/models/policyrule/","title":"Policy Rules","text":"<p>Each policy contains one or more rules which assert certain conditions that must be met for the policy to be met. For example, you might define a policy that requires the approval of two engineers and one manager.</p> <p>Users whose reviews will satisfy the rule are identified by assigning individual users and/or groups of users for each rule. The minimum reviews parameter defines how many approved must be submitted for the rule to be met.</p>"},{"location":"netbox-extensions/changes/models/policyrule/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/policyrule/#name","title":"Name","text":"<p>The short name by which the rule is identified.</p>"},{"location":"netbox-extensions/changes/models/policyrule/#enabled","title":"Enabled","text":"<p>A boolean indicating whether the rule is enabled. Rules are enabled by default.</p>"},{"location":"netbox-extensions/changes/models/policyrule/#minimum-reviews","title":"Minimum Reviews","text":"<p>The minimum number of eligible reviewers which must approve the change in order for the rule to pass.</p> <p>Note</p> <p>A value of zero may be set to assert that a rule shall always pass, although this is generally not recommended.</p>"},{"location":"netbox-extensions/changes/models/policyrule/#reviewer-groups","title":"Reviewer Groups","text":"<p>Groups of users whose approval will satisfy this rule.</p>"},{"location":"netbox-extensions/changes/models/policyrule/#reviewers","title":"Reviewers","text":"<p>Individual users whose approval will satisfy this rule.</p>"},{"location":"netbox-extensions/changes/models/review/","title":"Reviews","text":"<p>Reviews are submitted to approve, reject, or comment on a change request. The users eligible to review a particular change request are determined by its assigned change policy.</p>"},{"location":"netbox-extensions/changes/models/review/#fields","title":"Fields","text":""},{"location":"netbox-extensions/changes/models/review/#change-request","title":"Change Request","text":"<p>The change request being reviewed.</p>"},{"location":"netbox-extensions/changes/models/review/#user","title":"User","text":"<p>The author of the review.</p>"},{"location":"netbox-extensions/changes/models/review/#status","title":"Status","text":"<p>The current status of the review. Valid statuses are listed below.</p> Status Description Pending The review is in progress Comment The reviewer has questions or feedback Changes Requested The reviewer has requested modifications to the proposed changes Approved The proposed changes are accepted Rejected The proposed changes are rejected"},{"location":"netbox-extensions/diode/","title":"Diode","text":"<p>Currently in Public Preview</p> <p>The Diode project is currently in Public Preview. Please see NetBox Labs Product and Feature Lifecycle for more details.</p>"},{"location":"netbox-extensions/diode/#overview","title":"Overview","text":"<p>Diode is a NetBox data ingestion service that aims to simplify and enhance the process to add and update network data in NetBox. The guiding principle behind Diode has been to make it as easy as possible to get data into NetBox, removing as much burden as possible from the user while shifting that effort to technology.</p> <p>Diode is a sidecar service to NetBox that provides a gRPC/protobuf API designed for ingestion of common NetBox data models. Diode reduces the need to preprocess data to make it conform to the strict object hierarchy imposed by the NetBox data model. This allows data to be sent to NetBox in a more freeform manner, in blocks that are intuitive for network engineers such as by device or by interface. Related information is treated as attributes or properties of these blocks. Diode takes care of the heavy lifting of transforming this data to make it align with NetBox's structured and comprehensive data model. Diode will create placeholder objects to compensate for missing information, allowing fragmented or incomplete information about the network to be collected.</p>"},{"location":"netbox-extensions/diode/#prerequisites","title":"Prerequisites","text":"<ul> <li>NetBox 4.2.3 or later</li> <li>Python 3.8 or later (for Python SDK)</li> <li>Go 1.18 or later (for Go SDK)</li> <li>Network connectivity between Diode and NetBox</li> </ul>"},{"location":"netbox-extensions/diode/#components","title":"Components","text":"<p>There are several components that make up the Diode ecosystem:</p> <ol> <li> <p>Diode Server - The core service that provides ingestion and reconciliation services. See deployment instructions.</p> </li> <li> <p>Diode NetBox Plugin - Required component that provides API key management and ORM integration into NetBox. See installation instructions.</p> </li> <li> <p>Data Ingestion Methods:</p> </li> <li>NetBox Discovery Agent - Automated network discovery using the Orb agent</li> <li>SDK Integrations:<ul> <li>Python SDK</li> <li>Go SDK</li> </ul> </li> </ol>"},{"location":"netbox-extensions/diode/#quick-start","title":"Quick Start","text":"<p>For a quick step-by-step guide, see our Getting Started Guide.</p>"},{"location":"netbox-extensions/diode/#additional-resources","title":"Additional Resources","text":"<ul> <li>Diode Protocol Documentation</li> <li>Example scripts and tutorials can be found in the NetBox Labs NetBox Learning repository</li> </ul>"},{"location":"netbox-extensions/diode/#support","title":"Support","text":"<ul> <li>GitHub Issues</li> <li>Slack NetDev Community (#orb channel)</li> </ul>"},{"location":"netbox-extensions/diode/diode-get-started/","title":"Get Started with Diode","text":"<p>This guide will help you set up and start using Diode to ingest data into NetBox.</p>"},{"location":"netbox-extensions/diode/diode-get-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>NetBox version 4.2.3 or later</li> <li>Docker version 27.0.3 or newer</li> <li>bash 4.x or newer</li> <li>jq</li> <li>Network connectivity between your NetBox server and the Diode server</li> <li>Sufficient permissions to run Docker commands</li> </ul>"},{"location":"netbox-extensions/diode/diode-get-started/#installation-steps","title":"Installation Steps","text":""},{"location":"netbox-extensions/diode/diode-get-started/#deploy-diode-server","title":"Deploy Diode server","text":"<p>Host: These steps should be performed on the host where you want to run the Diode server.</p> <p>Note: For the complete installation instructions, please refer to the official Diode Server documentation.</p> <p>We provide a <code>quickstart.sh</code> script to automate the setup process. The script will download and configure all necessary files:</p> <ul> <li><code>docker-compose.yaml</code> \u2014 Defines Diode server containers</li> <li><code>.env</code> \u2014 Environment settings for customization</li> <li><code>nginx.conf</code> \u2014 Nginx configuration for routing Diode endpoints</li> <li> <p><code>client-credentials.json</code> \u2014 Defines OAuth2 clients for secure communication</p> </li> <li> <p>Create a working directory:    <pre><code>mkdir -p /opt/diode\ncd /opt/diode\n</code></pre></p> </li> <li> <p>Download and prepare the quickstart script:    <pre><code>curl -sSfLo quickstart.sh https://raw.githubusercontent.com/netboxlabs/diode/release/diode-server/docker/scripts/quickstart.sh\nchmod +x quickstart.sh\n</code></pre></p> </li> <li> <p>Run the script with your NetBox server address:    <pre><code>./quickstart.sh https://&lt;netbox-server&gt;\n</code></pre></p> <p>Note: Replace <code>&lt;netbox-server&gt;</code> with your actual NetBox server address. Do not include a trailing slash. Example: <code>./quickstart.sh https://netbox.example.com</code></p> </li> </ul> <p>This should have created an <code>.env</code> file for your environment.</p> <ol> <li> <p>Start the Diode server:    <pre><code>docker compose up -d\n</code></pre></p> </li> <li> <p>Verify the Diode server is running:    <pre><code>docker compose ps\n</code></pre>    All services should show as \"running\" or \"healthy\".</p> </li> <li> <p>Extract the <code>netbox-to-diode</code> client secret. This will be needed for the Diode NetBox plugin installation:    <pre><code>echo $(jq -r '.[] | select(.client_id == \"netbox-to-diode\") | .client_secret' /opt/diode/oauth2/client/client-credentials.json)\n</code></pre></p> <p>Note: This will return a credential that will be used by the Diode NetBox plugin to connect to the Diode server. Store it safely.</p> </li> </ol>"},{"location":"netbox-extensions/diode/diode-get-started/#install-diode-netbox-plugin","title":"Install Diode NetBox Plugin","text":"<p>Host: These steps should be performed on the host where NetBox is installed.</p> <p>Note: For the complete installation instructions, please refer to the official Diode NetBox Plugin documentation.</p> <ol> <li> <p>Source the NetBox Python Virtual Environment <pre><code>cd /opt/netbox\nsource venv/bin/activate\n</code></pre></p> </li> <li> <p>Install the Plugin Package <pre><code>pip install netboxlabs-diode-netbox-plugin\n</code></pre></p> </li> <li> <p>Configure NetBox Settings    Add the following to your <code>configuration.py</code>:    <pre><code>PLUGINS = [\n    \"netbox_diode_plugin\",\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_diode_plugin\": {\n        # Diode gRPC target for communication with Diode server\n        \"diode_target_override\": \"grpc://&lt;diode-server:port&gt;/diode\",\n        # NetBox username associated with changes applied via plugin\n        \"diode_username\": \"diode\",\n        # netbox-to-diode client secret from earlier step\n        \"netbox_to_diode_client_secret\": \"&lt;netbox-to-diode-secret&gt;\"\n    },\n}\n</code></pre></p> <p>Note: Replace <code>&lt;diode-server:port&gt;</code> with your Diode server address and port (default: 8080) Example: <code>grpc://diode.example.com:8080/diode</code></p> </li> <li> <p>Apply Database Migrations <pre><code>cd /opt/netbox/netbox\n./manage.py migrate netbox_diode_plugin\n</code></pre></p> </li> <li> <p>Restart NetBox Services <pre><code>sudo systemctl restart netbox netbox-rq\n</code></pre></p> </li> <li> <p>Generate Diode Client Credentials</p> <p>Note: These credentials will be used by the Orb agent to send discovery results to NetBox via Diode.</p> </li> <li> <p>Go to your NetBox instance (https://) <li>In the left-hand pane, navigate to Diode -&gt; Client Credentials</li> <li>Click on + Add a Credential</li> <li>For Client Name, enter any name and click Create</li> <li>IMPORTANT: Copy the Client ID and Client Secret and save them securely</li> <li>Click Return to List</li> <p>You have now created your Diode client credentials. These will be used as environment variables when running the Orb agent.</p>"},{"location":"netbox-extensions/diode/diode-get-started/#ingest-data-with-orb-agent","title":"Ingest Data with Orb Agent","text":"<p>Host: These steps should be performed on the host where you want to run the Orb agent for network discovery.</p> <p>Note: For the complete installation instructions, please refer to the official Orb Agent documentation.</p> <ol> <li> <p>Export Client Credentials <pre><code># Export the client credentials you generated in NetBox\nexport DIODE_CLIENT_ID=\"&lt;your-client-id&gt;\"\nexport DIODE_CLIENT_SECRET=\"&lt;your-client-secret&gt;\"\n</code></pre></p> </li> <li> <p>Create Agent Configuration File    Create an <code>agent.yaml</code> file with the following content:    <pre><code>orb:\n  config_manager:\n    active: local\n  backends:\n    network_discovery:  # Enable network discovery backend\n    common:\n      diode:\n        target: grpc://&lt;diode-server:port&gt;/diode\n        client_id: ${DIODE_CLIENT_ID}\n        client_secret: ${DIODE_CLIENT_SECRET}\n        agent_name: my_agent\n  policies:\n    network_discovery:\n      loopback_policy:\n        config:\n        scope:\n          targets: \n            - 127.0.0.1\n</code></pre></p> <p>Note: Replace <code>&lt;diode-server:port&gt;</code> with your Diode server address and port (default: 8080) Example: <code>grpc://diode.example.com:8080/diode</code></p> </li> <li> <p>Run the Agent</p> </li> </ol> <p>Using host network mode (recommended):    <pre><code>docker run --net=host \\\n  -v $(pwd):/opt/orb/ \\\n  -e DIODE_CLIENT_ID \\\n  -e DIODE_CLIENT_SECRET \\\n  netboxlabs/orb-agent:latest run -c /opt/orb/agent.yaml\n</code></pre></p> <p>Alternative using root user:    <pre><code>docker run -u root \\\n  -v $(pwd):/opt/orb/ \\\n  -e DIODE_CLIENT_ID \\\n  -e DIODE_CLIENT_SECRET \\\n  netboxlabs/orb-agent:latest run -c /opt/orb/agent.yaml\n</code></pre></p> <p>Note: The container needs sufficient permissions to send ICMP and TCP packets. This can be achieved either by: - Setting the network mode to <code>host</code> (recommended) - Running the container as root user</p> <ol> <li>Verify Agent Operation</li> <li>Check the agent logs for successful startup</li> <li>Verify data appears in NetBox</li> </ol>"},{"location":"netbox-extensions/diode/diode-get-started/#troubleshooting","title":"Troubleshooting","text":""},{"location":"netbox-extensions/diode/diode-get-started/#common-issues","title":"Common Issues","text":"<ol> <li>Connection Issues</li> <li>Verify network connectivity between Diode and NetBox:      <pre><code># From Diode server\ncurl -v https://&lt;netbox-server&gt;\n# From NetBox server\ncurl -v grpc://&lt;diode-server:port&gt;/diode\n</code></pre></li> <li>Check firewall rules:      <pre><code># Check if required ports are open\nnetstat -tulpn | grep -E '8080|443'\n</code></pre></li> <li> <p>Validate URLs and ports in configuration files:</p> <ul> <li>Diode server <code>.env</code></li> <li>NetBox <code>configuration.py</code></li> <li>Orb agent <code>agent.yaml</code></li> </ul> </li> <li> <p>Docker Issues</p> </li> <li>Check Docker service status:      <pre><code>systemctl status docker\n</code></pre></li> <li> <p>Verify Docker container logs:      <pre><code>docker compose logs\n</code></pre></p> </li> <li> <p>Permission Issues</p> </li> <li>Ensure proper file permissions:      <pre><code>ls -la /opt/diode/\nls -la /opt/netbox/\n</code></pre></li> <li>Check Docker socket permissions:      <pre><code>ls -l /var/run/docker.sock\n</code></pre></li> </ol>"},{"location":"netbox-extensions/diode/diode-get-started/#getting-help","title":"Getting Help","text":"<p>If you encounter issues:</p> <ol> <li>Search GitHub: Issues</li> <li>Find us in Slack: NetDev Community #orb</li> <li>Check the logs:</li> <li>Diode server logs: <code>docker compose logs</code></li> </ol>"},{"location":"netbox-integrations/netbox-ansible-collection/","title":"NetBox Integrations","text":""},{"location":"netbox-integrations/netbox-ansible-collection/#netbox-ansible-collection-quick-start","title":"NetBox Ansible Collection - Quick Start","text":"<p>A short guide to getting started with the Ansible Collection for Netbox. </p> <p></p> <p>The collection is available from Ansible Galaxy, and NetBox Labs and Red Hat customers can access the certified and supported collection, via Ansible Automation Hub. This doc is based on the Galaxy installation and shows how to use the collection from the command line, rather than from within Ansible Automation Hub.</p>"},{"location":"netbox-integrations/netbox-ansible-collection/#code-examples","title":"Code Examples","text":"<p>All code used in the examples below can be found in the NetBox Learning git repository, in the directory <code>netbox-ansible-collection-quick-start</code>.</p>"},{"location":"netbox-integrations/netbox-ansible-collection/#collection-overview","title":"Collection Overview","text":"<p>The NetBox Ansible project provides an Ansible collection for interacting with NetBox, the leading solution for modeling and documenting modern networks. By combining the traditional disciplines of IP address management (IPAM) and datacenter infrastructure management (DCIM) with powerful APIs and extensions, NetBox provides the ideal \"source of truth\" to power network automation.</p> <p>This Ansible collection consists of a set of modules to define the intended network state in NetBox, along with plugins to drive automation of the network using data from NetBox.</p>"},{"location":"netbox-integrations/netbox-ansible-collection/#requirements","title":"Requirements","text":"<ul> <li>You must be running one of the two most recent releases of NetBox</li> <li>A NetBox write-enabled API token when using modules or a read-only token for the <code>nb_lookup</code> and <code>nb_inventory</code> plugins.</li> <li>Python 3.10+</li> <li>Python modules:</li> <li>pytz</li> <li>pynetbox</li> <li>Ansible 2.15+</li> </ul> <p>Note</p> <p>This guide assumes you have a working NetBox installation, populated with some device data of your own. The easiest way to do this is to set up a NetBox Cloud Free Plan instance, and you can be up an running in seconds. The NetBox instance used in this example has 2 sites with some devices already added:</p> <p></p>"},{"location":"netbox-integrations/netbox-ansible-collection/#getting-started-with-the-collection","title":"Getting Started with the Collection","text":""},{"location":"netbox-integrations/netbox-ansible-collection/#installation-and-setup","title":"Installation and Setup","text":"<ol> <li>Clone the Git repo and change into the <code>netbox-ansible-collection-quick-start</code> directory:     <pre><code>git clone https://github.com/netboxlabs/netbox-learning.git\ncd netbox-learning/netbox-ansible-collection-quick-start\n</code></pre></li> <li>Create and activate a Python 3 virtual environment:     <pre><code>python3 -m venv ./venv\nsource venv/bin/activate\n</code></pre></li> <li>Install Python Modules and Ansible    <pre><code>pip install pytz\npip install pynetbox\npip install ansible\n</code></pre></li> <li>Install the NetBox Ansible Collection.</li> </ol> <p>Before using this collection, you need to install it with the Ansible Galaxy command-line tool:</p> <p><pre><code>ansible-galaxy collection install netbox.netbox\n</code></pre> 5. Set environment variables for your NetBox API token and URL of your NetBox instance:     <pre><code>export NETBOX_API=&lt;YOUR_NETBOX_URL&gt; (note - must include http:// or https://)\nexport NETBOX_TOKEN=&lt;YOUR_NETBOX_API_TOKEN&gt;\n</code></pre></p>"},{"location":"netbox-integrations/netbox-ansible-collection/#use-case-1-netbox-as-a-dynamic-inventory-source-for-ansible","title":"Use Case 1 - NetBox as a Dynamic Inventory Source for Ansible","text":"<p>The Inventory Plugin component of the collection is used to dynamically generate the inventory from NetBox to be used in Ansible playbooks.</p> <p>In the example <code>ansible.cfg</code> file we are specifying that the inventory should be sourced from the file <code>netbox_inv.yml</code>:</p> <pre><code># ansible.cfg\n\n[defaults]\ninventory = ./netbox_inv.yml\n</code></pre> <p>The plugin is highly configurable in terms of defining returned hosts and groupings etc in the inventory, so please consult the docs.</p> <p>In this case we are grouping the returned hosts by the <code>device_roles</code> and <code>sites</code> as defined in the NetBox database:</p> <pre><code> # netbox_inv.yml\n\n plugin: netbox.netbox.nb_inventory\n validate_certs: False\n group_by:\n  - device_roles\n  - sites\n</code></pre> <p>To view a graph of the inventory retrieved from NetBox, you can run the <code>ansible-inventory</code> command and use the <code>-i</code> flag to specify the <code>netbox_inv.yml</code> file as the source, followed by <code>--graph</code>:</p> <pre><code>ansible-inventory -i netbox_inv.yml --graph\n</code></pre> <p>From the returned output we can see that our NetBox instance has returned the data expected grouped the devices by <code>device_roles</code> and <code>sites</code>: <pre><code>@all:\n  |--@device_roles_access:\n  |  |--sw3\n  |  |--sw4\n  |--@device_roles_access_switch:\n  |  |--SWITCH-1\n  |--@device_roles_distribution:\n  |  |--sw1\n  |  |--sw2\n  |--@device_roles_security_appliance:\n  |  |--SEC-APP-1\n  |--@device_roles_wireless_ap:\n  |  |--AP-1\n  |--@sites_cisco_devnet:\n  |  |--sw1\n  |  |--sw2\n  |  |--sw3\n  |  |--sw4\n  |--@sites_meraki_sandbox:\n  |  |--AP-1\n  |  |--SEC-APP-1\n  |  |--SWITCH-1\n  |--@ungrouped:\n</code></pre></p> <p>To list all the devices in the inventory, use the same command, but with the <code>--list</code> suffix: <pre><code>ansible-inventory -i netbox_inv.yml --list\n</code></pre></p> <p>The output below has been shortened to show the inventory data returned for a single device, and all of this can be used in further playbooks to automate operations against the target device:</p> <pre><code>\"sw1\": {\n     \"ansible_host\": \"10.10.20.175\",\n     \"custom_fields\": {\n         \"ccc_device_id\": \"32446e0a-032b-4724-93e9-acbbab47371b\",\n         \"cisco_catalyst_center\": \"sandboxdnac.cisco.com\"\n     },\n     \"device_roles\": [\n         \"distribution\"\n     ],\n     \"device_types\": [\n         \"c9kv-uadp-8p\"\n     ],\n     \"is_virtual\": false,\n     \"local_context_data\": [\n         null\n     ],\n     \"locations\": [],\n     \"manufacturers\": [\n         \"cisco\"\n     ],\n     \"platforms\": [\n         \"ios-xe\"\n     ],\n     \"primary_ip4\": \"10.10.20.175\",\n     \"regions\": [],\n     \"serial\": \"9SB9FYAFA2O\",\n     \"services\": [],\n     \"site_groups\": [],\n     \"sites\": [\n         \"cisco-devnet\"\n     ],\n     \"status\": {\n         \"label\": \"Active\",\n         \"value\": \"active\"\n     },\n     \"tags\": []\n}\n</code></pre> <p>To run a playbook that uses the dynamic inventory, specify the inventory file when you run the playbook:</p> <pre><code>ansible-playbook -i netbox_inv.yml &lt;PLAYBOOK NAME&gt;\n</code></pre> <p>To target hosts or groups from the inventory in your playbook, reference the hosts or groups as normal in the playbook: <pre><code>---\n- name: Playbook using NetBox Inventory Plugin for Ansible\n  hosts: device_roles_distribution, device_roles_access\n</code></pre></p>"},{"location":"netbox-integrations/netbox-ansible-collection/#use-case-2-define-intended-network-state-in-netbox","title":"Use Case 2 - Define Intended Network State in NetBox","text":"<p>Define the intended state of your network in NetBox, by interacting with the NetBox database to define objects and their associated state in the following ways:</p> <ul> <li>Make sure objects exit</li> <li>Update objects if they do exist</li> <li>Remove objects if they do not not exist</li> </ul> <p>For example, to make sure a new aggregate network prefix exists: <pre><code>tasks:\n    - name: Create aggregate within NetBox with only required information\n      netbox.netbox.netbox_aggregate:\n        netbox_url: http://netbox.local\n        netbox_token: thisIsMyToken\n        data:\n          prefix: 192.168.0.0/16\n          rir: Test RIR\n        state: present\n</code></pre></p> <p>The example playbook <code>populate_netbox_ipam.yml</code> will ensure that the <code>RFC1918</code> IPv4 aggregates exist in NetBox, as well as some predefined Prefix and VLAN Roles: <pre><code># populate_netbox_ipam.yml\n\n---\n- name: PLAY 1 - Create RIRs\n  connection: local\n  hosts: localhost\n  gather_facts: False\n\n  roles:\n    - role: create_rirs\n      tags: rirs\n\n- name: PLAY 2 - Create Aggregates\n  connection: local\n  hosts: localhost\n  gather_facts: False\n\n  roles:\n    - role: create_aggregates\n      tags: aggregates\n\n- name: PLAY 3 - Create Prefix and VLAN Roles\n  connection: local\n  hosts: localhost\n  gather_facts: False\n\n  roles:\n    - role: create_prefix_and_vlan_roles\n      tags: prefix_and_roles\n</code></pre></p> <p>The playbook is modularized using <code>roles</code>, for example the file <code>roles/create_aggregates/tasks/main.yml</code> loops over the list of aggregates defined in the file <code>roles/create_aggregates/vars/main.yml</code>: <pre><code># roles/create_aggregates/tasks/main.yml\n\n---\n- name: Create Aggregates within NetBox\n  netbox.netbox.netbox_aggregate:\n    netbox_url: \"{{ lookup('ansible.builtin.env', 'NETBOX_API') }}\"\n    netbox_token: \"{{ lookup('ansible.builtin.env', 'NETBOX_TOKEN') }}\"\n    data: \"{{ aggregate }}\"\n    state: present\n  loop: \"{{ ipam_aggregates }}\"\n  loop_control:\n    loop_var: aggregate\n    label: \"{{ aggregate['prefix']}}\"\n</code></pre></p> <pre><code># roles/create_aggregates/vars/main.yml\n---\nipam_aggregates:\n\n  - prefix: 10.0.0.0/8\n    rir: RFC 1918\n\n  - prefix: 172.16.0.0/12\n    rir: RFC 1918\n\n  - prefix: 192.168.0.0/16\n    rir: RFC 1918\n</code></pre> <p>Running the playbook results in the following output:</p> <p><pre><code>ansible-playbook populate_netbox_ipam.yml\n</code></pre> <pre><code>PLAY [PLAY 1 - Create RIRs] ***********************************************************************************************************************************\n\nTASK [create_rirs : Create RIRs] ******************************************************************************************************************************\nok: [localhost] =&gt; (item=RFC 1918)\n\nPLAY [PLAY 2 - Create Aggregates] *****************************************************************************************************************************\n\nTASK [create_aggregates : Create Aggregates within NetBox] ****************************************************************************************************\nok: [localhost] =&gt; (item=10.0.0.0/8)\nok: [localhost] =&gt; (item=172.16.0.0/12)\nok: [localhost] =&gt; (item=192.168.0.0/16)\n\nPLAY [PLAY 3 - Create Prefix and VLAN Roles] ******************************************************************************************************************\n\nTASK [create_prefix_and_vlan_roles : Create Prefix and VLAN Roles within NetBox] ******************************************************************************\nok: [localhost] =&gt; (item=Branch_Data)\nok: [localhost] =&gt; (item=Branch_Voice)\nok: [localhost] =&gt; (item=Branch_WiFi)\nok: [localhost] =&gt; (item=Guest_WiFi)\nok: [localhost] =&gt; (item=Network_Management)\nok: [localhost] =&gt; (item=Point_to_Point)\n\nPLAY RECAP ****************************************************************************************************************************************************\nlocalhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n</code></pre></p>"},{"location":"netbox-integrations/netbox-ansible-collection/#use-case-3-query-and-return-elements-from-netbox","title":"Use Case 3 - Query and Return Elements from NetBox","text":"<p>Use the Lookup Plugin to query NetBox and return data to drive network automation, such as lists of devices, device configurations, prefixes and IP addresses etc.</p> <p>In the example playbook <code>lookup_site_and_device_data.yml</code> we first of all query the NetBox <code>sites</code> API endpoint and then print a list of all the sites. Then we query the <code>devices</code> API endpoint, filter on the site <code>cisco-devnet</code> and print a list of the devices at that site:</p> <pre><code># lookup_site_and_device_data.yml\n---\n- name: Lookup NetBox Site and Device Data\n  hosts: localhost\n  gather_facts: no\n\n  vars:\n    netbox_url: \"{{ lookup('ansible.builtin.env', 'NETBOX_API') }}\"\n    netbox_token: \"{{ lookup('ansible.builtin.env', 'NETBOX_TOKEN') }}\"\n\n  tasks:\n\n  - name: \"Query NetBox for all sites\"\n    set_fact:\n      sites: \"{{ query('netbox.netbox.nb_lookup', 'sites', api_endpoint=netbox_url, token=netbox_token) }}\"\n\n  - name: \"Print the list of sites\"\n    debug:\n      msg: \"{{ sites | json_query('[*].value.name') }}\"\n\n  - name: \"Query NetBox for devices at the Cisco DevNet Site\"\n    set_fact:\n      devices: \"{{ query('netbox.netbox.nb_lookup', 'devices', api_filter='site=cisco-devnet', api_endpoint=netbox_url, token=netbox_token) }}\"\n\n  - name: \"Print a list of devices at Cisco DevNet Site\"\n    debug:\n      msg: \"{{ devices | json_query('[*].value.name') }}\"\n</code></pre> <p>The playbook run results in the following output:</p> <p><pre><code>ansible-playbook lookup_site_and_device_data.yml\n</code></pre> <pre><code>PLAY [Lookup NetBox Site and Device Data] *********************************************************************************************************************\n\nTASK [Query NetBox for all sites] *****************************************************************************************************************************\nok: [localhost]\n\nTASK [Print the list of sites] ********************************************************************************************************************************\nok: [localhost] =&gt;\n  msg:\n  - Cisco DevNet\n  - Meraki Sandbox\n\nTASK [Query NetBox for devices at the Cisco DevNet Site] ******************************************************************************************************\nok: [localhost]\n\nTASK [Print a list of devices at Cisco DevNet Site] ***********************************************************************************************************\nok: [localhost] =&gt;\n  msg:\n  - sw1\n  - sw2\n  - sw3\n  - sw4\n\nPLAY RECAP ****************************************************************************************************************************************************\nlocalhost                  : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n</code></pre></p>"},{"location":"netbox-integrations/netbox-ansible-collection/#references","title":"References","text":"<ul> <li>Collection on Ansible Galaxy</li> <li>Collection on Ansible Automation Hub</li> <li>Docs for NetBox Inventory Plugin</li> <li>Docs for NetBox Lookup Plugin</li> </ul>"},{"location":"netbox-integrations/pyats/","title":"Getting Started With NetBox, PyATS and Genie","text":"<p>Learn More</p> <p>You can view an on-demand Webinar Getting Started with Network Test Automation: NetBox + pyATS hosted by NetBox Labs. </p>"},{"location":"netbox-integrations/pyats/#code-examples","title":"Code Examples","text":"<p>All code used in the examples below can be found in the NetBox Learning git repository, in the directory <code>netbox-pyats-webinar</code>.</p>"},{"location":"netbox-integrations/pyats/#set-up-and-installation","title":"Set Up and Installation","text":"<ol> <li>Clone the Git repo and change into the <code>netbox-pyats-webinar</code> directory:     <pre><code>git clone https://github.com/netboxlabs/netbox-learning.git\ncd netbox-learning/netbox-pyats-webinar\n</code></pre></li> <li>Create and activate Python 3 virtual environment:     <pre><code>python3 -m venv ./venv\nsource venv/bin/activate\n</code></pre></li> <li>Upgrade pip:     <pre><code>python3 -m pip install --upgrade pip\n</code></pre></li> <li> <p>Install PyATS: </p> <p>As per the official documentation, there are a options to perform a minimal installation (option 1) or a full installation (opton 2).  </p> <p>Option 1 Minimal install that includes the Genie library and that allows you to use the interactive testbed creation command to create your testbed files from NetBox:  <pre><code>pip install pyats[library]\npip install pyats.contrib\n</code></pre></p> <p>Option 2 Full installation that includes all packages and libraries:  <pre><code>pip install pyats[full]\n</code></pre></p> <p>Tip</p> <p>If you are using Zsh on a Mac then you need to quote the install string.</p> <pre><code>pip install \"pyats[full]\"\n</code></pre> <p>Note</p> <p>If you plan to run the example script <code>ospf_neighbor_table.py</code> then you will also need to install the <code>prettytable</code> library with <code>pip install prettytable</code> or you can simply run the command <code>pip install -r requirements.txt</code> to install this along with pyATS, Genie and the <code>contrib</code> library. </p> <p>There is also a PyATS Docker Image. This command will pull down the container if you don't have it locally and drop you into a Bash shell:  <pre><code>docker run -it ciscotestautomation/pyats:latest /bin/bash\n</code></pre></p> </li> </ol>"},{"location":"netbox-integrations/pyats/#lab-network","title":"Lab Network","text":"<p>Our lab network consists of 2 x Cisco CSR100V routers and they are documented in NetBox under the Site <code>PyATS Webinar</code> and are directly connected to each other over port <code>GigabitEthernet2</code> on the <code>192.168.1.0/30</code> subnet. They are both running OSPF, and you can find the the configuration for this in the initial_device_configs.md file: </p> <p></p> <p></p>"},{"location":"netbox-integrations/pyats/#generating-the-testbed-file-dynamically-from-netbox-inventory","title":"Generating The testbed file Dynamically from NetBox Inventory","text":"<p>Option 1 Use the <code>pyats create testbed netbox</code> command to build your testbed file. Note that where a value is prefixed with <code>os.getenv</code> or <code>%ENV</code> then these values are being pulled in from the local environment variables that you need to set with the <code>export</code> command eg. <code>export NETBOX_URL=https://example.cloud.netboxapp.com/</code>, <code>export DEF_PYATS_USER=admin</code>: </p> <pre><code>pyats create testbed netbox \\\n--output testbed.yaml \\\n--netbox-url=${NETBOX_URL} \\\n--user-token=${NETBOX_USER_TOKEN} \\\n--def_user='%ENV{DEF_PYATS_USER}' \\\n--def_pass='%ENV{DEF_PYATS_PASS}' \\\n--url_filter='site=pyats-webinar' \\\n--topology\n</code></pre> <p>In this example we are generating a testbed file called <code>testbed.yaml</code> and filtering NetBox by the site name <code>pyats-webinar</code>. When you hit enter the output will look like this: </p> <p><pre><code>Begin retrieving data from netbox...\nConfiguring testbed default credentials.\nRetrieving associated data for CSR1...\nRetrieving associated data for CSR2...\nTestbed file generated: \ntestbed.yaml \n</code></pre> Option 2 Run the <code>generate_testbed_file.py</code> Python script. Note that where a value is prefixed with <code>os.getenv</code> or <code>%ENV</code> then these values are being pulled in from the local environment variables that you need to set with the <code>export</code> command eg. <code>export NETBOX_URL=https://example.cloud.netboxapp.com/</code>, <code>export DEF_PYATS_USER=admin</code>.</p> <p>In this script we are generating a testbed file called <code>testbed.yaml</code> and filtering NetBox by the site name <code>pyats-webinar</code>, but you could just as easily filter on other fields as in the examples commented out: </p> <pre><code># Description: This script generates a testbed file based on the Netbox data\n#              using the pyATS framework. It uses the Netbox class from the\n#              pyats.contrib.creators.netbox module to create the testbed file.\n\n# Import the necessary libraries\nfrom pyats.contrib.creators.netbox import Netbox\nimport yaml\nimport os\n\n# Define Netbox URL, user token, and default credentials\nnetbox_url = os.getenv('NETBOX_URL')\nuser_token = os.getenv('NETBOX_USER_TOKEN')\ndef_user = '%ENV{DEF_PYATS_USER}'\ndef_pass = '%ENV{DEF_PYATS_PASS}'\nurl_filter = 'site=pyats-webinar'\n# url_filter = 'site_id=68'\n# url_filter = 'site=pyats-webinar&amp;os=ios-xe'\n# url_filter = 'platform=ios-xe'\n\n# Create testbed object and build data structure\nnb_testbed = Netbox(\n    netbox_url=netbox_url,\n    user_token=user_token,\n    def_user=def_user,\n    def_pass=def_pass,\n    url_filter=url_filter,\n    ssl_verify=False,\n    topology=True\n)\n\n# Generate testbed file\ntb = nb_testbed._generate()\ntb_yaml = yaml.dump(tb)\nwith open(\"testbed.yaml\", \"w\") as f:\n    f.write(tb_yaml)\n</code></pre> <p>The resulting testbed file produced by either option will look something like this, depending on your network. Note that as we included the <code>--topology</code> switch the testbed file output includes the interfaces and connections from NetBox also:  <pre><code>devices:\n  CSR1:\n    alias: CSR1\n    connections:\n      cli:\n        ip: 10.90.0.35\n        protocol: ssh\n    credentials:\n      default:\n        password: '%ENV{DEF_PYATS_PASS}'\n        username: '%ENV{DEF_PYATS_USER}'\n    os: iosxe\n    platform: iosxe\n    type: CSR1000V\n  CSR2:\n    alias: CSR2\n    connections:\n      cli:\n        ip: 10.90.0.36\n        protocol: ssh\n    credentials:\n      default:\n        password: '%ENV{DEF_PYATS_PASS}'\n        username: '%ENV{DEF_PYATS_USER}'\n    os: iosxe\n    platform: iosxe\n    type: CSR1000V\ntestbed:\n  credentials:\n    default:\n      password: '%ENV{DEF_PYATS_PASS}'\n      username: '%ENV{DEF_PYATS_USER}'\ntopology:\n  CSR1:\n    interfaces:\n      GigabitEthernet1:\n        alias: CSR1_GigabitEthernet1\n        ipv4: 10.90.0.35/27\n        type: ethernet\n      GigabitEthernet2:\n        alias: CSR1_GigabitEthernet2\n        ipv4: 192.168.1.1/30\n        link: cable_num_34\n        type: ethernet\n      GigabitEthernet3:\n        alias: CSR1_GigabitEthernet3\n        type: ethernet\n      GigabitEthernet4:\n        alias: CSR1_GigabitEthernet4\n        type: ethernet\n      GigabitEthernet5:\n        alias: CSR1_GigabitEthernet5\n        type: ethernet\n  CSR2:\n    interfaces:\n      GigabitEthernet1:\n        alias: CSR2_GigabitEthernet1\n        ipv4: 10.90.0.36/27\n        type: ethernet\n      GigabitEthernet2:\n        alias: CSR2_GigabitEthernet2\n        ipv4: 192.168.1.2/30\n        link: cable_num_34\n        type: ethernet\n      GigabitEthernet3:\n        alias: CSR2_GigabitEthernet3\n        type: ethernet\n      GigabitEthernet4:\n        alias: CSR2_GigabitEthernet4\n        type: ethernet\n      GigabitEthernet5:\n        alias: CSR2_GigabitEthernet5\n        type: ethernet\n</code></pre></p>"},{"location":"netbox-integrations/pyats/#structured-data-vs-unstructured-data","title":"Structured Data Vs Unstructured Data","text":"<p>When you run a command at the CLI of a network device, you get unstructured data back as the response, which is just a blob of text:  <pre><code>CSR1#sh ip interface brief \nInterface              IP-Address      OK? Method Status                Protocol\nGigabitEthernet1       10.0.0.15       YES manual up                    up      \nGigabitEthernet2       192.168.1.1     YES manual up                    up      \nLoopback0              1.1.1.1         YES manual up                    up  \n</code></pre></p> <p>This is great for humans, as we can read this, but a computer cannot understand this data. Also if the next version of the OS you are using makes a change to the way that the output is formatted then you will have a problem and have to re-write your scripts to handle this. This is where the Genie parser comes into play as it will parse the output into structured data. The data is then represented using key/value pairs in JSON format that can be used by a computer: </p> <pre><code>{\n  \"interface\": {\n    \"GigabitEthernet1\": {\n      \"interface_is_ok\": \"YES\",\n      \"ip_address\": \"10.0.0.15\",\n      \"method\": \"manual\",\n      \"protocol\": \"up\",\n      \"status\": \"up\"\n    },\n    \"GigabitEthernet2\": {\n      \"interface_is_ok\": \"YES\",\n      \"ip_address\": \"192.168.1.1\",\n      \"method\": \"manual\",\n      \"protocol\": \"up\",\n      \"status\": \"up\"\n    },\n    \"Loopback0\": {\n      \"interface_is_ok\": \"YES\",\n      \"ip_address\": \"1.1.1.1\",\n      \"method\": \"manual\",\n      \"protocol\": \"up\",\n      \"status\": \"up\"\n    }\n  }\n}\n</code></pre>"},{"location":"netbox-integrations/pyats/#running-your-first-tests-with-the-genie-cli","title":"Running Your First Tests With The Genie CLI","text":""},{"location":"netbox-integrations/pyats/#genie-parsing","title":"Genie Parsing","text":"<p>There are parsers available for a large number of network OS's (not just Cisco), and you can view the complete list here In this example we will run the <code>genie parse</code> command to parse the output of the <code>show ip ospf neighbor</code> command and limit it to just device <code>CSR1</code>: </p> <pre><code>genie parse 'show ip ospf neighbor' --testbed-file testbed.yaml --device CSR1\n  0%|                                                                                                                                                                | 0/1 [00:00&lt;?, ?it/s]{\n  \"interfaces\": {\n    \"GigabitEthernet2\": {\n      \"neighbors\": {\n        \"2.2.2.2\": {\n          \"address\": \"192.168.1.2\",\n          \"dead_time\": \"00:00:34\",\n          \"priority\": 1,\n          \"state\": \"FULL/DR\"\n        }\n      }\n    }\n  }\n}\n</code></pre> <p>This will output the parsed data to your terminal, but if you want to save the output just append the directory you wish to save it to with the <code>--output</code> switch. This will save both the <code>_console</code> file (the unstructured data) and the <code>_parsed</code> file (the structured data), along with the <code>connection_</code> log (the raw output of the full connection process) into the chosen directory:</p> <pre><code>genie parse 'show ip ospf neighbor' --testbed-file testbed.yaml --device CSR1 --output csr1\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:01&lt;00:00,  1.01s/it]\n+==============================================================================+\n| Genie Parse Summary for CSR1                                                 |\n+==============================================================================+\n|  Connected to CSR1                                                           |\n|  -  Log: csr1/connection_CSR1.txt                                            |\n|------------------------------------------------------------------------------|\n|  Parsed command 'show ip ospf neighbor'                                      |\n|  -  Parsed structure: csr1/CSR1_show-ip-ospf-neighbor_parsed.txt             |\n|  -  Device Console:   csr1/CSR1_show-ip-ospf-neighbor_console.txt            |\n|------------------------------------------------------------------------------|\n</code></pre>"},{"location":"netbox-integrations/pyats/#genie-learning","title":"Genie Learning","text":"<p>In this example we will run the <code>genie learn</code> command to learn all about <code>routing</code> and <code>ospf</code> for both devices in our testbed file. We will also save the output into directory called <code>pre-change</code>. Genie will automagically create directories for us if they don't already exist. </p> <p>For reference if you run the <code>genie learn all</code> command then for IOS-XE devices the list of features learned is: </p> <pre><code>acl, arp, bgp, device, dot1x, eigrp, fdb, hsrp, igmp, interface, isis, lag, lisp, lldp, mcast, mld, msdp, nd, ntp, ospf, pim, platform, prefix_list, rip, route_policy, routing, static_routing, stp, terminal, utils, vlan, vrf, vxlan, config\n</code></pre> <pre><code>genie learn routing ospf --testbed-file testbed.yaml --output pre-change  \n\nLearning '['routing', 'ospf']' on devices '['CSR1', 'CSR2']'\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:11&lt;00:00,  5.85s/it]\n+==============================================================================+\n| Genie Learn Summary for device CSR1                                          |\n+==============================================================================+\n|  Connected to CSR1                                                           |\n|  -   Log: pre-change/connection_CSR1.txt                                     |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'routing'                                                    |\n|  -  Ops structure:  pre-change/routing_iosxe_CSR1_ops.txt                    |\n|  -  Device Console: pre-change/routing_iosxe_CSR1_console.txt                |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'ospf'                                                       |\n|  -  Ops structure:  pre-change/ospf_iosxe_CSR1_ops.txt                       |\n|  -  Device Console: pre-change/ospf_iosxe_CSR1_console.txt                   |\n|==============================================================================|\n\n\n+==============================================================================+\n| Genie Learn Summary for device CSR2                                          |\n+==============================================================================+\n|  Connected to CSR2                                                           |\n|  -   Log: pre-change/connection_CSR2.txt                                     |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'routing'                                                    |\n|  -  Ops structure:  pre-change/routing_iosxe_CSR2_ops.txt                    |\n|  -  Device Console: pre-change/routing_iosxe_CSR2_console.txt                |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'ospf'                                                       |\n|  -  Ops structure:  pre-change/ospf_iosxe_CSR2_ops.txt                       |\n|  -  Device Console: pre-change/ospf_iosxe_CSR2_console.txt                   |\n|==============================================================================|\n</code></pre>"},{"location":"netbox-integrations/pyats/#making-a-change-to-the-network","title":"Making a Change to The Network","text":"<p>Let's make a small change to the <code>CSR2</code> router in our test network, and remove the <code>network 2.2.2.2 0.0.0.0 area 0</code> statement from the OSPF configuration: </p> <pre><code>CSR2#conf t\nEnter configuration commands, one per line.  End with CNTL/Z.\nCSR2(config)#router ospf 1\nCSR2(config-router)#no network 2.2.2.2 0.0.0.0 area 0\n</code></pre> <p>Next lets re-learn <code>routing</code> and <code>ospf</code> for both devices in our testbed file. We will also save the output into directory called <code>post-change</code>: </p> <pre><code>genie learn routing ospf --testbed-file testbed.yaml --output post-change                  \n\nLearning '['routing', 'ospf']' on devices '['CSR1', 'CSR2']'\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:11&lt;00:00,  5.84s/it]\n+==============================================================================+\n| Genie Learn Summary for device CSR1                                          |\n+==============================================================================+\n|  Connected to CSR1                                                           |\n|  -   Log: post-change/connection_CSR1.txt                                    |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'routing'                                                    |\n|  -  Ops structure:  post-change/routing_iosxe_CSR1_ops.txt                   |\n|  -  Device Console: post-change/routing_iosxe_CSR1_console.txt               |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'ospf'                                                       |\n|  -  Ops structure:  post-change/ospf_iosxe_CSR1_ops.txt                      |\n|  -  Device Console: post-change/ospf_iosxe_CSR1_console.txt                  |\n|==============================================================================|\n\n\n+==============================================================================+\n| Genie Learn Summary for device CSR2                                          |\n+==============================================================================+\n|  Connected to CSR2                                                           |\n|  -   Log: post-change/connection_CSR2.txt                                    |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'routing'                                                    |\n|  -  Ops structure:  post-change/routing_iosxe_CSR2_ops.txt                   |\n|  -  Device Console: post-change/routing_iosxe_CSR2_console.txt               |\n|------------------------------------------------------------------------------|\n|  Learnt feature 'ospf'                                                       |\n|  -  Ops structure:  post-change/ospf_iosxe_CSR2_ops.txt                      |\n|  -  Device Console: post-change/ospf_iosxe_CSR2_console.txt                  |\n|==============================================================================|\n</code></pre>"},{"location":"netbox-integrations/pyats/#genie-diff","title":"Genie Diff","text":"<p>Now let's use the <code>genie diff</code> command to tell us what changed in our network, and we will store the output in a directory called <code>routing-diff</code>: </p> <pre><code>genie diff pre-change post-change --output diff \n1it [00:00, 333.44it/s]\n+==============================================================================+\n| Genie Diff Summary between directories pre-change/ and post-change/          |\n+==============================================================================+\n|  File: routing_iosxe_CSR2_ops.txt                                            |\n|   - Identical                                                                |\n|------------------------------------------------------------------------------|\n|  File: ospf_iosxe_CSR1_ops.txt                                               |\n|   - Identical                                                                |\n|------------------------------------------------------------------------------|\n|  File: routing_iosxe_CSR1_ops.txt                                            |\n|   - Diff can be found at diff/diff_routing_iosxe_CSR1_ops.txt                |\n|------------------------------------------------------------------------------|\n|  File: ospf_iosxe_CSR2_ops.txt                                               |\n|   - Diff can be found at diff/diff_ospf_iosxe_CSR2_ops.txt                   |\n|------------------------------------------------------------------------------|\n</code></pre> <p>There are differences in the outputs of both the <code>routing_iosxe_CSR1_ops.txt</code> and <code>ospf_iosxe_CSR2_ops.txt</code> files and we can view the contents of those files to see what has changed: </p> <p><pre><code>cat diff/diff_routing_iosxe_CSR1_ops.txt \n--- pre-change/routing_iosxe_CSR1_ops.txt\n+++ post-change/routing_iosxe_CSR1_ops.txt\n info:\n  vrf:\n   default:\n    address_family:\n     ipv4:\n      routes:\n-      2.2.2.2/32:\n-       active: True\n-       metric: 2\n-       next_hop:\n-        next_hop_list:\n-         1:\n-          index: 1\n-          next_hop: 192.168.1.2\n-          outgoing_interface: GigabitEthernet2\n-          updated: 03:32:43\n-       route: 2.2.2.2/32\n-       route_preference: 110\n-       source_protocol: ospf\n-       source_protocol_codes: O%  \n</code></pre> <pre><code>cat diff/diff_ospf_iosxe_CSR2_ops.txt   \n--- pre-change/ospf_iosxe_CSR2_ops.txt\n+++ post-change/ospf_iosxe_CSR2_ops.txt\n info:\n  vrf:\n   default:\n    address_family:\n     ipv4:\n      instance:\n       1:\n        areas:\n         0.0.0.0:\n          interfaces:\n-          Loopback0:\n-           bfd:\n-            enable: False\n-           cost: 1\n-           demand_circuit: False\n-           enable: True\n-           interface_type: loopback\n-           name: Loopback0% \n</code></pre></p> <p>As we can see, CSR1 has lost the the route to the <code>2.2.2.2/32</code> prefix and on CSR2 the interface <code>lo0</code> has been removed from <code>OSPF area 0</code>.</p>"},{"location":"netbox-integrations/pyats/#pyats-and-python","title":"pyATS and Python","text":"<p>As you would expect, it is also very easy to work with pyATS and python. Type <code>python</code> in your terminal, and then start by importing the <code>load</code> module from the <code>genie.testbed</code> library and load the testbed file: </p> <p><pre><code>from genie.testbed import load\ntestbed = load('testbed.yaml') \n</code></pre> Then connect to the CSR1 device:  <pre><code>device = testbed.devices['CSR1']\ndevice.connect()\n</code></pre> Then parse the command <code>show ip interface brief</code> and print the output nicely using the <code>pprint</code> library: <pre><code>parsed_data = device.parse('show ip interface brief')\nfrom pprint import pprint \npprint(parsed_data)\n{'interface': {'GigabitEthernet1': {'interface_is_ok': 'YES',\n                                    'ip_address': '10.0.0.15',\n                                    'method': 'manual',\n                                    'protocol': 'up',\n                                    'status': 'up'},\n               'GigabitEthernet2': {'interface_is_ok': 'YES',\n                                    'ip_address': '192.168.1.1',\n                                    'method': 'manual',\n                                    'protocol': 'up',\n                                    'status': 'up'},\n               'Loopback0': {'interface_is_ok': 'YES',\n                             'ip_address': '1.1.1.1',\n                             'method': 'manual',\n                             'protocol': 'up',\n                             'status': 'up'}}}\n</code></pre> Lastly, close the connection to the device: <pre><code>device.disconnect()\n</code></pre></p> <p>As you can imagine, the possibilities are endless and you can see an example of a script that gets and prints OSPF Neighbor table for a given device in the file <code>ospf_neighbor_table.py</code>. Run the script and you will get a nicely formatted table of the OSPF neighbors for CRS1:</p> <pre><code>python ospf_neighbor_table.py\n\nOSPF Neighbor Table for CSR1\n+------------------+----------+-------------+---------+\n|    Interface     | Neighbor |   Address   |  State  |\n+------------------+----------+-------------+---------+\n| GigabitEthernet2 | 2.2.2.2  | 192.168.1.2 | FULL/DR |\n+------------------+----------+-------------+---------+\n</code></pre>"},{"location":"netbox-integrations/pyats/#pyats-test-scripts-and-jobs","title":"pyATS Test Scripts and Jobs","text":"<p>So far we have only scratched the surface of what you can do with pyATS, and test scripts will take your automated testing to the next level. Test scripts are written and executed with the AEtest Python package</p> <p>I have included an example test script called <code>connectivity_check.py</code>, which is adapted from the example script in the official documentation. This script tests that both CSR1 and CSR2 can ping each other's loopback addresses. Test scripts are structured Python files that contain/describe the testing you want to do. A clean, elegant test script is scalable, and generates easy-to-read test results and logs.</p> <p>To run the example test script, you must also specify the testbed file that is to be used, for example: </p> <pre><code>python connectivity_check.py --testbed testbed.yaml\n</code></pre> <p>Once the test script has been run then the results are displayed in the output: </p> <pre><code>2024-04-23T11:50:16: %AETEST-INFO: +------------------------------------------------------------------------------+\n2024-04-23T11:50:16: %AETEST-INFO: |                               Detailed Results                               |\n2024-04-23T11:50:16: %AETEST-INFO: +------------------------------------------------------------------------------+\n2024-04-23T11:50:16: %AETEST-INFO:  SECTIONS/TESTCASES                                                      RESULT   \n2024-04-23T11:50:16: %AETEST-INFO: --------------------------------------------------------------------------------\n2024-04-23T11:50:16: %AETEST-INFO: .\n2024-04-23T11:50:16: %AETEST-INFO: |-- common_setup                                                          PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   |-- check_topology                                                    PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   `-- establish_connections                                             PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |       |-- Step 1: Connecting to CSR1                                    PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |       `-- Step 2: Connecting to CSR2                                    PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |-- PingTestcase[device=device1]                                          PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   |-- ping[destination=192.168.1.1]                                     PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   `-- ping[destination=192.168.1.2]                                     PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |-- PingTestcase[device=device2]                                          PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   |-- ping[destination=192.168.1.1]                                     PASSED\n2024-04-23T11:50:16: %AETEST-INFO: |   `-- ping[destination=192.168.1.2]                                     PASSED\n2024-04-23T11:50:16: %AETEST-INFO: `-- common_cleanup                                                        PASSED\n2024-04-23T11:50:16: %AETEST-INFO:     `-- disconnect                                                        PASSED\n2024-04-23T11:50:16: %AETEST-INFO:         |-- Step 1: Disconnecting from CSR1                               PASSED\n2024-04-23T11:50:16: %AETEST-INFO:         `-- Step 2: Disconnecting from CSR2                               PASSED\n2024-04-23T11:50:16: %AETEST-INFO: +------------------------------------------------------------------------------+\n2024-04-23T11:50:16: %AETEST-INFO: |                                   Summary                                    |\n2024-04-23T11:50:16: %AETEST-INFO: +------------------------------------------------------------------------------+\n2024-04-23T11:50:16: %AETEST-INFO:  Number of ABORTED                                                            0 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of BLOCKED                                                            0 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of ERRORED                                                            0 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of FAILED                                                             0 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of PASSED                                                             4 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of PASSX                                                              0 \n2024-04-23T11:50:16: %AETEST-INFO:  Number of SKIPPED                                                            0 \n2024-04-23T11:50:16: %AETEST-INFO:  Total Number                                                                 4 \n2024-04-23T11:50:16: %AETEST-INFO:  Success Rate                                                            100.0% \n2024-04-23T11:50:16: %AETEST-INFO: --------------------------------------------------------------------------------\n</code></pre> <p>pyATS Jobs take test scripts to another level and allow the execution of test scripts as tasks. This is beyond the scope of this document but you can read all about pyATS jobs in the official docs</p>"},{"location":"netbox-integrations/servicenow/","title":"Overview","text":""},{"location":"netbox-integrations/servicenow/#servicenow-integration-overview","title":"ServiceNow Integration Overview","text":"<p>The NetBox ServiceNow Integration provides API and CMDB integration capabilities between ServiceNow and NetBox instances. This application enables bidirectional synchronization of infrastructure data, allowing organizations to maintain consistent configuration management data across both platforms.</p> <p>ServiceNow Compatibility: Certified for Washington DC and Xanadu versions.</p>"},{"location":"netbox-integrations/servicenow/#key-features","title":"Key Features","text":"<ul> <li>Bidirectional Synchronization: Synchronize configuration items between ServiceNow CMDB and NetBox</li> <li>Automated Data Import: Import NetBox objects (devices, device types, sites, locations, etc.) into ServiceNow through import sets</li> <li>Real-time Integration: API-based integration for real-time data exchange</li> <li>Data Validation: Built-in validation and correlation mechanisms to ensure data integrity</li> <li>Extensible Architecture: Modular design using ServiceNow Flow Designer and Integration Hub actions</li> <li>Security Integration: Role-based access controls and secure API communication</li> </ul>"},{"location":"netbox-integrations/servicenow/#netbox-to-servicenow-object-mapping","title":"NetBox to ServiceNow Object Mapping","text":"<p>The following table shows the supported NetBox objects and their corresponding destinations in ServiceNow:</p> NetBox Object ServiceNow Destination Mapping Details Device Configuration Item (cmdb_ci) Mapped to appropriate CI class based on device role and type Device Type Hardware Product Model (cmdb_hardware_product_model) Device specifications, manufacturer, and model information Site Location (cmn_location) Physical site information and geographical data Region Location (cmn_location) Geographic regions as top-level locations Manufacturer Company (core_company) Vendor/manufacturer information Tenant Department (cmn_department) Organizational units and client information Device Role CI Classification Maps to ServiceNow CI classification and categories"},{"location":"netbox-integrations/servicenow/#business-value","title":"Business Value","text":"<ul> <li>Centralized configuration management across multiple platforms</li> <li>Reduced manual data entry and associated errors</li> <li>Improved visibility into infrastructure assets</li> <li>Enhanced change management processes</li> <li>Streamlined compliance reporting</li> </ul>"},{"location":"netbox-integrations/servicenow/#technical-architecture","title":"Technical Architecture","text":"<p>The application is built as a ServiceNow scoped application (<code>x_990381_netbox_cl</code>) and includes:</p> <ul> <li>Custom tables for NetBox data import staging</li> <li>Extended ServiceNow CMDB tables with NetBox-specific fields</li> <li>Flow Designer flows for automated synchronization processes</li> <li>Integration Hub spokes for NetBox API connectivity</li> <li>Business rules and UI actions for user interaction</li> </ul>"},{"location":"netbox-integrations/servicenow/#obtaining-the-application","title":"Obtaining the Application","text":"<p>The NetBox CMDB Integration application is currently distributed as XML update sets. To obtain the application:</p>"},{"location":"netbox-integrations/servicenow/#prerequisites","title":"Prerequisites","text":"<p>Before requesting the application, ensure your organization meets the following requirements:</p> <ul> <li>ServiceNow Integration Purchased: Purchased the ServiceNow Integration from NetBox Labs</li> <li>ServiceNow Instance: Active ServiceNow instance with appropriate licensing</li> <li>NetBox Environment: Operational NetBox instance with API access</li> <li>Administrator Access: ServiceNow administrator privileges for application installation</li> <li>ServiceNow MID Server (NetBox Enterprise Only): MID server installed on-prem to handle communication between ServiceNow and NetBox Enterprise</li> </ul>"},{"location":"netbox-integrations/servicenow/#obtaining-access","title":"Obtaining Access","text":"<ol> <li>Contact NetBox Labs: Reach out to your NetBox Labs support team or account manager</li> <li>Request Access: Submit a request for the NetBox CMDB Integration application for ServiceNow</li> <li>Receive Update Set: NetBox Labs will provide you with the XML update set file(s)</li> </ol>"},{"location":"netbox-integrations/servicenow/#version-information","title":"Version Information","text":"<ul> <li>Application Version: 1.4</li> <li>Dependencies: </li> <li>System Import Sets</li> <li>Model Management</li> <li>Configuration Management (CMDB)</li> <li>System (apps/system_user)</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-faq/","title":"FAQ and Troubleshooting","text":""},{"location":"netbox-integrations/servicenow/snow-faq/#installation-issues","title":"Installation Issues","text":""},{"location":"netbox-integrations/servicenow/snow-faq/#update-set-installation-wont-get-past-the-preview-phase","title":"Update set installation won't get past the Preview phase","text":"<p>Common Causes: - Missing Dependencies: Ensure all required plugins are installed (IntegrationHub Starter Pack, Model Management, System Import Sets) - Version Incompatibility: Verify the update set version matches your ServiceNow instance version - Insufficient Privileges: Confirm you have admin privileges on the ServiceNow instance - Conflicting Customizations: Local customizations may conflict with the application</p> <p>Resolution Steps: 1. Check the preview log for specific error messages 2. Verify all dependencies are installed and activated 3. Review any conflicts shown in the preview results 4. Contact NetBox Labs support if errors persist</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#what-can-i-check-to-see-that-installation-went-well","title":"What can I check to see that installation went well?","text":"<p>Verification Checklist: 1. Application Menu: Verify \"NetBox\" application appears in the application navigator 2. Tables Created: Check that new tables are present:    - <code>x_990381_netbox_cl_netbox_parameters</code>    - <code>x_990381_netbox_cl_devices_import_set</code>    - <code>x_990381_netbox_cl_device_types_import_set</code>    - <code>x_990381_netbox_cl_netbox_sites_import</code> 3. Extended Fields: Verify NetBox fields are added to existing tables:    - <code>cmdb_ci.x_990381_netbox_cl_netbox_correlation_id</code>    - <code>cmn_location.x_990381_netbox_cl_netbox_synchronize</code> 4. Guided Setup: Access All &gt; NetBox &gt; Configuration &gt; Guided Setup successfully 5. No Critical Errors: Check system logs for any critical errors during installation</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#what-new-tables-are-included-with-the-application","title":"What new tables are included with the application?","text":"<p>Import Set Tables: - <code>x_990381_netbox_cl_devices_import_set</code> - NetBox devices staging - <code>x_990381_netbox_cl_device_types_import_set</code> - NetBox device types staging - <code>x_990381_netbox_cl_netbox_sites_import</code> - NetBox sites staging - <code>x_990381_netbox_cl_netbox_regions_import</code> - NetBox regions staging - <code>x_990381_netbox_cl_netbox_clients_import</code> - NetBox tenants/clients staging - <code>x_990381_netbox_cl_netbox_departments_imports</code> - NetBox departments staging - <code>x_990381_netbox_cl_netbox_manufacturers_import</code> - NetBox manufacturers staging</p> <p>Configuration Tables: - <code>x_990381_netbox_cl_netbox_parameters</code> - Application configuration parameters - <code>x_990381_netbox_cl_netbox_notification_queue</code> - NetBox notification queue</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#under-which-license-should-i-subscribe-the-new-tables","title":"Under which license should I subscribe the new tables?","text":"<p>Licensing Guidance: - Import Set Tables: These are typically covered under the base ServiceNow platform license as they are temporary staging tables - Configuration Tables: These tables would usually be licensed under the ITSM allotment, but can be included wherever some allotments remain - Extended Fields: No additional licensing required as they extend existing licensed tables</p> <p>Recommendation: Consult with your ServiceNow account manager for specific licensing questions, as requirements may vary based on your ServiceNow contract and usage.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#guided-setup-issues","title":"Guided Setup Issues","text":""},{"location":"netbox-integrations/servicenow/snow-faq/#im-missing-some-plugins-and-dont-have-a-license-for-them","title":"I'm missing some plugins and don't have a license for them","text":"<p>Required vs. Recommended Plugins: - Essential Plugins (Required):   - IntegrationHub Starter Pack   - System Import Sets   - Model Management - Recommended Plugins (Optional):   - Additional IntegrationHub spokes for enhanced functionality</p> <p>Resolution Options: 1. Contact ServiceNow: Request licensing for required plugins through your ServiceNow account manager 2. PDI Users: Activate plugins through the PDI configuration screen 3. Alternative Approach: Some functionality may be limited without optional plugins, but core integration will still work</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#whats-the-purpose-of-manually-creating-an-https-connection-record","title":"What's the purpose of manually creating an HTTP(s) connection record?","text":"<p>Purpose and Importance: - Application package: This record cannot be packaged with the NetBox CMDB Integration scoped application and must therefore be created manually during the setup process - API Communication: Establishes the connection between ServiceNow and your NetBox instance - Authentication: Stores connection parameters and credential references - MID Server Support: Configures routing through MID servers if required - Standardization: Uses ServiceNow's standard HTTP connection framework for reliability</p> <p>Key Requirements: - Name: Must be exactly \"NetBox API\" (serves as a key for the application) - Connection Alias: Must be <code>x_990381_netbox_cl.NetBox_API</code> - URL Format: Must not include trailing slash</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#both-our-netbox-and-servicenow-instances-are-in-the-cloud-but-we-have-a-mid-server-on-premises-should-i-configure-it-in-step-21-or-22-of-the-guided-setup","title":"Both our NetBox and ServiceNow instances are in the cloud but we have a MID server on premises, should I configure it in step 2.1 or 2.2 of the guided setup?","text":"<p>Recommendation: Configure in Step 2.1 (Create the HTTP(s) connection record)</p> <p>Reasoning: - If both instances are in the cloud, direct communication is typically possible - MID server configuration should only be used if network policies require it - Step 2.2 is for optional modifications after initial setup</p> <p>Decision Factors: - Network Policies: Check if your organization requires all API traffic to route through the MID server - Security Requirements: Some organizations mandate MID server usage for all external connections - Performance: Direct cloud-to-cloud communication is typically faster</p> <p>Testing Approach: Try without MID server first, then add it in Step 2.2 if connection tests fail.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#the-connection-test-keeps-failing-how-do-i-troubleshoot-connections","title":"The connection test keeps failing, how do I troubleshoot connections?","text":"<p>Systematic Troubleshooting:</p> <ol> <li>Verify Basic Connectivity</li> <li>Check for firewall restrictions between instances</li> <li> <p>Verify DNS resolution of NetBox hostname</p> </li> <li> <p>Check API Token Format</p> </li> <li>Ensure API token is exactly 32 hexadecimal characters</li> <li>Verify token is active in NetBox</li> <li> <p>Test token manually using curl or Postman</p> </li> <li> <p>Validate Connection Record</p> </li> <li>Confirm connection name is exactly \"NetBox API\"</li> <li>Verify URL has no trailing slash</li> <li> <p>Check credential association is correct</p> </li> <li> <p>Review Network Configuration</p> </li> <li>Check MID server configuration if applicable</li> <li>Verify proxy settings if required</li> <li> <p>Test from ServiceNow's network diagnostic tools</p> </li> <li> <p>Check Logs</p> </li> <li>Review ServiceNow system logs for detailed error messages</li> <li>Check NetBox logs for incoming connection attempts</li> <li>Look for authentication or authorization errors</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-faq/#application-parameters","title":"Application Parameters","text":""},{"location":"netbox-integrations/servicenow/snow-faq/#what-are-the-important-application-parameters-to-know-about-initially","title":"What are the important Application parameters to know about initially?","text":"<p>Critical Parameters for Initial Setup:</p> Parameter Purpose Default Value NetBox Log Level Controls application logging verbosity Medium API user in NetBox Username for ServiceNow\u2192NetBox API calls servicenow_integration API user in ServiceNow Username for NetBox\u2192ServiceNow API calls netbox_integration Import [Object Types] Enable/disable synchronization from NetBox to ServiceNow (import direction) for specific objects false Export [Object Types] Enable/disable synchronization from ServiceNow to NetBox (export direction) for specific objects false <p>Navigation: Go to All &gt; NetBox &gt; Configuration &gt; Parameters to view and modify these settings.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#what-are-the-synchronize-and-sync-direction-parameters-used-for","title":"What are the Synchronize and Sync direction parameters used for?","text":"<p>Synchronize Parameters (Boolean - true/false): - Purpose: Not used</p> <p>Sync Direction Parameters (String values): - Purpose: Not used</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#how-can-i-tell-the-application-to-increase-the-logging-level","title":"How can I tell the application to increase the logging level?","text":"<p>Steps to Increase Logging:</p> <ol> <li>Navigate to Parameters</li> <li>Go to All &gt; NetBox &gt; Configuration &gt; Parameters</li> <li> <p>Find the \"NetBox Log Level\" parameter</p> </li> <li> <p>Available Log Levels (case insensitive):</p> </li> <li>None: No logging</li> <li>Low: Basic operational messages</li> <li>Medium: Moderate detail including warnings (default)</li> <li> <p>High: Detailed debug information</p> </li> <li> <p>Change Log Level</p> </li> <li>Edit the \"NetBox Log Level\" parameter</li> <li>Set value to \"High\" for maximum detail</li> <li> <p>Save the parameter</p> </li> <li> <p>View Logs</p> </li> <li>Check All &gt; NetBox &gt; Maintenance &gt; NetBox Logs for NetBox-related entries</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-faq/#what-are-the-netbox-tenant-group-id-parameters-used-for","title":"What are the NetBox Tenant Group ID parameters used for?","text":"<p>Purpose: These parameters map NetBox tenant groups to ServiceNow organizational structures.</p> <p>Key Parameters: - NetBox Tenant Group ID for Customers: Maps NetBox tenants to ServiceNow customer companies - NetBox Tenant Group ID for Departments: Maps NetBox tenants to ServiceNow departments</p> <p>Usage: - Import: Only tenants belonging to specified tenant groups are imported into Companies or Departments tables - Export: ServiceNow records are assigned to these tenant groups in NetBox - Format: Integer value representing the NetBox tenant group ID</p> <p>Configuration: Set these during guided setup or modify in the Parameters table.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#why-do-some-parameters-have-a-value-of-not-used","title":"Why do some parameters have a value of \"Not used\"?","text":"<p>Explanation: Parameters with \"Not used\" values are placeholders for future functionality.</p> <p>Examples: - Role ID parameters for specific CI classes (Server, IP Switch, Virtualization Server) - Features planned for future releases but not yet implemented</p> <p>Current Behavior: - These parameters are ignored by the current application logic - \"Role ID - Generic\" is used instead for all device types - No action required from users</p> <p>Future Updates: These parameters will become functional in future application releases.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#why-not-use-the-sys_properties-table-instead-of-a-custom-table-for-parameters","title":"Why not use the sys_properties table instead of a custom table for parameters?","text":"<p>Design Rationale:</p> <p>Advantages of Custom Table: - Scoped Isolation: Parameters are contained within the application scope - Enhanced Metadata: Supports detailed descriptions and ordering - Guided Setup Integration: Easier integration with setup wizards - Backup/Restore: Parameters are included in application update sets - Security: Scoped access controls</p> <p>Limitations of sys_properties: - Global scope could cause conflicts - Limited metadata support - More complex guided setup integration - Potential interference with other applications</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#what-is-the-nbk-parameter-for","title":"What is the nbk parameter for?","text":"<p>Purpose: The <code>nbk</code> parameter is a temporary administrative credential used during the guided setup process.</p> <p>Details: - Temporary Nature: Created during guided setup and automatically deleted afterward - Elevated Privileges: Provides admin-level access to NetBox for configuration - Security: Ensures only low-privilege accounts remain after setup completion - Usage: Enables ServiceNow to configure NetBox settings during initial setup</p> <p>Important: This parameter should not exist after guided setup completion. If it persists, it may indicate an incomplete setup process. If you think the setup has concluded normally, you can and should delete the parameter from the table.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#operations","title":"Operations","text":""},{"location":"netbox-integrations/servicenow/snow-faq/#data-is-not-getting-synchronized-between-servicenow-and-netbox","title":"Data is not getting synchronized between ServiceNow and NetBox","text":"<p>Troubleshooting Steps:</p> <ol> <li>Check Synchronization Parameters</li> <li>Verify \"Export [Object]\" parameters are set to <code>true</code></li> <li> <p>Check that specific records have \"NetBox Synchronize\" field set to <code>true</code></p> </li> <li> <p>Verify Connection Health</p> </li> <li>Test API connectivity in both directions by navigating to All &gt;`NetBox &gt; Maintenance &gt; Test connections</li> <li>Check credential validity and expiration</li> <li> <p>Review HTTP connection record configuration</p> </li> <li> <p>Review Flow Execution</p> </li> <li>Check All &gt; Process Automation &gt; Flow Designer &gt; Executions</li> <li>Look for failed or stuck flow executions</li> <li>Review error messages in execution logs</li> <li> <p>Increase NetBox Log Level parameter if logs are not verbose enough</p> </li> <li> <p>Check Import Set Processing</p> </li> <li>Navigate to All &gt; System Import Sets &gt; Import Sets</li> <li>Verify import sets are being created and processed</li> <li> <p>Check for transformation errors</p> </li> <li> <p>Check Data Sources</p> </li> <li>Navigate to All &gt; NetBox &gt; Configuration &gt; Data Sources</li> <li>Verify that data sources don't contain more than one attachment</li> <li> <p>Verify that the NetBox Buffer data source is being gradually emptied over time</p> </li> <li> <p>Validate Data Requirements</p> </li> <li>Ensure required fields are populated</li> <li>Check for data validation failures</li> <li>Verify correlation IDs are properly set</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-faq/#data-is-not-getting-synchronized-between-netbox-and-servicenow","title":"Data is not getting synchronized between NetBox and ServiceNow","text":"<p>Specific NetBox\u2192ServiceNow Issues:</p> <ol> <li>Verify Connection Health</li> <li>Test API connectivity in both directions by navigating to All &gt;`NetBox &gt; Maintenance &gt; Test connections</li> <li>Check credential validity and expiration</li> <li> <p>Review HTTP connection record configuration</p> </li> <li> <p>Webhook Configuration</p> </li> <li>Verify NetBox webhooks are properly configured</li> <li>Check webhook URL points to correct ServiceNow instance</li> <li> <p>Confirm webhook authentication credentials</p> </li> <li> <p>NetBox Event Rules</p> </li> <li>Ensure event rules are active in NetBox</li> <li>Verify event rules trigger on appropriate object changes</li> <li> <p>Check event rule conditions and actions</p> </li> <li> <p>ServiceNow Inbound Processing</p> </li> <li>Check All &gt; System Web Services &gt; Inbound &gt; REST Messages</li> <li>Review inbound API call logs</li> <li> <p>Verify authentication is successful</p> </li> <li> <p>Import Processing</p> </li> <li>Check import set creation from NetBox data</li> <li>Review transformation map execution</li> <li>Verify target table updates</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-faq/#how-do-i-pause-synchronization-between-systems-one-way-or-another","title":"How do I pause synchronization between systems, one way or another?","text":"<p>Temporary Pause Options:</p> <p>Option 1: Disable Synchronization Parameters - Navigate to All &gt; NetBox &gt; Configuration &gt; Parameters - Set \"Import [Object]\" and \"Export [Object]\" parameters to <code>false</code> for affected object types - This stops all synchronization for those objects</p> <p>Option 2: Record-Level Control - Set \"NetBox Synchronize\" field to <code>false</code> on specific records - This provides granular control over individual items</p> <p>Option 3: Connection Disruption (Emergency only) - Modify HTTP connection record to invalid URL - Remove or invalidate API credentials - Warning: This may cause errors in logs</p> <p>Resuming Synchronization: - Reverse the changes made during pause - Verify connection tests pass - Monitor initial synchronization for any issues</p> <p>Best Practice: Use Option 1 (parameter-based) for planned maintenance, as it's the cleanest approach and doesn't generate error messages.</p>"},{"location":"netbox-integrations/servicenow/snow-faq/#im-getting-duplicate-records-in-servicenow-or-netbox","title":"I'm getting duplicate records in ServiceNow or NetBox","text":"<p>Duplicate records can occur during synchronization due to various factors such as data inconsistencies or identification rule challenges.</p> <p>Mitigation Steps:</p> <ol> <li>Review Correlation IDs</li> <li>Check that NetBox Correlation ID fields are properly populated</li> <li> <p>Verify correlation IDs are unique and consistent between systems</p> </li> <li> <p>Manual Cleanup</p> </li> <li>Identify duplicate records</li> <li>Manually merge or delete duplicates as appropriate</li> <li>Document patterns for NetBox Labs support</li> </ol> <p>Future Improvements: NetBox Labs is developing enhanced IRE rules and automated deduplication capabilities that will be included in future releases to minimize this issue.</p>"},{"location":"netbox-integrations/servicenow/snow-installation/","title":"Installation and Setup","text":""},{"location":"netbox-integrations/servicenow/snow-installation/#before-starting","title":"Before Starting","text":"<p>Before you start the installation, ensure the following requirements are met:</p> <ul> <li>Administrative Privileges: You must be logged in with admin privileges on both NetBox and ServiceNow instances</li> <li>ServiceNow Version: Washington DC or Xanadu (certified versions)</li> <li>IntegrationHub License: Your ServiceNow instance must be licensed for IntegrationHub Starter Pack for proper integration functionality</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-installation/#uploading-and-committing-the-application","title":"Uploading and Committing the Application","text":"<p>Follow these steps to install the NetBox ServiceNow Integration application in your ServiceNow instance:</p> <ol> <li>Navigate to Retrieved Update Sets</li> <li> <p>Go to All &gt; System Update Sets &gt; Retrieved Update Sets</p> </li> <li> <p>Import the Update Set</p> </li> <li>Navigate to the Related Links section at the bottom of the list</li> <li>Click on Import Update Set From XML</li> <li>Select the NetBox CMDB Integration application file and click Upload</li> <li> <p>\u23f1\ufe0f This operation may take several minutes</p> </li> <li> <p>Preview the Update Set</p> </li> <li>Once the file has uploaded, click on the Preview button</li> <li>\u23f1\ufe0f This operation may take several minutes</li> <li> <p>Review and skip any conflicts</p> </li> <li> <p>Commit the Update Set</p> </li> <li>After the preview is complete, click the Commit button</li> <li> <p>\u23f1\ufe0f This operation may take several minutes</p> </li> <li> <p>Handle Any Errors</p> </li> <li>If any errors occur during commit, check the Release Notes to determine which errors can safely be ignored</li> <li>Document any persistent errors for support escalation if needed</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#configuration-using-guided-setup","title":"Configuration Using Guided Setup","text":"<p>After successful installation, use the built-in Guided Setup to configure the application:</p>"},{"location":"netbox-integrations/servicenow/snow-installation/#accessing-the-guided-setup","title":"Accessing the Guided Setup","text":"<ol> <li>Navigate to Guided Setup</li> <li>Go to All &gt; NetBox &gt; Configuration &gt; Guided Setup</li> <li>Review the Pre-checklist and fulfill any outstanding requirements</li> <li>Click Get Started when ready</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#phase-1-plugins","title":"Phase 1: Plugins","text":"<p>The guided setup begins with ensuring required plugins are installed:</p>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-11-install-basic-plugins","title":"Step 1.1: Install Basic Plugins","text":"<ul> <li>Install essential plugins required for basic functionality</li> <li>These plugins are mandatory for the integration to work</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-12-install-recommended-plugins","title":"Step 1.2: Install Recommended Plugins","text":"<ul> <li>Install additional plugins that enhance functionality</li> <li>These plugins are recommended but not strictly required</li> </ul> <p>\ud83d\udcdd Note: Plugin installation runs in the background. You don't need to wait for completion before proceeding to the next phase.</p>"},{"location":"netbox-integrations/servicenow/snow-installation/#phase-2-post-installation-setup","title":"Phase 2: Post-Installation Setup","text":"<p>Complete the following configuration steps:</p>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-21-create-the-https-connection-record","title":"Step 2.1: Create the HTTP(s) Connection Record","text":"<p>Configure the primary connection to your NetBox instance:</p> <ol> <li>Required Fields:</li> <li>Name: <code>NetBox API</code> \u26a0\ufe0f (case sensitive and must match exactly</li> <li>Connection Alias: <code>x_990381_netbox_cl.NetBox_API</code></li> <li>Host: Your NetBox instance hostname or IP address</li> <li> <p>Connection URL: <code>https://instanceNameOrIP</code> \u26a0\ufe0f (no trailing slash)</p> </li> <li> <p>MID Server Configuration (NetBox Enterprise Only):</p> </li> <li>Select Use MID if your NetBox instance is only accessible through a MID server</li> <li> <p>Configure MID server parameters as needed</p> </li> <li> <p>Save the Record</p> </li> <li>Save the connection record</li> <li>Mark the step as complete</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-22-optional-https-connection-setup","title":"Step 2.2: (Optional) HTTP(s) Connection Setup","text":"<ul> <li>This step allows you to modify connection parameters if needed later in the setup</li> <li>Return to this step if connection adjustments are required</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-23-create-application-parameters","title":"Step 2.3: Create Application Parameters","text":"<p>Configure application parameters based on your installation scenario:</p> <p>For New Installations: - When prompted: \"No existing NetBox parameters detected, this looks like a new install. Parameters will be created after pressing Save\" - Press Save to create new parameters with default values</p> <p>For Existing Installations: - The system displays the number of existing parameters - Choose whether to overwrite existing parameters with default values - Missing parameters will be automatically recreated with default values</p>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-24-setup-temporary-admin-connection-to-netbox","title":"Step 2.4: Setup Temporary Admin Connection to NetBox","text":"<p>Establish elevated access for configuration:</p> <ol> <li>Purpose and Security</li> <li>Creates temporary elevated privileges on your NetBox instance for automated configuration</li> <li>This temporary channel enables ServiceNow to configure NetBox during setup</li> <li>Important: The channel is automatically removed at the end of setup</li> <li> <p>Only low-privilege accounts remain after completion</p> </li> <li> <p>Configuration</p> </li> <li>Follow on-screen instructions to establish the temporary communication channel</li> <li>Provide temporary admin credentials for your NetBox instance</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-25-setup-servicenow-to-netbox-credentials","title":"Step 2.5: Setup ServiceNow to NetBox Credentials","text":"<p>Create credentials for ServiceNow to access NetBox API:</p> <ol> <li>Create API Credentials on NetBox</li> <li> <p>Configure the following fields:</p> <ul> <li>Username: Set appropriate username</li> <li>Password: Set secure password  </li> <li>API Token: Generate API token</li> </ul> </li> <li> <p>Critical API Token Requirements</p> </li> <li>\u26a0\ufe0f MANDATORY: The API Token MUST be a hexadecimal string of exactly 32 characters</li> <li> <p>Example format: <code>a1b2c3d4e5f67890abcdef1234567890</code></p> </li> <li> <p>Troubleshooting Connection Issues</p> </li> <li>If errors occur, verify:<ul> <li>API Token format (32-character hexadecimal string)</li> <li>HTTP(s) connection record configuration (Step 2.1)</li> <li>Temporary admin credentials (Step 2.4)</li> </ul> </li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-26-associate-credentials","title":"Step 2.6: Associate Credentials","text":"<p>Link credentials to the connection record:</p> <ol> <li>Manual Association Required</li> <li>Follow on-screen instructions to manually associate the credentials created in Step 2.5</li> <li>Link to the HTTP(s) Connection record created in Step 2.1</li> <li>Remember to save before proceeding to the next step</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-27-setup-netbox-to-servicenow-credentials","title":"Step 2.7: Setup NetBox to ServiceNow Credentials","text":"<p>Create credentials for NetBox to access ServiceNow API:</p> <ol> <li>Create ServiceNow API Access</li> <li> <p>Configure the following:</p> <ul> <li>Username: Set appropriate username (modifiable)</li> <li>Password: Set secure password (modifiable)</li> <li>API Key: Automatically generated (do not modify)</li> </ul> </li> <li> <p>Integration Notes</p> </li> <li>Credentials are stored locally and in your NetBox instance</li> <li> <p>ServiceNow credentials are stored in NetBox webhook headers</p> </li> <li> <p>Troubleshooting</p> </li> <li>If errors occur, verify:<ul> <li>HTTP(s) connection record configuration (Step 2.1)</li> <li>Temporary admin credentials (Step 2.4)</li> </ul> </li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#step-28-test-connections","title":"Step 2.8: Test Connections","text":"<p>Validate bidirectional connectivity:</p> <ol> <li>Connection Testing</li> <li>Test ServiceNow to NetBox communication</li> <li>Test NetBox to ServiceNow communication</li> <li> <p>Verify API responses and authentication</p> </li> <li> <p>Validation Steps</p> </li> <li>Confirm all connection parameters are correct</li> <li>Validate credential associations</li> <li>Monitor for any errors or warnings</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-installation/#common-installation-issues","title":"Common Installation Issues","text":"Issue Possible Cause Solution Update Set Import Fails File corruption or version mismatch Re-download update set from NetBox Labs Plugin Installation Errors Missing dependencies or insufficient permissions Verify ServiceNow admin privileges and dependency requirements Connection Test Fails Network connectivity or firewall issues Check network configuration and firewall rules API Token Rejected Incorrect token format Ensure API token is exactly 32 hexadecimal characters Credential Association Fails Timing or configuration issues Retry association after verifying all previous steps Temporary Admin Channel Failed Invalid NetBox admin credentials Verify NetBox admin credentials and permissions"},{"location":"netbox-integrations/servicenow/snow-technical-info/","title":"Technical Information","text":""},{"location":"netbox-integrations/servicenow/snow-technical-info/#new-tables-in-servicenow","title":"New Tables in ServiceNow","text":"<p>The NetBox CMDB Integration application creates several new tables in ServiceNow for staging imported data from NetBox:</p>"},{"location":"netbox-integrations/servicenow/snow-technical-info/#import-set-tables","title":"Import Set Tables","text":"Table Name Purpose Key Fields <code>x_990381_netbox_cl_devices_import_set</code> Staging table for NetBox devices Device name, serial, asset tag, device type, site, location, status <code>x_990381_netbox_cl_device_types_import_set</code> Staging table for NetBox device types Model, manufacturer, height, weight, specifications <code>x_990381_netbox_cl_netbox_sites_import</code> Staging table for NetBox sites Site name, description, physical address, contact information <code>x_990381_netbox_cl_netbox_regions_import</code> Staging table for NetBox regions Region name, description, hierarchy <code>x_990381_netbox_cl_netbox_clients_import</code> Staging table for NetBox tenants/clients Client name, description, contact details <code>x_990381_netbox_cl_netbox_departments_imports</code> Staging table for NetBox departments Department information and organizational structure <code>x_990381_netbox_cl_netbox_manufacturers_import</code> Staging table for NetBox manufacturers Manufacturer name, description, contact information <code>x_990381_netbox_cl_netbox_notification_queue</code> Queue for NetBox notifications Notification type, status, payload <code>x_990381_netbox_cl_netbox_parameters</code> Configuration parameters Parameter name, value, description"},{"location":"netbox-integrations/servicenow/snow-technical-info/#extended-servicenow-tables","title":"Extended ServiceNow Tables","text":"<p>The application extends existing ServiceNow tables with NetBox-specific fields:</p>"},{"location":"netbox-integrations/servicenow/snow-technical-info/#configuration-item-cmdb_ci","title":"Configuration Item (cmdb_ci)","text":"Field Name Type Purpose <code>x_990381_netbox_cl_netbox_correlation_id</code> String Unique identifier linking ServiceNow CI to NetBox object <code>x_990381_netbox_cl_netbox_synchronize</code> Boolean Flag indicating if CI should be synchronized with NetBox"},{"location":"netbox-integrations/servicenow/snow-technical-info/#location-cmn_location","title":"Location (cmn_location)","text":"Field Name Type Purpose <code>x_990381_netbox_cl_netbox_correlation_id</code> String Unique identifier linking ServiceNow location to NetBox location <code>x_990381_netbox_cl_netbox_synchronize</code> Boolean Flag indicating if location should be synchronized with NetBox <code>x_990381_netbox_cl_level</code> Integer Hierarchical level in NetBox location structure"},{"location":"netbox-integrations/servicenow/snow-technical-info/#hardware-product-model-cmdb_hardware_product_model","title":"Hardware Product Model (cmdb_hardware_product_model)","text":"Field Name Type Purpose <code>x_990381_netbox_cl_netbox_correlation_id</code> String Links ServiceNow model to NetBox device type <code>x_990381_netbox_cl_netbox_synchronize</code> Boolean Flag indicating if location should be synchronized with NetBox"},{"location":"netbox-integrations/servicenow/snow-technical-info/#department-cmn_department","title":"Department (cmn_department)","text":"Field Name Type Purpose <code>x_990381_netbox_cl_netbox_correlation_id</code> String Links ServiceNow department to NetBox tenant <code>x_990381_netbox_cl_netbox_synchronize</code> Boolean Flag indicating if location should be synchronized with NetBox"},{"location":"netbox-integrations/servicenow/snow-technical-info/#company-core_company","title":"Company (core_company)","text":"Field Name Type Purpose <code>x_990381_netbox_cl_netbox_correlation_id</code> String Links ServiceNow company to NetBox organization <code>x_990381_netbox_cl_netbox_synchronize</code> Boolean Flag indicating if location should be synchronized with NetBox"},{"location":"netbox-integrations/servicenow/snow-technical-info/#data-synchronization-flow","title":"Data Synchronization Flow","text":"<ol> <li>Import Phase: NetBox data is retrieved via API and staged in import set tables</li> <li>Transform Phase: Import set processors transform and validate data according to mapping rules</li> <li>Load Phase: Transformed data is inserted/updated in target ServiceNow tables</li> <li>Correlation Phase: NetBox correlation IDs are maintained for bidirectional synchronization</li> <li>Export Phase: ServiceNow changes are propagated back to NetBox when synchronization is enabled</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-upgrading/","title":"Upgrades and Bug Fixes","text":""},{"location":"netbox-integrations/servicenow/snow-upgrading/#distribution-and-installation","title":"Distribution and Installation","text":"<p>Upgrades, patches, and hotfixes for the NetBox CMDB Integration application are distributed through XML update sets, which can be obtained from NetBox Labs support.</p>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#critical-review-update-status","title":"Critical: Review Update Status","text":"<p>After committing any update set, it is essential to review the update status for potential skipped records:</p> <ol> <li>Access Update Status</li> <li>Navigate to All &gt; Upgrade Center &gt; Upgrade History</li> <li> <p>Click on the related list link in colomn \"Skipped\"</p> </li> <li> <p>Identify Skipped Records</p> </li> <li>Skipped records indicate potential conflicts or issues</li> <li> <p>Common causes include:</p> <ul> <li>Local customizations conflicting with updates</li> <li>Missing dependencies</li> <li>Permission restrictions</li> <li>Data validation failures</li> </ul> </li> <li> <p>Resolution Actions</p> </li> <li>Review each skipped record individually</li> <li>Determine if manual intervention is required</li> <li>Consult with your system administrator if needed</li> <li> <p>Document any unresolved skips for support escalation</p> </li> <li> <p>ServiceNow Documentation</p> </li> <li>For detailed guidance on handling skipped records, refer to the official ServiceNow documentation.</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#update-types-and-considerations","title":"Update Types and Considerations","text":""},{"location":"netbox-integrations/servicenow/snow-upgrading/#major-version-upgrades","title":"Major Version Upgrades","text":"<ul> <li>Planning Required: May include significant changes to data model or functionality</li> <li>Testing Recommended: Test in development environment before production deployment</li> <li>Backup Advised: Create system backup before applying major updates</li> <li>Documentation Review: Review release notes for breaking changes or new requirements</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#patches-and-minor-updates","title":"Patches and Minor Updates","text":"<ul> <li>Focused Changes: Target specific issues or improvements</li> <li>Lower Risk: Generally safer to apply directly to production</li> <li>Cumulative: May include fixes from previous patches</li> <li>Quick Deployment: Usually faster to install and commit</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#hotfixes","title":"Hotfixes","text":"<ul> <li>Urgent Nature: Address critical issues requiring immediate attention</li> <li>Emergency Process: May bypass standard testing procedures</li> <li>Limited Scope: Focus on specific critical problems</li> <li>Rapid Deployment: Prioritized for quick resolution</li> </ul>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#best-practices-for-updates","title":"Best Practices for Updates","text":""},{"location":"netbox-integrations/servicenow/snow-upgrading/#pre-update-preparation","title":"Pre-Update Preparation","text":"<ol> <li>Environment Assessment</li> <li>Document current application version</li> <li>Note any local customizations</li> <li> <p>Review system compatibility</p> </li> <li> <p>Backup Strategy</p> </li> <li>Create update set backup of current configuration</li> <li>Document critical business processes</li> <li> <p>Ensure rollback plan is available</p> </li> <li> <p>Testing Protocol</p> </li> <li>Test updates in development environment when possible</li> <li>Validate core functionality after update</li> <li>Verify integration points remain functional</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#during-update-process","title":"During Update Process","text":"<ol> <li>Monitoring</li> <li>Monitor system performance during installation</li> <li>Watch for error messages or warnings</li> <li> <p>Document any unexpected behavior</p> </li> <li> <p>Communication</p> </li> <li>Notify relevant stakeholders of update schedule</li> <li>Coordinate with business users for testing</li> <li>Maintain communication with NetBox Labs support if needed</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#post-update-validation","title":"Post-Update Validation","text":"<ol> <li>Functional Testing</li> <li>Test core synchronization processes</li> <li>Verify API connectivity remains stable</li> <li> <p>Validate data integrity between systems</p> </li> <li> <p>Performance Monitoring</p> </li> <li>Monitor system performance for any degradation</li> <li>Check integration hub flow execution</li> <li> <p>Review system logs for new errors or warnings</p> </li> <li> <p>User Acceptance</p> </li> <li>Coordinate with business users for validation</li> <li>Gather feedback on any functional changes</li> <li>Address any user-reported issues promptly</li> </ol>"},{"location":"netbox-integrations/servicenow/snow-upgrading/#troubleshooting-update-issues","title":"Troubleshooting Update Issues","text":"Issue Possible Cause Resolution Update Set Import Fails File corruption or incompatible version Re-download from NetBox Labs Preview Shows Conflicts Local customizations conflict with updates Review conflicts and resolve manually Commit Fails Dependency issues or permission problems Check dependencies and admin privileges Records Skipped Data validation or conflict issues Review skipped records per ServiceNow documentation Post-Update Errors Configuration mismatches Verify configuration and consult support Performance Degradation Resource conflicts or inefficient changes Monitor system resources and contact support"},{"location":"sdks/pynetbox/","title":"NetBox SDKs","text":""},{"location":"sdks/pynetbox/#pynetbox","title":"Pynetbox","text":"<p>Python API client library for NetBox.</p> <p>Note: Version 6.7 and later of the library only supports NetBox 3.3 and above.</p> <p>This guide will help you get started, but for more information, see the Pynetbox Git Repository</p>"},{"location":"sdks/pynetbox/#installation","title":"Installation","text":"<p>To install run <code>pip install pynetbox</code>.</p> <p>Alternatively, you can clone the repo and run <code>python setup.py install</code>.</p>"},{"location":"sdks/pynetbox/#quick-start","title":"Quick Start","text":"<p>The full pynetbox API is documented on Read the Docs, but the following should be enough to get started using it.</p> <p>To begin, import pynetbox and instantiate the API.</p> <pre><code>import pynetbox\nnb = pynetbox.api(\n    'http://localhost:8000',\n    token='d6f4e314a5b5fefd164995169f28ae32d987704f'\n)\n</code></pre> <p>The first argument the .api() method takes is the NetBox URL. There are a handful of named arguments you can provide, but in most cases none are required to simply pull data. In order to write, the <code>token</code> argument should to be provided.</p>"},{"location":"sdks/pynetbox/#queries","title":"Queries","text":"<p>The pynetbox API is setup so that NetBox's apps are attributes of the <code>.api()</code> object, and in turn those apps have attribute representing each endpoint. Each endpoint has a handful of methods available to carry out actions on the endpoint. For example, in order to query all the objects in the <code>devices</code> endpoint you would do the following:</p> <pre><code>&gt;&gt;&gt; devices = nb.dcim.devices.all()\n&gt;&gt;&gt; for device in devices:\n...     print(device.name)\n...\ntest1-leaf1\ntest1-leaf2\ntest1-leaf3\n&gt;&gt;&gt;\n</code></pre> <p>Note that the all() and filter() methods are generators and return an object that can be iterated over only once.  If you are going to be iterating over it repeatedly you need to either call the all() method again, or encapsulate the results in a <code>list</code> object like this: <pre><code>&gt;&gt;&gt; devices = list(nb.dcim.devices.all())\n</code></pre></p>"},{"location":"sdks/pynetbox/#threading","title":"Threading","text":"<p>pynetbox supports multithreaded calls for <code>.filter()</code> and <code>.all()</code> queries. It is highly recommended you have <code>MAX_PAGE_SIZE</code> in your Netbox install set to anything except <code>0</code> or <code>None</code>. The default value of <code>1000</code> is usually a good value to use. To enable threading, add <code>threading=True</code> parameter to the <code>.api</code>:</p> <pre><code>nb = pynetbox.api(\n    'http://localhost:8000',\n    threading=True,\n)\n</code></pre> <p>Alternative Library</p> <p>For those interested in a different approach, there is an alternative Python API client library available for NetBox called netbox-python. This library provides a thin Python wrapper over the NetBox API.</p> <p>netbox-python offers a minimalistic interface to interact with NetBox's API. While it may not provide all the features available in pynetbox, it offers a lightweight and straightforward option for interfacing with NetBox.</p> <p>To explore further details and access the documentation, please visit the netbox-python.</p>"}]}