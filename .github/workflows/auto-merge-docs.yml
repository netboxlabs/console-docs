name: Auto-merge Documentation Updates

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: >
      github.actor == 'github-actions[bot]' &&
      startsWith(github.head_ref, 'automated-docs-update') &&
      contains(github.event.pull_request.labels.*.name, 'automated')
    permissions:
      contents: write
      pull-requests: write
      checks: read

    steps:
      - name: Wait for deployment checks
        uses: actions/github-script@v7
        id: wait-for-checks
        with:
          script: |
            const maxWaitTime = 10 * 60 * 1000; // 10 minutes
            const pollInterval = 15 * 1000; // 15 seconds
            const startTime = Date.now();
            
            while (Date.now() - startTime < maxWaitTime) {
              const { data: checks } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.payload.pull_request.head.sha,
              });
              
              // Look for Vercel deployment check (common names)
              const vercelCheck = checks.check_runs.find(check => 
                check.name.includes('vercel') || 
                check.name.includes('deployment') ||
                check.name.includes('deploy') ||
                check.name.includes('build')
              );
              
              console.log(`Found ${checks.check_runs.length} checks`);
              checks.check_runs.forEach(check => {
                console.log(`- ${check.name}: ${check.status} (${check.conclusion})`);
              });
              
              if (vercelCheck) {
                if (vercelCheck.status === 'completed') {
                  if (vercelCheck.conclusion === 'success') {
                    console.log('‚úÖ Deployment check passed');
                    core.setOutput('checks_passed', 'true');
                    return;
                  } else {
                    console.log(`‚ùå Deployment check failed: ${vercelCheck.conclusion}`);
                    core.setOutput('checks_passed', 'false');
                    return;
                  }
                } else {
                  console.log(`‚è≥ Deployment check still running: ${vercelCheck.status}`);
                }
              } else {
                console.log('‚è≥ No deployment checks found yet, waiting...');
              }
              
              await new Promise(resolve => setTimeout(resolve, pollInterval));
            }
            
            console.log('‚è∞ Timeout waiting for checks');
            core.setOutput('checks_passed', 'false');

      - name: Enable auto-merge
        if: steps.wait-for-checks.outputs.checks_passed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Enable GitHub's auto-merge feature
              await github.rest.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });

              const { data: pr } = await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                auto_merge: {
                merge_method: 'squash'
                }
              });

              // Auto-approve the PR
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'APPROVE',
                body: 'ü§ñ **Auto-approved**: Automated documentation update passed all deployment checks.\n\n‚úÖ Vercel deployment successful\n‚úÖ Documentation transformation verified\n‚úÖ No conflicts detected'
              });

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                body: 'ü§ñ **Auto-merge enabled**: This PR will automatically merge once all required status checks pass.\n\n‚úÖ Deployment checks passed\n‚úÖ Auto-approval granted\n‚úÖ Ready for merge'
                });

              console.log('‚úÖ Auto-merge enabled successfully');
              
            } catch (error) {
              console.error('Failed to enable auto-merge:', error);
              
              // Check if it's a branch protection issue
              const isProtectionError = error.message.includes('protected') || 
                                       error.message.includes('required') || 
                                       error.message.includes('review');
              
              let message = '';
              if (isProtectionError) {
                message = 'üõ°Ô∏è **Branch Protection**: Auto-merge blocked by branch protection rules.\n\n‚úÖ **All checks passed** - Ready for manual review and merge.\n\n**Next Steps:**\n- Review the automated documentation changes\n- Approve if changes look correct\n- Merge when ready';
              } else {
                message = `‚ö†Ô∏è **Auto-merge setup failed**: ${error.message}\n\nThis PR requires manual review and merging.`;
              }
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
            }

      - name: Handle failed checks
        if: steps.wait-for-checks.outputs.checks_passed == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: '‚ùå **Auto-merge blocked**: Deployment checks failed.\n\nThis automated documentation update requires manual review before merging.\n\nPlease check the failed deployment and resolve any issues.'
            }); 